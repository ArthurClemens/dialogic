{"version":3,"file":"dialogic-mithril.js","sources":["../../dialogic/dist/dialogic.mjs"],"sourcesContent":["const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(transitionClassNames.showStart, transitionClassNames.showEnd, transitionClassNames.hideStart, transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, styles) => {\r\n    const transitionStyle = styles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        domElement.style[key] = transitionStyle[key];\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => domElement.style.transitionDuration = \"0ms\";\r\nconst getTransitionStyles = (domElement, styles) => (typeof styles === \"function\"\r\n    ? styles(domElement)\r\n    : styles) || {};\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.styles) {\r\n        const styles = getTransitionStyles(domElement, props.styles);\r\n        applyTransitionStyles(domElement, \"default\", styles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, styles);\r\n    }\r\n    if (props.className) {\r\n        const transitionClassNames = {\r\n            showStart: `${props.className}-show-start`,\r\n            showEnd: `${props.className}-show-end`,\r\n            hideStart: `${props.className}-hide-start`,\r\n            hideEnd: `${props.className}-hide-end`\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames && domElement.classList.add(transitionClassNames[step]);\r\n    }\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n    const delayValue = delayStyleValue !== undefined\r\n        ? styleDurationToMs(delayStyleValue)\r\n        : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: \"showEnd\"\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined\r\n    },\r\n    hideStart: {\r\n        nextStep: \"hideEnd\"\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    let currentStep = mode === MODE.SHOW\r\n        ? \"showStart\"\r\n        : \"hideStart\";\r\n    return new Promise(resolve => {\r\n        const onEnd = () => {\r\n            domElement.removeEventListener(\"transitionend\", onEnd, false);\r\n            resolve();\r\n        };\r\n        applyStylesForState(domElement, props, currentStep, currentStep === \"showStart\");\r\n        const nextStep = steps[currentStep].nextStep;\r\n        if (nextStep) {\r\n            setTimeout(() => {\r\n                currentStep = nextStep;\r\n                domElement.addEventListener(\"transitionend\", onEnd, false);\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // Due to incorrect CSS usage, ontransitionend may not be fired\r\n                // Using a timeout ensures completion\r\n                const duration = getDuration(domElement);\r\n                if (duration == 0) {\r\n                    setTimeout(onEnd, duration);\r\n                }\r\n            }, 0);\r\n        }\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(identityOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = identityOptions !== undefined\r\n                    ? identityOptions.spawn\r\n                    : undefined;\r\n                const id = identityOptions !== undefined\r\n                    ? identityOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    timerId: undefined,\r\n    isPaused: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    callback: () => { },\r\n    timeoutFn: () => { },\r\n    promise: undefined,\r\n    onDone: () => { },\r\n    onAbort: () => { },\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendPauseTimer(state),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    none: \"none\",\r\n    hiding: \"hiding\"\r\n};\r\nconst filterBySpawnOption = (identityOptions) => (nsItems) => nsItems.filter(item => item.identityOptions.spawn === identityOptions.spawn);\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.dialogicOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, identityOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    return pipe(filterFirstInQueue, filterBySpawnOption(identityOptions))(nsItems);\r\n};\r\nconst getPassThroughOptions = options => ({\r\n    ...options,\r\n    dialogicOptions: undefined\r\n});\r\nconst getMergedIdentityOptions = (defaultOptions, identityOptions) => ({\r\n    id: defaultOptions.id,\r\n    spawn: defaultOptions.spawn,\r\n    ...identityOptions,\r\n});\r\nconst createInstance = (ns) => (defaultOptions) => (options = {}, identityOptions) => {\r\n    return new Promise(resolve => {\r\n        const mergedIdentityOptions = getMergedIdentityOptions(defaultOptions, identityOptions);\r\n        const dialogicOptions = {\r\n            ...defaultOptions.dialogic,\r\n            ...options.dialogic\r\n        };\r\n        const passThroughOptions = getPassThroughOptions(options);\r\n        const callbacks = {\r\n            didShow: (item) => {\r\n                if (dialogicOptions.didShow) {\r\n                    dialogicOptions.didShow(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n            didHide: (item) => {\r\n                if (dialogicOptions.didHide) {\r\n                    dialogicOptions.didHide(item);\r\n                }\r\n                return resolve(item);\r\n            }\r\n        };\r\n        const item = {\r\n            ns,\r\n            identityOptions: mergedIdentityOptions,\r\n            dialogicOptions,\r\n            callbacks,\r\n            passThroughOptions,\r\n            id: createId(mergedIdentityOptions, ns),\r\n            timer: dialogicOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: getUid().toString(),\r\n            transitionState: transitionStates.none,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, mergedIdentityOptions);\r\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve dialogicOptions\r\n            const dialogicOptions = existingItem.dialogicOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                dialogicOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n            // While this is a replace action, mimic a show\r\n            callbacks.didShow && callbacks.didShow(item);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst toggle = (ns) => (defaultOptions) => (options, identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        return hide(ns)(defaultOptions)(identityOptions);\r\n    }\r\n    else {\r\n        return show(ns)(defaultOptions)(options, identityOptions);\r\n    }\r\n};\r\nconst getMaybeItem = (ns) => (defaultOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultOptions, identityOptions));\r\nconst performOnItem = fn => ns => defaultOptions => (identityOptions, fnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, fnOptions);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        item.transitionState = transitionStates.hiding;\r\n        return hideItem(item);\r\n    }\r\n    else {\r\n        return Promise.resolve(item);\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst resume = performOnItem((ns, item, fnOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(fnOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst exists = (ns) => (defaultOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultOptions)(identityOptions);\r\n    return !!maybeItem.just;\r\n};\r\nconst resetAll = (ns) => () => {\r\n    selectors.getAll(ns).forEach((item) => item.timer && item.timer.actions.abort());\r\n    actions.removeAll(ns);\r\n    return Promise.resolve();\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    return {\r\n        ...item,\r\n        dialogicOptions: {\r\n            ...item.dialogicOptions,\r\n            ...options\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `options` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (dialogicOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    const regularItems = allItems.filter((item) => !dialogicOptions.queued && !item.dialogicOptions.queued);\r\n    const queuedItems = allItems.filter((item) => dialogicOptions.queued || item.dialogicOptions.queued);\r\n    regularItems.forEach((item) => hideItem(getOverridingTransitionOptions(item, dialogicOptions)));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        hideItem(getOverridingTransitionOptions(current, dialogicOptions))\r\n            .then(() => actions.removeAll(ns));\r\n    }\r\n};\r\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\r\nconst transitionItem = (item, mode) => {\r\n    return transition(item.dialogicOptions, mode);\r\n};\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\");\r\n};\r\nconst showItem = async function (item) {\r\n    await (transitionItem(item, MODE.SHOW));\r\n    item.callbacks.didShow && await (item.callbacks.didShow(item));\r\n    if (item.dialogicOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.dialogicOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.callbacks.didHide && await (item.callbacks.didHide(item));\r\n    const copy = JSON.parse(JSON.stringify(item));\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.dialogicOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        dialogic: {\r\n            ...(queued && { queued }),\r\n            ...(timeout !== undefined && { timeout }),\r\n        }\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultOptions,\r\n        // Commands\r\n        show: show(ns)(defaultOptions),\r\n        toggle: toggle(ns)(defaultOptions),\r\n        hide: hide(ns)(defaultOptions),\r\n        hideAll: hideAll(ns),\r\n        resetAll: resetAll(ns),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultOptions),\r\n        resume: resume(ns)(defaultOptions),\r\n        // State\r\n        exists: exists(ns)(defaultOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, performOnItem, resetAll, resume, selectors, setDomElement, show, showItem, states, toggle };\n//# sourceMappingURL=dialogic.mjs.map\n"],"names":["getStyleValue","domElement","prop","window","getComputedStyle","defaultView","document","style","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","Object","keys","forEach","key","applyStylesForState","props","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","className","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","add","steps","nextStep","undefined","transition","mode","Promise","resolve","currentStep","onEnd","removeEventListener","setTimeout","addEventListener","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","indexOf","isNaN","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","map","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","i","warnedHalt","value","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","x","s1","s2","_unregisterChild","child","childIndex","splice","defineProperty","get","p","ready","every","Error","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","filter","Boolean","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","fns","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","timerId","isPaused","startTime","callback","timeoutFn","promise","onDone","onAbort","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","filterFirstInQueue","nsItems","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","reduce","y","f","pipe","filterBySpawnOption","getMergedIdentityOptions","defaultOptions","show","options","mergedIdentityOptions","dialogic","passThroughOptions","getPassThroughOptions","callbacks","didShow","didHide","timeout","toString","transitionState","maybeExistingItem","existingItem","replacingItem","toggle","getMaybeItem","hide","performOnItem","fnOptions","maybeItem","hideItem","getTimerProperty","timerProp","getRemaining$1","exists","resetAll","getOverridingTransitionOptions","hideAll","allItems","regularItems","queuedItems","current","then","transitionItem","showItem","async","copy","JSON","parse","stringify","dialogical","defaultId","defaultSpawn","dialog","notification"],"mappings":"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"}
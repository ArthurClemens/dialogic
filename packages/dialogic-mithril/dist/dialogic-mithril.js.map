{"version":3,"file":"dialogic-mithril.js","sources":["../../dialogic/dist/dialogic.mjs"],"sourcesContent":["const MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst transitionOptionKeys = {\r\n    className: true,\r\n    component: true,\r\n    didHide: true,\r\n    didShow: true,\r\n    hideDelay: true,\r\n    hideDuration: true,\r\n    hideTimingFunction: true,\r\n    showClassName: true,\r\n    showDelay: true,\r\n    showDuration: true,\r\n    showTimingFunction: true,\r\n    timeout: true,\r\n    transitionClassName: true,\r\n    transitions: true,\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElements\r\n        ? props.domElements.domElement\r\n        : null;\r\n    if (!domElement) {\r\n        throw new Error(\"No DOM element\");\r\n    }\r\n    return new Promise(resolve => {\r\n        const style = domElement.style;\r\n        const computedStyle =  window.getComputedStyle(domElement)\r\n            ;\r\n        const isShow = mode === MODE.SHOW;\r\n        const transitionProps = getTransitionProps(props, isShow);\r\n        const duration = transitionProps.duration !== undefined\r\n            ? transitionProps.duration * 1000\r\n            : computedStyle\r\n                ? styleDurationToMs(computedStyle.transitionDuration)\r\n                : 0;\r\n        const delay = transitionProps.delay !== undefined\r\n            ? transitionProps.delay * 1000\r\n            : computedStyle\r\n                ? styleDurationToMs(computedStyle.transitionDelay)\r\n                : 0;\r\n        const totalDuration = duration + delay;\r\n        const before = () => {\r\n            if (transitionProps.before && typeof transitionProps.before === \"function\") {\r\n                style.transitionDuration = \"0ms\";\r\n                style.transitionDelay = \"0ms\";\r\n                transitionProps.before();\r\n            }\r\n        };\r\n        const after = () => {\r\n            if (transitionProps.after && typeof transitionProps.after === \"function\") {\r\n                transitionProps.after();\r\n            }\r\n        };\r\n        const applyTransition = () => {\r\n            // Set styles\r\n            const timingFunction = transitionProps.timingFunction\r\n                // or when set in CSS:\r\n                || (computedStyle\r\n                    ? computedStyle.transitionTimingFunction\r\n                    : undefined);\r\n            if (timingFunction) {\r\n                style.transitionTimingFunction = timingFunction;\r\n            }\r\n            style.transitionDuration = duration + \"ms\";\r\n            style.transitionDelay = delay + \"ms\";\r\n            // Set classes (need to be set after styles)\r\n            if (props.transitionClassName) {\r\n                domElement.classList.add(props.transitionClassName);\r\n            }\r\n            if (props.showClassName) {\r\n                const showClassElement = props.showClassElement || domElement;\r\n                showClassElement.classList[isShow ? \"add\" : \"remove\"](props.showClassName);\r\n            }\r\n            // Call transition function\r\n            if (transitionProps.transition) {\r\n                transitionProps.transition();\r\n            }\r\n        };\r\n        before();\r\n        applyTransition();\r\n        setTimeout(() => {\r\n            after();\r\n            if (props.transitionClassName) {\r\n                domElement.classList.remove(props.transitionClassName);\r\n            }\r\n            resolve();\r\n        }, totalDuration);\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\r\nconst getTransitionProps = (props, isShow) => {\r\n    const [duration, delay, timingFunction, transition] = isShow\r\n        ? [props.showDuration, props.showDelay, props.showTimingFunction, props.transitions ? props.transitions.show : undefined]\r\n        : [props.hideDuration, props.hideDelay, props.hideTimingFunction, props.transitions ? props.transitions.hide : undefined];\r\n    return {\r\n        duration,\r\n        delay,\r\n        timingFunction,\r\n        ...(transition\r\n            ? transition(props.domElements)\r\n            : undefined)\r\n    };\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (spawnOptions, ns) => [ns, spawnOptions.id, spawnOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, spawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(spawnOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, instanceSpawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = instanceSpawnOptions !== undefined\r\n                    ? instanceSpawnOptions.spawn\r\n                    : undefined;\r\n                return spawn !== undefined\r\n                    ? items.filter(item => item.spawnOptions.spawn === spawn)\r\n                    : items;\r\n            },\r\n            getCount: (ns, instanceSpawnOptions) => fns.getAll(ns, instanceSpawnOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    timerId: undefined,\r\n    isPaused: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    callback: () => { },\r\n    timeoutFn: () => { },\r\n    promise: undefined,\r\n    onDone: () => { },\r\n    onAbort: () => { },\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendPauseTimer(state),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    none: \"none\",\r\n    hiding: \"hiding\"\r\n};\r\nconst filterBySpawnId = (nsItems, spawn) => nsItems.filter(item => item.spawnOptions.spawn === spawn);\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterQueued = (nsItems, ns) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.spawnOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filter = (ns, items, spawn) => {\r\n    const nsItems = items[ns] || [];\r\n    return filterBySpawnId(filterQueued(nsItems), spawn);\r\n};\r\nconst getOptionsByKind = options => {\r\n    const initial = {\r\n        transitionOptions: {},\r\n        instanceOptions: {}\r\n    };\r\n    return Object.keys(options).reduce((acc, key) => {\r\n        const value = options[key];\r\n        const isTransitionKey = transitionOptionKeys[key];\r\n        if (isTransitionKey) {\r\n            acc.transitionOptions[key] = value;\r\n        }\r\n        else {\r\n            acc.instanceOptions[key] = value;\r\n        }\r\n        return acc;\r\n    }, initial);\r\n};\r\nconst createInstance = (ns) => (defaultSpawnOptions) => (defaultTransitionOptions) => (options, instanceSpawnOptions) => {\r\n    return new Promise((resolve) => {\r\n        const spawnOptions = {\r\n            ...defaultSpawnOptions,\r\n            ...instanceSpawnOptions,\r\n        };\r\n        const id = createId(spawnOptions, ns);\r\n        const { transitionOptions: instanceTransitionOptions, instanceOptions } = getOptionsByKind(options);\r\n        const transitionOptions = {\r\n            ...defaultTransitionOptions,\r\n            ...instanceTransitionOptions,\r\n        };\r\n        transitionOptions.didShow = (id) => {\r\n            if (options.didShow) {\r\n                options.didShow(id);\r\n            }\r\n            return resolve(id);\r\n        };\r\n        transitionOptions.didHide = (id) => {\r\n            if (options.didHide) {\r\n                options.didHide(id);\r\n            }\r\n            return resolve(id);\r\n        };\r\n        const uid = getUid().toString();\r\n        const item = {\r\n            spawnOptions,\r\n            transitionOptions,\r\n            instanceTransitionOptions,\r\n            instanceOptions,\r\n            id,\r\n            timer: transitionOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: uid,\r\n            transitionState: transitionStates.none,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, spawnOptions);\r\n        if (maybeExistingItem.just && !spawnOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve instanceTransitionOptions\r\n            const instanceTransitionOptions = existingItem.instanceTransitionOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                instanceTransitionOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n            // While this is a replace action, mimic a show\r\n            transitionOptions.didShow(spawnOptions.id);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst getMaybeItem = (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    return selectors.find(ns, spawnOptions);\r\n};\r\nconst performOnItem = fn => ns => defaultSpawnOptions => (instanceSpawnOptions, fnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, fnOptions);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        item.transitionState = transitionStates.hiding;\r\n        return hideItem(ns, item);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve();\r\n});\r\nconst resume = performOnItem((ns, item, fnOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(fnOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve();\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst resetAll = (ns) => () => {\r\n    selectors.getAll(ns).forEach((item) => item.timer && item.timer.actions.abort());\r\n    actions.removeAll(ns);\r\n    return Promise.resolve();\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    const { transitionOptions } = getOptionsByKind(options);\r\n    return {\r\n        ...item,\r\n        transitionOptions: {\r\n            ...item.transitionOptions,\r\n            ...transitionOptions\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `options` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (defaultSpawnOptions) => (options, instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    const allItems = selectors.getAll(ns);\r\n    const regularItems = allItems.filter((item) => !spawnOptions.queued && !item.spawnOptions.queued);\r\n    const queuedItems = allItems.filter((item) => spawnOptions.queued || item.spawnOptions.queued);\r\n    regularItems.forEach((item) => hideItem(ns, getOverridingTransitionOptions(item, options)));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        hideItem(ns, getOverridingTransitionOptions(current, options))\r\n            .then(() => actions.removeAll(ns));\r\n    }\r\n};\r\n/**\r\n * Stop any running timer and remmove the item\r\n */\r\nconst resetItem = (item, ns) => {\r\n    item.timer && item.timer.actions.abort();\r\n    actions.remove(ns, item.id);\r\n};\r\nconst getCount = (ns) => (instanceSpawnOptions) => selectors.getCount(ns, instanceSpawnOptions);\r\nconst transitionItem = (item, mode) => {\r\n    try {\r\n        return transition({\r\n            ...item.instanceTransitionOptions,\r\n            ...item.transitionOptions,\r\n        }, mode);\r\n    }\r\n    catch (e) {\r\n        throw new Error(`Transition error: ${e}`);\r\n    }\r\n};\r\nconst deferredHideItem = async function (ns, item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(ns, item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\"); // timer.selectors.getResultPromise();\r\n};\r\nconst showItem = async function (ns, item) {\r\n    await (transitionItem(item, MODE.SHOW));\r\n    item.transitionOptions.didShow && await (item.transitionOptions.didShow(item.spawnOptions.id));\r\n    if (item.transitionOptions.timeout && item.timer) {\r\n        await (deferredHideItem(ns, item, item.timer, item.transitionOptions.timeout));\r\n    }\r\n    return item.spawnOptions.id;\r\n};\r\nconst hideItem = async function (ns, item) {\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.transitionOptions.didHide && await (item.transitionOptions.didHide(item.spawnOptions.id));\r\n    actions.remove(ns, item.id);\r\n    return item.spawnOptions.id;\r\n};\n\nconst dialogicable = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultSpawnOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        queued\r\n    };\r\n    const defaultTransitionOptions = {\r\n        timeout\r\n    };\r\n    return {\r\n        defaultId,\r\n        defaultSpawn,\r\n        defaultSpawnOptions,\r\n        show: show(ns)(defaultSpawnOptions)(defaultTransitionOptions),\r\n        hide: hide(ns)(defaultSpawnOptions),\r\n        pause: pause(ns)(defaultSpawnOptions),\r\n        resume: resume(ns)(defaultSpawnOptions),\r\n        isPaused: isPaused(ns)(defaultSpawnOptions),\r\n        getMaybeItem: getMaybeItem(ns)(defaultSpawnOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultSpawnOptions),\r\n        hideAll: hideAll(ns)(defaultSpawnOptions),\r\n        resetAll: resetAll(ns),\r\n        getCount: getCount(ns),\r\n    };\r\n};\n\nconst dialog = dialogicable({ ns: \"dialog\" });\r\n// import { show as _show, hide as _hide, hideAll as _hideAll, resetAll as _resetAll, getCount as _getCount, pause as _pause, resume as _resume, isPaused as _isPaused, getRemaining as _getRemaining, getMaybeItem as _getMaybeItem } from \"./dialogic\";\r\n// import { Dialogic } from \"../index\";\r\n// export const ns = \"dialog\";\r\n// export const defaultId = `default_${ns}`;\r\n// export const defaultSpawn = `default_${ns}`;\r\n// export const defaultSpawnOptions: Dialogic.DefaultSpawnOptions = {\r\n//   id: defaultId,\r\n//   spawn: defaultSpawn,\r\n// };\r\n// const defaultTransitionOptions: Dialogic.DefaultTransitionOptions = {};\r\n// export const show = _show(ns)(defaultSpawnOptions)(defaultTransitionOptions);\r\n// export const hide = _hide(ns)(defaultSpawnOptions);\r\n// export const pause = _pause(ns)(defaultSpawnOptions);\r\n// export const resume = _resume(ns)(defaultSpawnOptions);\r\n// export const isPaused = _isPaused(ns)(defaultSpawnOptions);\r\n// export const getMaybeItem = _getMaybeItem(ns)(defaultSpawnOptions);\r\n// export const getRemaining = _getRemaining(ns)(defaultSpawnOptions);\r\n// export const hideAll = _hideAll(ns)(defaultSpawnOptions);\r\n// export const resetAll = _resetAll(ns);\r\n// export const getCount = _getCount(ns);\n\nconst notification = dialogicable({ ns: \"notification\", queued: true, timeout: 3000 });\r\n// import { show as _show, hide as _hide, hideAll as _hideAll, resetAll as _resetAll, getCount as _getCount, pause as _pause, resume as _resume, isPaused as _isPaused, getRemaining as _getRemaining, getMaybeItem as _getMaybeItem } from \"./dialogic\";\r\n// import { Dialogic } from \"../index\";\r\n// export const ns = \"notification\";\r\n// export const defaultId = `default_${ns}`;\r\n// export const defaultSpawn = `default_${ns}`;\r\n// export const defaultSpawnOptions: Dialogic.DefaultSpawnOptions = {\r\n//   id: defaultId,\r\n//   queued: true,\r\n//   spawn: defaultSpawn,\r\n// };\r\n// const defaultTransitionOptions: Dialogic.DefaultTransitionOptions = {\r\n//   timeout: 3000,\r\n// };\r\n// export const show = _show(ns)(defaultSpawnOptions)(defaultTransitionOptions);\r\n// export const hide = _hide(ns)(defaultSpawnOptions);\r\n// export const pause = _pause(ns)(defaultSpawnOptions);\r\n// export const resume = _resume(ns)(defaultSpawnOptions);\r\n// export const isPaused = _isPaused(ns)(defaultSpawnOptions);\r\n// export const getMaybeItem = _getMaybeItem(ns)(defaultSpawnOptions);\r\n// export const getRemaining = _getRemaining(ns)(defaultSpawnOptions);\r\n// export const hideAll = _hideAll(ns)(defaultSpawnOptions);\r\n// export const resetAll = _resetAll(ns);\r\n// export const getCount = _getCount(ns);\n\nexport { actions, dialog, filter, getCount, getMaybeItem, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, performOnItem, resetAll, resetItem, resume, selectors, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n"],"names":["MODE","transitionOptionKeys","className","component","didHide","didShow","hideDelay","hideDuration","hideTimingFunction","showClassName","showDelay","showDuration","showTimingFunction","timeout","transitionClassName","transitions","transition","props","mode","domElement","domElements","Error","Promise","resolve","style","computedStyle","window","getComputedStyle","isShow","transitionProps","getTransitionProps","duration","undefined","styleDurationToMs","transitionDuration","delay","transitionDelay","totalDuration","before","timingFunction","transitionTimingFunction","classList","add","showClassElement","applyTransition","setTimeout","after","remove","durationStr","parsed","parseFloat","indexOf","isNaN","show","hide","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","map","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","forEach","i","warnedHalt","value","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","x","s1","s2","_unregisterChild","child","childIndex","splice","Object","defineProperty","get","p","ready","every","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","spawnOptions","ns","spawn","filter","Boolean","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","fns","getStore","just","nothing","getAll","instanceSpawnOptions","getCount","patch","timerId","isPaused","startTime","callback","timeoutFn","promise","onDone","onAbort","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","getOptionsByKind","options","keys","reduce","key","transitionOptions","instanceOptions","defaultSpawnOptions","defaultTransitionOptions","instanceTransitionOptions","toString","transitionState","maybeExistingItem","queued","existingItem","replacingItem","getMaybeItem","performOnItem","fnOptions","maybeItem","hideItem","getTimerProperty","timerProp","getRemaining$1","resetAll","getOverridingTransitionOptions","hideAll","allItems","regularItems","queuedItems","current","then","transitionItem","e","showItem","async","dialogicable","defaultId","defaultSpawn","dialog","notification","nsItems","filterBySpawnId","queuedCount","queueCount","filterQueued"],"mappings":"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"}
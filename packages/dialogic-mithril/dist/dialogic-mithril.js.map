{"version":3,"file":"dialogic-mithril.js","sources":["../../dialogic/dist/dialogic.mjs"],"sourcesContent":["const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(transitionClassNames.showStart, transitionClassNames.showEnd, transitionClassNames.hideStart, transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, styles) => {\r\n    const transitionStyle = styles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        const value = transitionStyle[key].toString();\r\n        domElement.style[key] = value;\r\n        // if (domElement.style[key] !== value) {\r\n        // \tconsole.warn(`Invalid style: ${key}: ${value} (${domElement.style[key]})`);\r\n        // }\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => domElement.style.transitionDuration = \"0ms\";\r\nconst getTransitionStyles = (domElement, styles) => (typeof styles === \"function\"\r\n    ? styles(domElement)\r\n    : styles) || {};\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.styles) {\r\n        const styles = getTransitionStyles(domElement, props.styles);\r\n        applyTransitionStyles(domElement, \"default\", styles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, styles);\r\n    }\r\n    if (props.className) {\r\n        const transitionClassNames = {\r\n            showStart: `${props.className}-show-start`,\r\n            showEnd: `${props.className}-show-end`,\r\n            hideStart: `${props.className}-hide-start`,\r\n            hideEnd: `${props.className}-hide-end`\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames && domElement.classList.add(transitionClassNames[step]);\r\n    }\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n    const delayValue = delayStyleValue !== undefined\r\n        ? styleDurationToMs(delayStyleValue)\r\n        : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: \"showEnd\"\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined\r\n    },\r\n    hideStart: {\r\n        nextStep: \"hideEnd\"\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    let currentStep = mode === MODE.SHOW\r\n        ? \"showStart\"\r\n        : \"hideStart\";\r\n    return new Promise(resolve => {\r\n        applyStylesForState(domElement, props, currentStep, currentStep === \"showStart\");\r\n        const nextStep = steps[currentStep].nextStep;\r\n        if (nextStep) {\r\n            setTimeout(() => {\r\n                currentStep = nextStep;\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // addEventListener sometimes hangs this function because it never finishes\r\n                // Using setTimeout instead of addEventListener gives more consistent results\r\n                const duration = getDuration(domElement);\r\n                setTimeout(resolve, duration);\r\n            }, 0);\r\n        }\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(identityOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = identityOptions !== undefined\r\n                    ? identityOptions.spawn\r\n                    : undefined;\r\n                const id = identityOptions !== undefined\r\n                    ? identityOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    timerId: undefined,\r\n    isPaused: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    callback: () => { },\r\n    timeoutFn: () => { },\r\n    promise: undefined,\r\n    onDone: () => { },\r\n    onAbort: () => { },\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendPauseTimer(state),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    default: 0,\r\n    displayed: 1,\r\n    hiding: 2,\r\n};\r\nconst performOnItem = fn => ns => defaultDialogicOptions => (options) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(options);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, options);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultDialogicOptions, identityOptions));\r\nconst filterBySpawnOption = (identityOptions) => (nsItems) => (nsItems.filter(item => (item.identityOptions.spawn === identityOptions.spawn)));\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.dialogicOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, identityOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    if (nsItems.length == 0) {\r\n        return [];\r\n    }\r\n    return pipe(filterFirstInQueue, filterBySpawnOption(identityOptions))(nsItems);\r\n};\r\nconst getPassThroughOptions = options => {\r\n    const copy = {\r\n        ...options,\r\n    };\r\n    delete copy.dialogic;\r\n    return copy;\r\n};\r\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\r\n    id: identityOptions.id || defaultDialogicOptions.id,\r\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\r\n});\r\nconst createInstance = (ns) => (defaultDialogicOptions) => (options = {}) => {\r\n    return new Promise(resolve => {\r\n        const identityOptions = {\r\n            id: options.dialogic ? options.dialogic.id : undefined,\r\n            spawn: options.dialogic ? options.dialogic.spawn : undefined\r\n        };\r\n        const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions, identityOptions);\r\n        const dialogicOptions = {\r\n            ...defaultDialogicOptions,\r\n            ...options.dialogic\r\n        };\r\n        const passThroughOptions = getPassThroughOptions(options);\r\n        const callbacks = {\r\n            didShow: (item) => {\r\n                if (dialogicOptions.didShow) {\r\n                    dialogicOptions.didShow(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n            didHide: (item) => {\r\n                if (dialogicOptions.didHide) {\r\n                    dialogicOptions.didHide(item);\r\n                }\r\n                return resolve(item);\r\n            }\r\n        };\r\n        const item = {\r\n            ns,\r\n            identityOptions: mergedIdentityOptions,\r\n            dialogicOptions,\r\n            callbacks,\r\n            passThroughOptions,\r\n            id: createId(mergedIdentityOptions, ns),\r\n            timer: dialogicOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: getUid().toString(),\r\n            transitionState: transitionStates.default,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, mergedIdentityOptions);\r\n        if (maybeExistingItem.just && dialogicOptions.toggle) {\r\n            const hideResult = hide(ns)(defaultDialogicOptions)(identityOptions);\r\n            return resolve(hideResult);\r\n        }\r\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve dialogicOptions\r\n            const dialogicOptions = existingItem.dialogicOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                transitionState: existingItem.transitionState,\r\n                dialogicOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        item.transitionState = transitionStates.hiding;\r\n        return hideItem(item);\r\n    }\r\n    else {\r\n        return Promise.resolve(item);\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst resume = performOnItem((ns, item, commandOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(commandOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst exists = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    return !!maybeItem.just;\r\n};\r\nconst resetAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    const validItems = dialogicOptions\r\n        ? filterBySpawnOption({\r\n            ...defaultDialogicOptions,\r\n            ...dialogicOptions,\r\n        })(allItems)\r\n        : allItems;\r\n    const items = [];\r\n    validItems.forEach((item) => {\r\n        item.timer && item.timer.actions.abort();\r\n        items.push(item);\r\n    });\r\n    if (dialogicOptions) {\r\n        validItems.forEach((item) => {\r\n            actions.remove(ns, item.id);\r\n        });\r\n    }\r\n    else {\r\n        actions.removeAll(ns);\r\n    }\r\n    return Promise.resolve(items);\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    return {\r\n        ...item,\r\n        dialogicOptions: {\r\n            ...item.dialogicOptions,\r\n            ...options\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `dialogicOptions` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    const validItems = dialogicOptions\r\n        ? filterBySpawnOption({\r\n            ...defaultDialogicOptions,\r\n            ...dialogicOptions,\r\n        })(allItems)\r\n        : allItems;\r\n    const options = dialogicOptions || {};\r\n    const regularItems = validItems.filter((item) => !options.queued && !item.dialogicOptions.queued);\r\n    const queuedItems = validItems.filter((item) => options.queued || item.dialogicOptions.queued);\r\n    const items = [];\r\n    regularItems.forEach((item) => items.push(hideItem(getOverridingTransitionOptions(item, options))));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        items.push(hideItem(getOverridingTransitionOptions(current, options)));\r\n    }\r\n    return Promise.all(items);\r\n};\r\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\r\nconst transitionItem = (item, mode) => {\r\n    return transition(item.dialogicOptions, mode);\r\n};\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\");\r\n};\r\nconst showItem = async function (item) {\r\n    if (item.transitionState != transitionStates.displayed) {\r\n        await (transitionItem(item, MODE.SHOW));\r\n        item.transitionState = transitionStates.displayed;\r\n    }\r\n    item.callbacks.didShow && await (item.callbacks.didShow(item));\r\n    if (item.dialogicOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.dialogicOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.callbacks.didHide && await (item.callbacks.didHide(item));\r\n    const copy = JSON.parse(JSON.stringify(item));\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.dialogicOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultDialogicOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued }),\r\n        ...(timeout !== undefined && { timeout }),\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultDialogicOptions,\r\n        // Commands\r\n        show: show(ns)(defaultDialogicOptions),\r\n        hide: hide(ns)(defaultDialogicOptions),\r\n        hideAll: hideAll(ns)(defaultDialogicOptions),\r\n        resetAll: resetAll(ns)(defaultDialogicOptions),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultDialogicOptions),\r\n        resume: resume(ns)(defaultDialogicOptions),\r\n        // State\r\n        exists: exists(ns)(defaultDialogicOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultDialogicOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultDialogicOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, performOnItem, resetAll, resume, selectors, setDomElement, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n"],"names":["getStyleValue","domElement","prop","window","getComputedStyle","defaultView","document","style","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","Object","keys","forEach","key","value","toString","applyStylesForState","props","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","className","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","add","steps","nextStep","undefined","transition","mode","Promise","resolve","currentStep","setTimeout","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","indexOf","isNaN","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","map","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","i","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","x","s1","s2","_unregisterChild","child","childIndex","splice","defineProperty","get","p","ready","every","Error","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","filter","Boolean","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","fns","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","timerId","isPaused","startTime","callback","timeoutFn","promise","onDone","onAbort","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","performOnItem","defaultDialogicOptions","options","maybeItem","getMaybeItem","getMergedIdentityOptions","filterBySpawnOption","nsItems","filterFirstInQueue","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","reduce","y","f","pipe","show","dialogic","mergedIdentityOptions","passThroughOptions","copy","getPassThroughOptions","callbacks","didShow","didHide","timeout","transitionState","maybeExistingItem","toggle","hideResult","hide","existingItem","replacingItem","hideItem","commandOptions","getTimerProperty","timerProp","getRemaining$1","exists","resetAll","allItems","validItems","getOverridingTransitionOptions","hideAll","regularItems","queuedItems","current","all","transitionItem","showItem","async","JSON","parse","stringify","dialogical","defaultId","defaultSpawn","dialog","notification"],"mappings":"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"}
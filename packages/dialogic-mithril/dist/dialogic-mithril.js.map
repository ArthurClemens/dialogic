{"version":3,"file":"dialogic-mithril.js","sources":["../../dialogic/dist/dialogic.mjs"],"sourcesContent":["const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst transitionOptionKeys = {\r\n    component: true,\r\n    didHide: true,\r\n    didShow: true,\r\n    timeout: true,\r\n    transitionClassName: true,\r\n    transitionStyles: true,\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(transitionClassNames.showStart, transitionClassNames.showEnd, transitionClassNames.hideStart, transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, transitionStyles) => {\r\n    const transitionStyle = transitionStyles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        domElement.style[key] = transitionStyle[key];\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => domElement.style.transitionDuration = \"0ms\";\r\nconst getTransitionStyles = (domElement, transitionStyles) => (typeof transitionStyles === \"function\"\r\n    ? transitionStyles(domElement)\r\n    : transitionStyles) || {};\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.transitionStyles) {\r\n        const transitionStyles = getTransitionStyles(domElement, props.transitionStyles);\r\n        applyTransitionStyles(domElement, \"default\", transitionStyles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, transitionStyles);\r\n    }\r\n    if (props.transitionClassName) {\r\n        const transitionClassNames = {\r\n            showStart: `${props.transitionClassName}-show-start`,\r\n            showEnd: `${props.transitionClassName}-show-end`,\r\n            hideStart: `${props.transitionClassName}-hide-start`,\r\n            hideEnd: `${props.transitionClassName}-hide-end`\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames && domElement.classList.add(transitionClassNames[step]);\r\n    }\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n    const delayValue = delayStyleValue !== undefined\r\n        ? styleDurationToMs(delayStyleValue)\r\n        : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: \"showEnd\"\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined\r\n    },\r\n    hideStart: {\r\n        nextStep: \"hideEnd\"\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    let currentStep = mode === MODE.SHOW\r\n        ? \"showStart\"\r\n        : \"hideStart\";\r\n    return new Promise(resolve => {\r\n        const onEnd = () => {\r\n            domElement.removeEventListener(\"transitionend\", onEnd, false);\r\n            resolve();\r\n        };\r\n        applyStylesForState(domElement, props, currentStep, currentStep === \"showStart\");\r\n        const nextStep = steps[currentStep].nextStep;\r\n        if (nextStep) {\r\n            setTimeout(() => {\r\n                currentStep = nextStep;\r\n                domElement.addEventListener(\"transitionend\", onEnd, false);\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // Due to incorrect CSS usage, ontransitionend may not be fired\r\n                // Using a timeout ensures completion\r\n                const duration = getDuration(domElement);\r\n                if (duration == 0) {\r\n                    setTimeout(onEnd, duration);\r\n                }\r\n            }, 0);\r\n        }\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (spawnOptions, ns) => [ns, spawnOptions.id, spawnOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, spawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(spawnOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, instanceSpawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = instanceSpawnOptions !== undefined\r\n                    ? instanceSpawnOptions.spawn\r\n                    : undefined;\r\n                const id = instanceSpawnOptions !== undefined\r\n                    ? instanceSpawnOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.spawnOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.spawnOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, instanceSpawnOptions) => fns.getAll(ns, instanceSpawnOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    timerId: undefined,\r\n    isPaused: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    callback: () => { },\r\n    timeoutFn: () => { },\r\n    promise: undefined,\r\n    onDone: () => { },\r\n    onAbort: () => { },\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendPauseTimer(state),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    none: \"none\",\r\n    hiding: \"hiding\"\r\n};\r\nconst filterBySpawnOption = (spawnOptions) => (nsItems) => nsItems.filter(item => item.spawnOptions.spawn === spawnOptions.spawn);\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.spawnOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, spawnOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    return pipe(filterFirstInQueue, filterBySpawnOption(spawnOptions))(nsItems);\r\n};\r\nconst getOptionsByKind = options => {\r\n    const initial = {\r\n        transitionOptions: {},\r\n        instanceOptions: {}\r\n    };\r\n    return Object.keys(options).reduce((acc, key) => {\r\n        const value = options[key];\r\n        const isTransitionKey = transitionOptionKeys[key];\r\n        if (isTransitionKey) {\r\n            acc.transitionOptions[key] = value;\r\n        }\r\n        else {\r\n            acc.instanceOptions[key] = value;\r\n        }\r\n        return acc;\r\n    }, initial);\r\n};\r\nconst createInstance = (ns) => (defaultSpawnOptions) => (defaultTransitionOptions) => (options = {}, instanceSpawnOptions) => {\r\n    return new Promise(resolve => {\r\n        const spawnOptions = {\r\n            ...defaultSpawnOptions,\r\n            ...instanceSpawnOptions,\r\n        };\r\n        const id = createId(spawnOptions, ns);\r\n        const { transitionOptions: instanceTransitionOptions, instanceOptions } = getOptionsByKind(options);\r\n        const transitionOptions = {\r\n            ...defaultTransitionOptions,\r\n            ...instanceTransitionOptions,\r\n        };\r\n        transitionOptions.didShow = item => {\r\n            if (options.didShow) {\r\n                options.didShow(item);\r\n            }\r\n            return resolve(item);\r\n        };\r\n        transitionOptions.didHide = item => {\r\n            if (options.didHide) {\r\n                options.didHide(item);\r\n            }\r\n            return resolve(item);\r\n        };\r\n        const uid = getUid().toString();\r\n        const item = {\r\n            ns,\r\n            spawnOptions,\r\n            transitionOptions,\r\n            instanceTransitionOptions,\r\n            instanceOptions,\r\n            id,\r\n            timer: transitionOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: uid,\r\n            transitionState: transitionStates.none,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, spawnOptions);\r\n        if (maybeExistingItem.just && !spawnOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve instanceTransitionOptions\r\n            const instanceTransitionOptions = existingItem.instanceTransitionOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                instanceTransitionOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n            // While this is a replace action, mimic a show\r\n            transitionOptions.didShow(item);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst toggle = (ns) => (defaultSpawnOptions) => (defaultTransitionOptions) => (options, instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        return hide(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    }\r\n    else {\r\n        return show(ns)(defaultSpawnOptions)(defaultTransitionOptions)(options, instanceSpawnOptions);\r\n    }\r\n};\r\nconst getMaybeItem = (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    return selectors.find(ns, spawnOptions);\r\n};\r\nconst performOnItem = fn => ns => defaultSpawnOptions => (instanceSpawnOptions, fnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, fnOptions);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        item.transitionState = transitionStates.hiding;\r\n        return hideItem(item);\r\n    }\r\n    else {\r\n        return Promise.resolve(item);\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst resume = performOnItem((ns, item, fnOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(fnOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst exists = (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    return !!maybeItem.just;\r\n};\r\nconst resetAll = (ns) => () => {\r\n    selectors.getAll(ns).forEach((item) => item.timer && item.timer.actions.abort());\r\n    actions.removeAll(ns);\r\n    return Promise.resolve();\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    const { transitionOptions } = getOptionsByKind(options);\r\n    return {\r\n        ...item,\r\n        transitionOptions: {\r\n            ...item.transitionOptions,\r\n            ...transitionOptions\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `options` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (defaultSpawnOptions) => (options, instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    const allItems = selectors.getAll(ns);\r\n    const regularItems = allItems.filter((item) => !spawnOptions.queued && !item.spawnOptions.queued);\r\n    const queuedItems = allItems.filter((item) => spawnOptions.queued || item.spawnOptions.queued);\r\n    regularItems.forEach((item) => hideItem(getOverridingTransitionOptions(item, options)));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        hideItem(getOverridingTransitionOptions(current, options))\r\n            .then(() => actions.removeAll(ns));\r\n    }\r\n};\r\nconst getCount = (ns) => (instanceSpawnOptions) => selectors.getCount(ns, instanceSpawnOptions);\r\nconst transitionItem = (item, mode) => {\r\n    return transition({\r\n        ...item.instanceTransitionOptions,\r\n        ...item.transitionOptions,\r\n    }, mode);\r\n};\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\");\r\n};\r\nconst showItem = async function (item) {\r\n    await (transitionItem(item, MODE.SHOW));\r\n    item.transitionOptions.didShow && await (item.transitionOptions.didShow(item));\r\n    if (item.transitionOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.transitionOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.transitionOptions.didHide && await (item.transitionOptions.didHide(item));\r\n    const copy = JSON.parse(JSON.stringify(item));\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.transitionOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultSpawnOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued })\r\n    };\r\n    const defaultTransitionOptions = {\r\n        ...(timeout !== undefined && { timeout })\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultSpawnOptions,\r\n        // Commands\r\n        show: show(ns)(defaultSpawnOptions)(defaultTransitionOptions),\r\n        toggle: toggle(ns)(defaultSpawnOptions)(defaultTransitionOptions),\r\n        hide: hide(ns)(defaultSpawnOptions),\r\n        hideAll: hideAll(ns)(defaultSpawnOptions),\r\n        resetAll: resetAll(ns),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultSpawnOptions),\r\n        resume: resume(ns)(defaultSpawnOptions),\r\n        // State\r\n        exists: exists(ns)(defaultSpawnOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultSpawnOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultSpawnOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, performOnItem, resetAll, resume, selectors, setDomElement, show, showItem, states, toggle };\n//# sourceMappingURL=dialogic.mjs.map\n"],"names":["getStyleValue","domElement","prop","window","getComputedStyle","defaultView","document","style","getPropertyValue","MODE","transitionOptionKeys","component","didHide","didShow","timeout","transitionClassName","transitionStyles","applyTransitionStyles","step","transitionStyle","Object","keys","forEach","key","applyStylesForState","props","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","add","steps","nextStep","undefined","transition","mode","Promise","resolve","currentStep","onEnd","removeEventListener","setTimeout","addEventListener","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","indexOf","isNaN","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","map","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","i","warnedHalt","value","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","x","s1","s2","_unregisterChild","child","childIndex","splice","defineProperty","get","p","ready","every","Error","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","spawnOptions","ns","spawn","filter","Boolean","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","fns","getStore","just","nothing","getAll","instanceSpawnOptions","itemsBySpawn","getCount","patch","timerId","isPaused","startTime","callback","timeoutFn","promise","onDone","onAbort","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","filterFirstInQueue","nsItems","queuedCount","queueCount","queued","filterCandidates","reduce","y","f","pipe","filterBySpawnOption","getOptionsByKind","options","transitionOptions","instanceOptions","show","defaultSpawnOptions","defaultTransitionOptions","instanceTransitionOptions","toString","transitionState","maybeExistingItem","existingItem","replacingItem","toggle","getMaybeItem","hide","performOnItem","fnOptions","maybeItem","hideItem","getTimerProperty","timerProp","getRemaining$1","exists","resetAll","getOverridingTransitionOptions","hideAll","allItems","regularItems","queuedItems","current","then","transitionItem","showItem","async","copy","JSON","parse","stringify","dialogical","defaultId","defaultSpawn","dialog","notification"],"mappings":"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"}
{"version":3,"file":"dialogic-mithril.js","sources":["../../dialogic/dist/dialogic.mjs"],"sourcesContent":["const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst transitionOptionKeys = {\r\n    component: true,\r\n    didHide: true,\r\n    didShow: true,\r\n    timeout: true,\r\n    transitionClassName: true,\r\n    transitionStyles: true,\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(transitionClassNames.enter, transitionClassNames.enterActive, transitionClassNames.exit, transitionClassNames.exitActive);\r\nconst applyTransitionStyles = (domElement, stateName, transitionStyles) => {\r\n    const transitionStyle = transitionStyles[stateName];\r\n    if (transitionStyle) {\r\n        Object.keys(transitionStyle).forEach((key) => {\r\n            domElement.style[key] = transitionStyle[key];\r\n        });\r\n    }\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    return new Promise(resolve => {\r\n        const state = {\r\n            isShow: mode === MODE.SHOW,\r\n            name: mode === MODE.SHOW\r\n                ? \"enter\"\r\n                : \"exit\"\r\n        };\r\n        if (props.transitionStyles) {\r\n            applyTransitionStyles(domElement, \"default\", props.transitionStyles);\r\n            applyTransitionStyles(domElement, state.name, props.transitionStyles);\r\n        }\r\n        const transitionClassNames = props.transitionClassName\r\n            ? {\r\n                enter: `${props.transitionClassName}-enter`,\r\n                enterActive: `${props.transitionClassName}-enter-active`,\r\n                exit: `${props.transitionClassName}-exit`,\r\n                exitActive: `${props.transitionClassName}-exit-active`\r\n            }\r\n            : undefined;\r\n        // reflow\r\n        domElement.scrollTop;\r\n        const before = () => {\r\n            if (transitionClassNames) {\r\n                removeTransitionClassNames(domElement, transitionClassNames);\r\n                domElement.classList.add(state.isShow\r\n                    ? transitionClassNames.enter\r\n                    : transitionClassNames.exit);\r\n                domElement.scrollTop;\r\n            }\r\n            if (state.isShow) {\r\n                // reflow\r\n                domElement.scrollTop;\r\n            }\r\n        };\r\n        const applyTransition = () => {\r\n            if (props.transitionStyles) {\r\n                applyTransitionStyles(domElement, \"default\", props.transitionStyles);\r\n                applyTransitionStyles(domElement, state.name, props.transitionStyles);\r\n            }\r\n            // Set classes (need to be set after styles)\r\n            if (transitionClassNames) {\r\n                removeTransitionClassNames(domElement, transitionClassNames);\r\n                domElement.classList.add(state.isShow\r\n                    ? transitionClassNames.enterActive\r\n                    : transitionClassNames.exitActive);\r\n            }\r\n        };\r\n        const onEnd = () => {\r\n            domElement.removeEventListener(\"transitionend\", onEnd, false);\r\n            resolve();\r\n        };\r\n        domElement.addEventListener(\"transitionend\", onEnd, false);\r\n        before();\r\n        state.name = state.isShow\r\n            ? \"enterActive\"\r\n            : \"exitActive\";\r\n        applyTransition();\r\n        const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n        const durationValue = durationStyleValue !== undefined\r\n            ? styleDurationToMs(durationStyleValue)\r\n            : 0;\r\n        const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n        const delayValue = delayStyleValue !== undefined\r\n            ? styleDurationToMs(delayStyleValue)\r\n            : 0;\r\n        const duration = durationValue + delayValue;\r\n        // console.log(\"duration\", duration);\r\n        // Due to incorrect CSS usage, ontransitionend may not be fired\r\n        // Using a timeout ensures completion\r\n        if (duration == 0) {\r\n            setTimeout(onEnd, duration);\r\n        }\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (spawnOptions, ns) => [ns, spawnOptions.id, spawnOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, spawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(spawnOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, instanceSpawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = instanceSpawnOptions !== undefined\r\n                    ? instanceSpawnOptions.spawn\r\n                    : undefined;\r\n                const id = instanceSpawnOptions !== undefined\r\n                    ? instanceSpawnOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.spawnOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.spawnOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, instanceSpawnOptions) => fns.getAll(ns, instanceSpawnOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    timerId: undefined,\r\n    isPaused: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    callback: () => { },\r\n    timeoutFn: () => { },\r\n    promise: undefined,\r\n    onDone: () => { },\r\n    onAbort: () => { },\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendPauseTimer(state),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    none: \"none\",\r\n    hiding: \"hiding\"\r\n};\r\nconst filterBySpawnOption = (spawnOptions) => (nsItems) => nsItems.filter(item => item.spawnOptions.spawn === spawnOptions.spawn);\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.spawnOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, spawnOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    return pipe(filterFirstInQueue, filterBySpawnOption(spawnOptions))(nsItems);\r\n};\r\nconst getOptionsByKind = options => {\r\n    const initial = {\r\n        transitionOptions: {},\r\n        instanceOptions: {}\r\n    };\r\n    return Object.keys(options).reduce((acc, key) => {\r\n        const value = options[key];\r\n        const isTransitionKey = transitionOptionKeys[key];\r\n        if (isTransitionKey) {\r\n            acc.transitionOptions[key] = value;\r\n        }\r\n        else {\r\n            acc.instanceOptions[key] = value;\r\n        }\r\n        return acc;\r\n    }, initial);\r\n};\r\nconst createInstance = (ns) => (defaultSpawnOptions) => (defaultTransitionOptions) => (options = {}, instanceSpawnOptions) => {\r\n    return new Promise(resolve => {\r\n        const spawnOptions = {\r\n            ...defaultSpawnOptions,\r\n            ...instanceSpawnOptions,\r\n        };\r\n        const id = createId(spawnOptions, ns);\r\n        const { transitionOptions: instanceTransitionOptions, instanceOptions } = getOptionsByKind(options);\r\n        const transitionOptions = {\r\n            ...defaultTransitionOptions,\r\n            ...instanceTransitionOptions,\r\n        };\r\n        transitionOptions.didShow = item => {\r\n            if (options.didShow) {\r\n                options.didShow(item);\r\n            }\r\n            return resolve(item);\r\n        };\r\n        transitionOptions.didHide = item => {\r\n            if (options.didHide) {\r\n                options.didHide(item);\r\n            }\r\n            return resolve(item);\r\n        };\r\n        const uid = getUid().toString();\r\n        const item = {\r\n            ns,\r\n            spawnOptions,\r\n            transitionOptions,\r\n            instanceTransitionOptions,\r\n            instanceOptions,\r\n            id,\r\n            timer: transitionOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: uid,\r\n            transitionState: transitionStates.none,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, spawnOptions);\r\n        if (maybeExistingItem.just && !spawnOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve instanceTransitionOptions\r\n            const instanceTransitionOptions = existingItem.instanceTransitionOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                instanceTransitionOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n            // While this is a replace action, mimic a show\r\n            transitionOptions.didShow(item);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst toggle = (ns) => (defaultSpawnOptions) => (defaultTransitionOptions) => (options, instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        return hide(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    }\r\n    else {\r\n        return show(ns)(defaultSpawnOptions)(defaultTransitionOptions)(options, instanceSpawnOptions);\r\n    }\r\n};\r\nconst getMaybeItem = (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    return selectors.find(ns, spawnOptions);\r\n};\r\nconst performOnItem = fn => ns => defaultSpawnOptions => (instanceSpawnOptions, fnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, fnOptions);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        item.transitionState = transitionStates.hiding;\r\n        return hideItem(item);\r\n    }\r\n    else {\r\n        return Promise.resolve(item);\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst resume = performOnItem((ns, item, fnOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(fnOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst exists = (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    return !!maybeItem.just;\r\n};\r\nconst resetAll = (ns) => () => {\r\n    selectors.getAll(ns).forEach((item) => item.timer && item.timer.actions.abort());\r\n    actions.removeAll(ns);\r\n    return Promise.resolve();\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    const { transitionOptions } = getOptionsByKind(options);\r\n    return {\r\n        ...item,\r\n        transitionOptions: {\r\n            ...item.transitionOptions,\r\n            ...transitionOptions\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `options` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (defaultSpawnOptions) => (options, instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    const allItems = selectors.getAll(ns);\r\n    const regularItems = allItems.filter((item) => !spawnOptions.queued && !item.spawnOptions.queued);\r\n    const queuedItems = allItems.filter((item) => spawnOptions.queued || item.spawnOptions.queued);\r\n    regularItems.forEach((item) => hideItem(getOverridingTransitionOptions(item, options)));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        hideItem(getOverridingTransitionOptions(current, options))\r\n            .then(() => actions.removeAll(ns));\r\n    }\r\n};\r\nconst getCount = (ns) => (instanceSpawnOptions) => selectors.getCount(ns, instanceSpawnOptions);\r\nconst transitionItem = (item, mode) => {\r\n    return transition({\r\n        ...item.instanceTransitionOptions,\r\n        ...item.transitionOptions,\r\n    }, mode);\r\n};\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\");\r\n};\r\nconst showItem = async function (item) {\r\n    await (transitionItem(item, MODE.SHOW));\r\n    item.transitionOptions.didShow && await (item.transitionOptions.didShow(item));\r\n    if (item.transitionOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.transitionOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.transitionOptions.didHide && await (item.transitionOptions.didHide(item));\r\n    const copy = JSON.parse(JSON.stringify(item));\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.transitionOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultSpawnOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued })\r\n    };\r\n    const defaultTransitionOptions = {\r\n        ...(timeout !== undefined && { timeout })\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultSpawnOptions,\r\n        // Commands\r\n        show: show(ns)(defaultSpawnOptions)(defaultTransitionOptions),\r\n        toggle: toggle(ns)(defaultSpawnOptions)(defaultTransitionOptions),\r\n        hide: hide(ns)(defaultSpawnOptions),\r\n        hideAll: hideAll(ns)(defaultSpawnOptions),\r\n        resetAll: resetAll(ns),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultSpawnOptions),\r\n        resume: resume(ns)(defaultSpawnOptions),\r\n        // State\r\n        exists: exists(ns)(defaultSpawnOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultSpawnOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultSpawnOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, performOnItem, resetAll, resume, selectors, setDomElement, show, showItem, states, toggle };\n//# sourceMappingURL=dialogic.mjs.map\n"],"names":["getStyleValue","domElement","prop","window","getComputedStyle","defaultView","document","style","getPropertyValue","MODE","transitionOptionKeys","component","didHide","didShow","timeout","transitionClassName","transitionStyles","removeTransitionClassNames","transitionClassNames","classList","remove","enter","enterActive","exit","exitActive","applyTransitionStyles","stateName","transitionStyle","Object","keys","forEach","key","styleDurationToMs","durationStr","parsed","parseFloat","indexOf","isNaN","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","map","streams","apply","undefined","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","i","warnedHalt","value","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","x","s1","s2","_unregisterChild","child","childIndex","splice","defineProperty","get","p","ready","every","Error","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","spawnOptions","ns","spawn","filter","Boolean","join","store","initialState","actions","update","add","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","fns","getStore","just","nothing","getAll","instanceSpawnOptions","itemsBySpawn","getCount","patch","timerId","isPaused","startTime","callback","timeoutFn","promise","onDone","onAbort","appendStartTimer","duration","updateState","Promise","resolve","reject","Date","getTime","setTimeout","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","filterFirstInQueue","nsItems","queuedCount","queueCount","queued","filterCandidates","reduce","y","f","pipe","filterBySpawnOption","getOptionsByKind","options","transitionOptions","instanceOptions","show","defaultSpawnOptions","defaultTransitionOptions","instanceTransitionOptions","toString","transitionState","maybeExistingItem","existingItem","replacingItem","toggle","getMaybeItem","hide","performOnItem","fnOptions","maybeItem","hideItem","getTimerProperty","timerProp","getRemaining$1","exists","resetAll","getOverridingTransitionOptions","hideAll","allItems","regularItems","queuedItems","current","then","transitionItem","mode","props","isShow","name","scrollTop","onEnd","removeEventListener","addEventListener","durationStyleValue","durationValue","delayStyleValue","transition","showItem","async","copy","JSON","parse","stringify","dialogical","defaultId","defaultSpawn","dialog","notification"],"mappings":"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"}
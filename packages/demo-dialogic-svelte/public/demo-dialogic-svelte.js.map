{"version":3,"file":"demo-dialogic-svelte.js","sources":["../node_modules/svelte/internal/index.mjs","../../dialogic/node_modules/mithril/stream/stream.js","../../dialogic/dist/dialogic.module.js","../node_modules/svelte/store/index.mjs","../../dialogic-svelte/dist/dialogic-svelte.js","../src/DialogContent.svelte","../src/DialogComponent.svelte","../src/NotificationContent.svelte","../src/RemainingLabel.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/* eslint-disable */\n;(function() {\n\"use strict\"\n/* eslint-enable */\nStream.SKIP = {}\nStream.lift = lift\nStream.scan = scan\nStream.merge = merge\nStream.combine = combine\nStream.scanMerge = scanMerge\nStream[\"fantasy-land/of\"] = Stream\n\nvar warnedHalt = false\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true\n\t\treturn Stream.SKIP\n\t}\n})\n\nfunction Stream(value) {\n\tvar dependentStreams = []\n\tvar dependentFns = []\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing()\n\t\t\t\tstream._state = \"active\"\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)) })\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\"\n\tstream._parents = []\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\"\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing()\n\t\t})\n\t}\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value))\n\t\ttarget._parents.push(stream)\n\t\tdependentStreams.push(target)\n\t\tdependentFns.push(fn)\n\t\treturn target\n\t}\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t}\n\n\tvar end\n\tfunction createEnd() {\n\t\tend = Stream()\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream)})\n\t\t\t\tstream._state = \"ended\"\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0\n\t\t\t}\n\t\t\treturn value\n\t\t})\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value }\n\n\tstream[\"fantasy-land/map\"] = stream.map\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) }\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child)\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1)\n\t\t\tdependentFns.splice(childIndex, 1)\n\t\t}\n\t}\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t})\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t})\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream()\n\n\tvar changed = []\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s)\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])))\n\t\t\t\tchanged = []\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t})\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true) })\n\t\t\tendStream.end(true)\n\t\t}\n\t\treturn undefined\n\t})\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v)\n\t\tif (next !== Stream.SKIP) acc = next\n\t\treturn next\n\t})\n\tstream(acc)\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] })\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1]\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream())\n\t\t})\n\n\t\treturn seed\n\t}, streams)\n\n\tstream(seed)\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0]\n\tvar streams = Array.prototype.slice.call(arguments, 1)\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nif (typeof module !== \"undefined\") module[\"exports\"] = Stream\nelse if (typeof window.m === \"function\" && !(\"stream\" in window.m)) window.m.stream = Stream\nelse window.m = {stream : Stream}\n\n}());\n","import Stream from 'mithril/stream';\n\n/* eslint-disable no-param-reassign */\nconst findItem = (id, items) => items.find(item => item.id === id);\nconst itemIndex = (id, items) => {\n    const item = findItem(id, items);\n    return item ? items.indexOf(item) : -1;\n};\nconst removeItem = (id, items) => {\n    const index = itemIndex(id, items);\n    if (index !== -1) {\n        items.splice(index, 1);\n    }\n    return items;\n};\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join('-');\nconst store = {\n    initialState: {\n        store: {},\n    },\n    actions: (update) => ({\n        /**\n         * Add an item to the end of the list.\n         */\n        add: (ns, item) => {\n            update((state) => {\n                const items = state.store[ns] || [];\n                state.store[ns] = [...items, item];\n                if (item.timer) {\n                    // When the timer state updates, refresh the store so that UI can pick up the change\n                    item.timer.states.map(() => store.actions(update).refresh());\n                }\n                return state;\n            });\n        },\n        /**\n         * Removes the first item with a match on `id`.\n         */\n        remove: (ns, id) => {\n            update((state) => {\n                const items = state.store[ns] || [];\n                const remaining = removeItem(id, items);\n                state.store[ns] = remaining;\n                return state;\n            });\n        },\n        /**\n         * Replaces the first item with a match on `id` with a newItem.\n         */\n        replace: (ns, id, newItem) => {\n            update((state) => {\n                const items = state.store[ns] || [];\n                if (items) {\n                    const index = itemIndex(id, items);\n                    if (index !== -1) {\n                        items[index] = newItem;\n                        state.store[ns] = [...items];\n                    }\n                }\n                return state;\n            });\n        },\n        /**\n         * Removes all items within a namespace.\n         */\n        removeAll: (ns) => {\n            update((state) => {\n                state.store[ns] = [];\n                return state;\n            });\n        },\n        /**\n         * Replaces all items within a namespace.\n         */\n        store: (ns, newItems) => {\n            update((state) => {\n                state.store[ns] = [...newItems];\n                return state;\n            });\n        },\n        refresh: () => {\n            update((state) => (Object.assign({}, state)));\n        },\n    }),\n    selectors: (states) => {\n        const fns = {\n            getStore: () => {\n                const state = states();\n                return state.store;\n            },\n            find: (ns, identityOptions) => {\n                const state = states();\n                const items = state.store[ns] || [];\n                const id = createId(identityOptions, ns);\n                const item = items.find(fitem => fitem.id === id);\n                return item ? { just: item } : { nothing: undefined };\n            },\n            getAll: (ns, identityOptions) => {\n                const state = states();\n                const items = (state.store[ns] || []);\n                const spawn = identityOptions !== undefined ? identityOptions.spawn : undefined;\n                const id = identityOptions !== undefined ? identityOptions.id : undefined;\n                const itemsBySpawn = spawn !== undefined\n                    ? items.filter(fitem => fitem.identityOptions.spawn === spawn)\n                    : items;\n                const itemsById = id !== undefined\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\n                    : itemsBySpawn;\n                return itemsById;\n            },\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\n        };\n        return fns;\n    },\n};\nconst update = Stream();\nconst states = Stream.scan((state, patch) => patch(state), Object.assign({}, store.initialState), update);\nconst actions = Object.assign({}, store.actions(update));\nconst selectors = Object.assign({}, store.selectors(states));\n// states.map(state =>\n//   console.log(JSON.stringify(state, null, 2))\n// );\n\n/* eslint-disable no-param-reassign */\nconst initialState = {\n    callback: () => { },\n    isPaused: false,\n    onAbort: () => { },\n    onDone: () => { },\n    promise: undefined,\n    remaining: undefined,\n    startTime: undefined,\n    timeoutFn: () => { },\n    timerId: undefined,\n};\nconst appendStartTimer = (state, callback, duration, updateState) => {\n    const timeoutFn = () => {\n        callback();\n        state.onDone();\n        updateState();\n    };\n    return Object.assign({ timeoutFn, promise: new Promise(resolve => {\n            state.onDone = () => resolve();\n            state.onAbort = () => resolve();\n        }) }, (state.isPaused\n        ? {}\n        : {\n            startTime: new Date().getTime(),\n            timerId: window.setTimeout(timeoutFn, duration),\n            remaining: duration,\n        }));\n};\nconst appendStopTimeout = (state) => {\n    window.clearTimeout(state.timerId);\n    return {\n        timerId: initialState.timerId,\n    };\n};\nconst appendStopTimer = (state) => (Object.assign({}, appendStopTimeout(state)));\nconst appendPauseTimer = (state) => (Object.assign(Object.assign({}, appendStopTimeout(state)), { isPaused: true, remaining: getRemaining$1(state) }));\nconst appendResumeTimer = (state, minimumDuration) => {\n    window.clearTimeout(state.timerId);\n    const remaining = minimumDuration\n        ? Math.max(state.remaining || 0, minimumDuration)\n        : state.remaining;\n    return {\n        startTime: new Date().getTime(),\n        isPaused: false,\n        remaining,\n        timerId: window.setTimeout(state.timeoutFn, remaining),\n    };\n};\nconst getRemaining$1 = (state) => state.remaining === 0 || state.remaining === undefined\n    ? state.remaining\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\nconst TimerStore = () => {\n    const timer = {\n        initialState,\n        actions: (update) => ({\n            /**\n             * Starts the timer\n             * @param {callback} Function Callback function that is called after completion.\n             * @param {duration} Number Timer duration in milliseconds.\n             */\n            start: (callback, duration) => {\n                update((state) => (Object.assign(Object.assign(Object.assign(Object.assign({}, state), appendStopTimeout(state)), appendStartTimer(state, callback, duration, () => timer.actions(update).done())), (state.isPaused && appendPauseTimer(state)))));\n            },\n            /**\n             * Stops the timer.\n             */\n            stop: () => {\n                update((state) => (Object.assign(Object.assign(Object.assign({}, state), appendStopTimer(state)), initialState)));\n            },\n            /**\n             * Pauses a running timer.\n             */\n            pause: () => {\n                update((state) => (Object.assign(Object.assign({}, state), (!state.isPaused && appendPauseTimer(state)))));\n            },\n            /**\n             * Resumes a paused timer.\n             * @param {minimumDuration} Number Sets the minimum duration.\n             */\n            resume: (minimumDuration) => {\n                update((state) => (Object.assign(Object.assign({}, state), (state.isPaused && appendResumeTimer(state, minimumDuration)))));\n            },\n            /**\n             * Aborts and clears a timer.\n             */\n            abort: () => {\n                update((state) => {\n                    state.onAbort();\n                    return Object.assign(Object.assign({}, state), appendStopTimeout(state));\n                });\n            },\n            /**\n             * Updates the current state. Used to get the state for selectors.getRemaining.\n             */\n            refresh: () => {\n                update((state) => (Object.assign({}, state)));\n            },\n            /**\n             * Brings the timer to its initial state.\n             * Used internally.\n             */\n            done: () => {\n                update(() => initialState);\n            },\n        }),\n        selectors: (states) => ({\n            /**\n             * Returns the paused state.\n             */\n            isPaused: () => {\n                const state = states();\n                return state.isPaused;\n            },\n            /**\n             * Returns the remaining duration in milliseconds.\n             */\n            getRemaining: () => {\n                const state = states();\n                return state.isPaused ? state.remaining : getRemaining$1(state);\n            },\n            /**\n             * The promise that is handled when the timer is done or canceled.\n             */\n            getResultPromise: () => {\n                const state = states();\n                return state.promise;\n            },\n        }),\n    };\n    const update = Stream();\n    const states = Stream.scan((state, patch) => patch(state), Object.assign({}, timer.initialState), update);\n    const actions = Object.assign({}, timer.actions(update));\n    const selectors = Object.assign({}, timer.selectors(states));\n    // states.map(state =>\n    //   console.log(JSON.stringify(state, null, 2))\n    // );\n    return {\n        states,\n        actions,\n        selectors,\n    };\n};\n\nconst pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\nconst getStyleValue = ({ domElement, prop, }) => {\n    const defaultView = document.defaultView;\n    if (defaultView) {\n        const style = defaultView.getComputedStyle(domElement);\n        if (style) {\n            return style.getPropertyValue(prop);\n        }\n    }\n};\n\nconst MODE = {\n    SHOW: 'show',\n    HIDE: 'hide',\n};\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(...transitionClassNames.showStart, ...transitionClassNames.showEnd, ...transitionClassNames.hideStart, ...transitionClassNames.hideEnd);\nconst applyTransitionStyles = (domElement, step, styles) => {\n    const transitionStyle = styles[step];\n    if (transitionStyle) {\n        Object.keys(transitionStyle).forEach((key) => {\n            // Workaround for error \"getPropertyValue is not a function\"\n            const value = transitionStyle[key];\n            // eslint-disable-next-line no-param-reassign\n            domElement.style[key] = value;\n        });\n    }\n};\nconst applyNoDurationTransitionStyle = (domElement) => {\n    // eslint-disable-next-line no-param-reassign\n    domElement.style.transitionDuration = '0ms';\n};\nconst getTransitionStyles = (domElement, styles) => (typeof styles === 'function' ? styles(domElement) : styles) || {};\nconst createClassList = (className, step) => className.split(/ /).map((n) => `${n}-${step}`);\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\n    if (props.styles) {\n        const styles = getTransitionStyles(domElement, props.styles);\n        applyTransitionStyles(domElement, 'default', styles);\n        if (isEnterStep) {\n            applyNoDurationTransitionStyle(domElement);\n        }\n        applyTransitionStyles(domElement, step, styles);\n    }\n    if (props.className) {\n        const transitionClassNames = {\n            showStart: createClassList(props.className, 'show-start'),\n            showEnd: createClassList(props.className, 'show-end'),\n            hideStart: createClassList(props.className, 'hide-start'),\n            hideEnd: createClassList(props.className, 'hide-end'),\n        };\n        removeTransitionClassNames(domElement, transitionClassNames);\n        if (transitionClassNames) {\n            domElement.classList.add(...transitionClassNames[step]);\n        }\n    }\n    // reflow\n    // eslint-disable-next-line no-unused-expressions\n    domElement.scrollTop;\n};\nconst styleDurationToMs = (durationStr) => {\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf('ms') === -1 ? 1000 : 1);\n    return Number.isNaN(parsed) ? 0 : parsed;\n};\nconst getDuration = (domElement) => {\n    const durationStyleValue = getStyleValue({\n        domElement,\n        prop: 'transition-duration',\n    });\n    const durationValue = durationStyleValue !== undefined\n        ? styleDurationToMs(durationStyleValue)\n        : 0;\n    const delayStyleValue = getStyleValue({\n        domElement,\n        prop: 'transition-delay',\n    });\n    const delayValue = delayStyleValue !== undefined ? styleDurationToMs(delayStyleValue) : 0;\n    return durationValue + delayValue;\n};\nconst steps = {\n    showStart: {\n        nextStep: 'showEnd',\n    },\n    showEnd: {\n        nextStep: undefined,\n    },\n    hideStart: {\n        nextStep: 'hideEnd',\n    },\n    hideEnd: {\n        nextStep: undefined,\n    },\n};\nconst transition = (props, mode) => {\n    const { domElement } = props;\n    if (!domElement) {\n        return Promise.resolve('no domElement');\n    }\n    clearTimeout(props.__transitionTimeoutId__);\n    let currentStep = mode === MODE.SHOW ? 'showStart' : 'hideStart';\n    return new Promise(resolve => {\n        applyStylesForState(domElement, props, currentStep, currentStep === 'showStart');\n        setTimeout(() => {\n            const { nextStep } = steps[currentStep];\n            if (nextStep) {\n                currentStep = nextStep;\n                applyStylesForState(domElement, props, currentStep);\n                // addEventListener sometimes hangs this function because it never finishes\n                // Using setTimeout instead of addEventListener gives more consistent results\n                const duration = getDuration(domElement);\n                // eslint-disable-next-line no-param-reassign\n                props.__transitionTimeoutId__ = window.setTimeout(resolve, duration);\n            }\n        }, 0);\n    });\n};\n\nconst localState = {\n    uid: 0,\n};\nconst getUid = () => {\n    if (localState.uid === Number.MAX_VALUE) {\n        localState.uid = 0;\n    }\n    else {\n        localState.uid += 1;\n    }\n    return localState.uid;\n};\nvar TransitionStates;\n(function (TransitionStates) {\n    TransitionStates[TransitionStates[\"Default\"] = 0] = \"Default\";\n    TransitionStates[TransitionStates[\"Displaying\"] = 1] = \"Displaying\";\n    TransitionStates[TransitionStates[\"Hiding\"] = 2] = \"Hiding\";\n})(TransitionStates || (TransitionStates = {}));\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, \n// eslint-disable-next-line @typescript-eslint/no-use-before-define\ngetMergedIdentityOptions(defaultDialogicOptions, identityOptions));\nconst filterBySpawn = (identityOptions) => (items) => identityOptions.spawn !== undefined\n    ? items.filter(item => item.identityOptions.spawn === identityOptions.spawn)\n    : items;\nconst filterById = (identityOptions) => (items) => identityOptions.id !== undefined\n    ? items.filter(item => item.identityOptions.id === identityOptions.id)\n    : items;\n/**\n * Gets a list of all non-queued items.\n * From the queued items only the first item is listed.\n * */\nconst filterFirstInQueue = (nsItems) => {\n    let queuedCount = 0;\n    return nsItems\n        .map(item => ({\n        item,\n        queueCount: item.dialogicOptions.queued ? queuedCount++ : 0,\n    }))\n        .filter(({ queueCount }) => queueCount === 0)\n        .map(({ item }) => item);\n};\nconst filterCandidates = (ns, items, identityOptions) => {\n    const nsItems = (items[ns] || []);\n    if (nsItems.length === 0) {\n        return [];\n    }\n    return pipe(filterBySpawn(identityOptions), filterFirstInQueue)(nsItems);\n};\nconst getPassThroughOptions = options => {\n    const copy = Object.assign({}, options);\n    delete copy.dialogic;\n    return copy;\n};\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\n    id: identityOptions.id || defaultDialogicOptions.id,\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\n});\nconst handleOptions = (defaultDialogicOptions, options = {}) => {\n    const identityOptions = {\n        id: options.dialogic ? options.dialogic.id : undefined,\n        spawn: options.dialogic ? options.dialogic.spawn : undefined,\n    };\n    const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions || {}, identityOptions);\n    const dialogicOptions = Object.assign(Object.assign(Object.assign({}, defaultDialogicOptions), options.dialogic), { __transitionTimeoutId__: 0 });\n    const passThroughOptions = getPassThroughOptions(options);\n    return {\n        identityOptions: mergedIdentityOptions,\n        dialogicOptions,\n        passThroughOptions,\n    };\n};\nconst createInstance = (ns) => (defaultDialogicOptions) => (options) => {\n    const { identityOptions, dialogicOptions, passThroughOptions, } = handleOptions(defaultDialogicOptions, options);\n    // eslint-disable-next-line consistent-return\n    return new Promise(resolve => {\n        const callbacks = {\n            willShow: (item) => {\n                if (dialogicOptions.willShow) {\n                    dialogicOptions.willShow(item);\n                }\n                return resolve(item);\n            },\n            willHide: (item) => {\n                if (dialogicOptions.willHide) {\n                    dialogicOptions.willHide(item);\n                }\n                return resolve(item);\n            },\n            didShow: (item) => {\n                if (dialogicOptions.didShow) {\n                    dialogicOptions.didShow(item);\n                }\n                return resolve(item);\n            },\n            didHide: (item) => {\n                if (dialogicOptions.didHide) {\n                    dialogicOptions.didHide(item);\n                }\n                return resolve(item);\n            },\n        };\n        const item = {\n            ns,\n            identityOptions,\n            dialogicOptions,\n            callbacks,\n            passThroughOptions,\n            id: createId(identityOptions, ns),\n            timer: dialogicOptions.timeout ? TimerStore() : undefined,\n            key: getUid().toString(),\n            transitionState: TransitionStates.Default,\n        };\n        const maybeExistingItem = selectors.find(ns, identityOptions);\n        const existingItem = maybeExistingItem.just;\n        if (existingItem && dialogicOptions.toggle) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            hide(ns)(defaultDialogicOptions)(options);\n            return resolve(existingItem);\n        }\n        if (existingItem && !dialogicOptions.queued) {\n            const replacingItem = Object.assign(Object.assign({}, item), { key: existingItem.key, transitionState: existingItem.transitionState, dialogicOptions: existingItem.dialogicOptions });\n            actions.replace(ns, existingItem.id, replacingItem);\n        }\n        else {\n            actions.add(ns, item);\n            // This will instantiate and draw the instance\n            // The instance will call `showDialog` in `onMount`\n        }\n        resolve(item);\n    });\n};\nconst show = createInstance;\nconst hide = (ns) => (defaultDialogicOptions) => (options) => {\n    const { identityOptions, dialogicOptions, passThroughOptions, } = handleOptions(defaultDialogicOptions, options);\n    const maybeExistingItem = selectors.find(ns, identityOptions);\n    const existingItem = maybeExistingItem.just;\n    if (existingItem) {\n        const item = Object.assign(Object.assign({}, existingItem), { dialogicOptions: Object.assign(Object.assign({}, existingItem.dialogicOptions), dialogicOptions), passThroughOptions: Object.assign(Object.assign({}, existingItem.passThroughOptions), { passThroughOptions }) });\n        actions.replace(ns, existingItem.id, item);\n        if (item.transitionState !== TransitionStates.Hiding) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return hideItem(item);\n        }\n        return Promise.resolve(item);\n    }\n    return Promise.resolve({\n        ns,\n        id: identityOptions.id,\n    });\n};\nconst pause = (ns) => (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndefaultDialogicOptions) => (identityOptions) => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const validItems = getValidItems(ns, identityOptions).filter(item => !!item.timer);\n    validItems.forEach((item) => {\n        if (item.timer) {\n            item.timer.actions.pause();\n        }\n    });\n    return Promise.all(validItems);\n};\nconst resume = (ns) => (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndefaultDialogicOptions) => (commandOptions) => {\n    const options = commandOptions || {};\n    const identityOptions = {\n        id: options.id,\n        spawn: options.spawn,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const validItems = getValidItems(ns, identityOptions).filter(item => !!item.timer);\n    validItems.forEach((item) => {\n        if (item.timer) {\n            item.timer.actions.resume(options.minimumDuration);\n        }\n    });\n    return Promise.all(validItems);\n};\nconst getTimerSelectors = (ns, defaultDialogicOptions, identityOptions) => {\n    var _a, _b;\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\n    return (_b = (_a = maybeItem === null || maybeItem === void 0 ? void 0 : maybeItem.just) === null || _a === void 0 ? void 0 : _a.timer) === null || _b === void 0 ? void 0 : _b.selectors;\n};\nconst isPaused = (ns) => (defaultDialogicOptions) => (identityOptions) => {\n    var _a;\n    return ((_a = getTimerSelectors(ns, defaultDialogicOptions, identityOptions)) === null || _a === void 0 ? void 0 : _a.isPaused()) ||\n        false;\n};\nconst getRemaining = (ns) => (defaultDialogicOptions) => (identityOptions) => {\n    var _a;\n    return ((_a = getTimerSelectors(ns, defaultDialogicOptions, identityOptions)) === null || _a === void 0 ? void 0 : _a.getRemaining()) || undefined;\n};\nconst exists = (ns) => (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndefaultDialogicOptions) => (identityOptions) => \n// eslint-disable-next-line @typescript-eslint/no-use-before-define\n!!getValidItems(ns, identityOptions).length;\nconst getValidItems = (ns, identityOptions) => {\n    const allItems = selectors.getAll(ns);\n    let validItems;\n    if (identityOptions) {\n        validItems = pipe(filterBySpawn(identityOptions), filterById(identityOptions))(allItems);\n    }\n    else {\n        validItems = allItems;\n    }\n    return validItems;\n};\nconst resetAll = (ns) => (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndefaultDialogicOptions) => (identityOptions) => {\n    const validItems = getValidItems(ns, identityOptions);\n    const items = [];\n    validItems.forEach((item) => {\n        if (item.timer) {\n            item.timer.actions.abort();\n        }\n        items.push(item);\n    });\n    if (identityOptions) {\n        items.forEach((item) => {\n            actions.remove(ns, item.id);\n        });\n    }\n    else {\n        actions.removeAll(ns);\n    }\n    return Promise.resolve(items);\n};\nconst getOverridingTransitionOptions = (item, dialogicOptions) => (Object.assign(Object.assign({}, item), { dialogicOptions: Object.assign(Object.assign({}, item.dialogicOptions), dialogicOptions) }));\n/**\n * Triggers a `hideItem` for each item in the store.\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\n * Optional `dialogicOptions` may be passed with specific transition options. This comes in handy when all items should hide in the same way.\n */\nconst hideAll = (ns) => (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ndefaultDialogicOptions) => (dialogicOptions) => {\n    const options = dialogicOptions || {};\n    const identityOptions = {\n        id: options.id,\n        spawn: options.spawn,\n    };\n    const validItems = getValidItems(ns, identityOptions);\n    const regularItems = validItems.filter((item) => !options.queued && !item.dialogicOptions.queued);\n    const queuedItems = validItems.filter((item) => options.queued || item.dialogicOptions.queued);\n    const items = [];\n    regularItems.forEach((item) => \n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    items.push(hideItem(getOverridingTransitionOptions(item, options))));\n    if (queuedItems.length > 0) {\n        const [current] = queuedItems;\n        // Make sure that any remaining items don't suddenly appear\n        actions.store(ns, [current]);\n        // Transition the current item\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        items.push(hideItem(getOverridingTransitionOptions(current, options)));\n    }\n    return Promise.all(items);\n};\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\nconst transitionItem = (item, mode) => transition(item.dialogicOptions, mode);\nconst getResultPromise = () => (ns) => (defaultDialogicOptions) => (identityOptions) => {\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\n    if (maybeItem.just) {\n        if (maybeItem.just && maybeItem.just.timer) {\n            return maybeItem.just.timer.selectors.getResultPromise();\n        }\n        return undefined;\n    }\n    return undefined;\n};\nconst deferredHideItem = async (item, timer, timeout) => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    timer.actions.start(() => hideItem(item), timeout);\n    return getResultPromise();\n};\nconst showItem = async (item) => {\n    if (item.callbacks.willShow) {\n        item.callbacks.willShow(item);\n    }\n    if (item.transitionState !== TransitionStates.Displaying) {\n        // eslint-disable-next-line no-param-reassign\n        item.transitionState = TransitionStates.Displaying;\n        await transitionItem(item, MODE.SHOW);\n    }\n    if (item.callbacks.didShow) {\n        item.callbacks.didShow(item);\n    }\n    if (item.dialogicOptions.timeout && item.timer) {\n        await deferredHideItem(item, item.timer, item.dialogicOptions.timeout);\n    }\n    return Promise.resolve(item);\n};\n/**\n * Hides an item. Any timer will be stopped. Any callbacks will be called.\n * @returns A Promise with (a copy of) the data of the removed item.\n */\nconst hideItem = async (item) => {\n    // eslint-disable-next-line no-param-reassign\n    item.transitionState = TransitionStates.Hiding;\n    // Stop any running timer\n    if (item.timer) {\n        item.timer.actions.stop();\n    }\n    if (item.callbacks.willHide) {\n        item.callbacks.willHide(item);\n    }\n    await transitionItem(item, MODE.HIDE);\n    if (item.callbacks.didHide) {\n        item.callbacks.didHide(item);\n    }\n    const copy = Object.assign({}, item);\n    actions.remove(item.ns, item.id);\n    return Promise.resolve(copy);\n};\nconst setDomElement = (domElement, item) => {\n    // eslint-disable-next-line no-param-reassign\n    item.dialogicOptions.domElement = domElement;\n};\n\nconst dialogical = ({ ns, queued, timeout, }) => {\n    const defaultId = `default_${ns}`;\n    const defaultSpawn = `default_${ns}`;\n    const defaultDialogicOptions = Object.assign(Object.assign({ id: defaultId, spawn: defaultSpawn }, (queued && { queued })), (timeout !== undefined && { timeout }));\n    return {\n        // Identification\n        ns,\n        defaultId,\n        defaultSpawn,\n        // Configuration\n        defaultDialogicOptions,\n        // Commands\n        show: show(ns)(defaultDialogicOptions),\n        hide: hide(ns)(defaultDialogicOptions),\n        hideAll: hideAll(ns)(defaultDialogicOptions),\n        resetAll: resetAll(ns)(defaultDialogicOptions),\n        // Timer commands\n        pause: pause(ns)(defaultDialogicOptions),\n        resume: resume(ns)(defaultDialogicOptions),\n        // State\n        exists: exists(ns)(defaultDialogicOptions),\n        getCount: getCount(ns),\n        // Timer state\n        isPaused: isPaused(ns)(defaultDialogicOptions),\n        getRemaining: getRemaining(ns)(defaultDialogicOptions),\n    };\n};\n\nconst dialog = dialogical({ ns: 'dialog' });\n\nconst notification = dialogical({\n    ns: 'notification',\n    queued: true,\n    timeout: 3000,\n});\n\n/**\n * Utility script that uses an animation frame to pass the current remaining value\n * (which is utilized when setting `timeout`).\n */\nconst remaining = (props) => {\n    let displayValue;\n    let reqId;\n    let isCanceled = false;\n    const identity = {\n        id: props.id,\n        spawn: props.spawn,\n    };\n    const update = () => {\n        const remainingValue = props.instance.getRemaining(identity);\n        if (displayValue !== remainingValue) {\n            displayValue =\n                remainingValue === undefined\n                    ? remainingValue\n                    : props.roundToSeconds\n                        ? Math.round(Math.max(remainingValue, 0) / 1000)\n                        : Math.max(remainingValue, 0);\n        }\n        props.callback(displayValue);\n        if (!props.instance.exists(identity)) {\n            window.cancelAnimationFrame(reqId);\n            isCanceled = true;\n        }\n        else if (!isCanceled) {\n            reqId = window.requestAnimationFrame(update);\n        }\n    };\n    reqId = window.requestAnimationFrame(update);\n};\n\nvar types = /*#__PURE__*/Object.freeze({\n    __proto__: null\n});\n\nexport { types as Dialogic, actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining, hide, hideAll, hideItem, isPaused, notification, pause, remaining, resetAll, resume, selectors, setDomElement, show, showItem, states };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { states, selectors, isPaused as isPaused$1, exists as exists$1, dialog as dialog$1, notification as notification$1, setDomElement, showItem, hideItem, filterCandidates } from 'dialogic';\nimport { writable, derived } from 'svelte/store';\nimport { SvelteComponent, init, safe_not_equal, element, create_component, attr, insert, mount_component, get_spread_update, get_spread_object, group_outros, transition_out, destroy_component, check_outros, transition_in, detach, assign, binding_callbacks, empty, update_keyed_each, outro_and_destroy_block, component_subscribe, exclude_internal_props, subscribe, noop } from 'svelte/internal';\nimport { createEventDispatcher, onMount } from 'svelte';\n\nconst appState = {\n  ...writable(states),\n  ...selectors,\n};\nstates.map(state =>\n  appState.set({\n    ...state,\n    ...selectors,\n  }),\n);\nconst getCount = ns => identityOptions =>\n  derived(appState, () => selectors.getCount(ns, identityOptions));\nconst isPaused = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    isPaused$1(ns)(defaultDialogicOptions)(identityOptions),\n  );\nconst exists = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    exists$1(ns)(defaultDialogicOptions)(identityOptions),\n  );\n\nconst dialog = {\n  ...dialog$1,\n  getCount: identityOptions => getCount(dialog$1.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(dialog$1.ns)(dialog$1.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(dialog$1.ns)(dialog$1.defaultDialogicOptions)(identityOptions),\n};\n\nconst notification = {\n  ...notification$1,\n  getCount: identityOptions => getCount(notification$1.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(notification$1.ns)(notification$1.defaultDialogicOptions)(\n      identityOptions,\n    ),\n  exists: identityOptions =>\n    exists(notification$1.ns)(notification$1.defaultDialogicOptions)(\n      identityOptions,\n    ),\n};\n\nconst handleDispatch = ns => (event, fn) => {\n  const maybeItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  const maybeTransitioningItem = selectors.find(\n    ns,\n    event.detail.identityOptions,\n  );\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\nconst onInstanceMounted = ns => event =>\n  handleDispatch(ns)(event, showItem);\nconst onShowInstance = ns => event =>\n  handleDispatch(ns)(event, showItem);\nconst onHideInstance = ns => event =>\n  handleDispatch(ns)(event, hideItem);\n\n/* src/Instance.svelte generated by Svelte v3.37.0 */\n\nfunction create_fragment$5(ctx) {\n\tlet div;\n\tlet switch_instance;\n\tlet current;\n\n\tconst switch_instance_spread_levels = [\n\t\t{ show: /*show*/ ctx[4] },\n\t\t{ hide: /*hide*/ ctx[5] },\n\t\t/*passThroughOptions*/ ctx[0]\n\t];\n\n\tvar switch_value = /*dialogicOptions*/ ctx[1].component;\n\n\tfunction switch_props(ctx) {\n\t\tlet switch_instance_props = {};\n\n\t\tfor (let i = 0; i < switch_instance_spread_levels.length; i += 1) {\n\t\t\tswitch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);\n\t\t}\n\n\t\treturn { props: switch_instance_props };\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props());\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tattr(div, \"class\", /*className*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, div, null);\n\t\t\t}\n\n\t\t\t/*div_binding*/ ctx[7](div);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst switch_instance_changes = (dirty & /*show, hide, passThroughOptions*/ 49)\n\t\t\t? get_spread_update(switch_instance_spread_levels, [\n\t\t\t\t\tdirty & /*show*/ 16 && { show: /*show*/ ctx[4] },\n\t\t\t\t\tdirty & /*hide*/ 32 && { hide: /*hide*/ ctx[5] },\n\t\t\t\t\tdirty & /*passThroughOptions*/ 1 && get_spread_object(/*passThroughOptions*/ ctx[0])\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tif (switch_value !== (switch_value = /*dialogicOptions*/ ctx[1].component)) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props());\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, div, null);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (switch_instance) destroy_component(switch_instance);\n\t\t\t/*div_binding*/ ctx[7](null);\n\t\t}\n\t};\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n\tconst dispatch = createEventDispatcher();\n\n\t// DOM bindings\n\tlet domElement;\n\n\tlet { identityOptions } = $$props;\n\tlet { passThroughOptions } = $$props;\n\tlet { dialogicOptions } = $$props;\n\tconst className = dialogicOptions ? dialogicOptions.className : \"\";\n\tconst dispatchTransition = name => dispatch(name, { identityOptions, domElement });\n\n\tconst show = () => {\n\t\tdispatchTransition(\"show\");\n\t};\n\n\tconst hide = () => {\n\t\tdispatchTransition(\"hide\");\n\t};\n\n\tonMount(() => {\n\t\tdispatchTransition(\"mount\");\n\t});\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? \"unshift\" : \"push\"](() => {\n\t\t\tdomElement = $$value;\n\t\t\t$$invalidate(2, domElement);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"identityOptions\" in $$props) $$invalidate(6, identityOptions = $$props.identityOptions);\n\t\tif (\"passThroughOptions\" in $$props) $$invalidate(0, passThroughOptions = $$props.passThroughOptions);\n\t\tif (\"dialogicOptions\" in $$props) $$invalidate(1, dialogicOptions = $$props.dialogicOptions);\n\t};\n\n\treturn [\n\t\tpassThroughOptions,\n\t\tdialogicOptions,\n\t\tdomElement,\n\t\tclassName,\n\t\tshow,\n\t\thide,\n\t\tidentityOptions,\n\t\tdiv_binding\n\t];\n}\n\nclass Instance extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$3, create_fragment$5, safe_not_equal, {\n\t\t\tidentityOptions: 6,\n\t\t\tpassThroughOptions: 0,\n\t\t\tdialogicOptions: 1\n\t\t});\n\t}\n}\n\n/* src/Wrapper.svelte generated by Svelte v3.37.0 */\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[1] = list[i].identityOptions;\n\tchild_ctx[6] = list[i].dialogicOptions;\n\tchild_ctx[7] = list[i].passThroughOptions;\n\tchild_ctx[8] = list[i].key;\n\tchild_ctx[10] = i;\n\treturn child_ctx;\n}\n\n// (17:0) {#each filterCandidates(ns, $appState.store, identityOptions) as { identityOptions, dialogicOptions, passThroughOptions, key }\nfunction create_each_block(key_1, ctx) {\n\tlet first;\n\tlet instance;\n\tlet current;\n\n\tinstance = new Instance({\n\t\t\tprops: {\n\t\t\t\tidentityOptions: /*identityOptions*/ ctx[1],\n\t\t\t\tdialogicOptions: /*dialogicOptions*/ ctx[6],\n\t\t\t\tpassThroughOptions: /*passThroughOptions*/ ctx[7]\n\t\t\t}\n\t\t});\n\n\tinstance.$on(\"mount\", /*nsOnInstanceMounted*/ ctx[3]);\n\tinstance.$on(\"show\", /*nsOnShowInstance*/ ctx[4]);\n\tinstance.$on(\"hide\", /*nsOnHideInstance*/ ctx[5]);\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tfirst = empty();\n\t\t\tcreate_component(instance.$$.fragment);\n\t\t\tthis.first = first;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, first, anchor);\n\t\t\tmount_component(instance, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst instance_changes = {};\n\t\t\tif (dirty & /*ns, $appState, identityOptions*/ 7) instance_changes.identityOptions = /*identityOptions*/ ctx[1];\n\t\t\tif (dirty & /*ns, $appState, identityOptions*/ 7) instance_changes.dialogicOptions = /*dialogicOptions*/ ctx[6];\n\t\t\tif (dirty & /*ns, $appState, identityOptions*/ 7) instance_changes.passThroughOptions = /*passThroughOptions*/ ctx[7];\n\t\t\tinstance.$set(instance_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(first);\n\t\t\tdestroy_component(instance, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$4(ctx) {\n\tlet each_blocks = [];\n\tlet each_1_lookup = new Map();\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = filterCandidates(/*ns*/ ctx[0], /*$appState*/ ctx[2].store, /*identityOptions*/ ctx[1]);\n\tconst get_key = ctx => /*key*/ ctx[8];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\tlet child_ctx = get_each_context(ctx, each_value, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*filterCandidates, ns, $appState, identityOptions, nsOnInstanceMounted, nsOnShowInstance, nsOnHideInstance*/ 63) {\n\t\t\t\teach_value = filterCandidates(/*ns*/ ctx[0], /*$appState*/ ctx[2].store, /*identityOptions*/ ctx[1]);\n\t\t\t\tgroup_outros();\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d(detaching);\n\t\t\t}\n\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\nfunction instance_1$2($$self, $$props, $$invalidate) {\n\tlet $appState;\n\tcomponent_subscribe($$self, appState, $$value => $$invalidate(2, $appState = $$value));\n\tlet { identityOptions } = $$props;\n\tlet { ns } = $$props;\n\tconst nsOnInstanceMounted = onInstanceMounted(ns);\n\tconst nsOnShowInstance = onShowInstance(ns);\n\tconst nsOnHideInstance = onHideInstance(ns);\n\n\t$$self.$$set = $$props => {\n\t\tif (\"identityOptions\" in $$props) $$invalidate(1, identityOptions = $$props.identityOptions);\n\t\tif (\"ns\" in $$props) $$invalidate(0, ns = $$props.ns);\n\t};\n\n\treturn [\n\t\tns,\n\t\tidentityOptions,\n\t\t$appState,\n\t\tnsOnInstanceMounted,\n\t\tnsOnShowInstance,\n\t\tnsOnHideInstance\n\t];\n}\n\nclass Wrapper extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance_1$2, create_fragment$4, safe_not_equal, { identityOptions: 1, ns: 0 });\n\t}\n}\n\n/* src/Dialogical.svelte generated by Svelte v3.37.0 */\n\nfunction create_fragment$3(ctx) {\n\tlet wrapper;\n\tlet current;\n\n\twrapper = new Wrapper({\n\t\t\tprops: {\n\t\t\t\tidentityOptions: /*identityOptions*/ ctx[1],\n\t\t\t\tns: /*ns*/ ctx[0]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(wrapper.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(wrapper, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst wrapper_changes = {};\n\t\t\tif (dirty & /*ns*/ 1) wrapper_changes.ns = /*ns*/ ctx[0];\n\t\t\twrapper.$set(wrapper_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(wrapper.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(wrapper.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(wrapper, detaching);\n\t\t}\n\t};\n}\n\nfunction instance_1$1($$self, $$props, $$invalidate) {\n\tlet { instance } = $$props;\n\tlet { ns = instance.ns } = $$props;\n\tlet { spawn = undefined } = $$props;\n\tlet { id = undefined } = $$props;\n\tlet { onMount: onMount$1 = undefined } = $$props;\n\n\tconst identityOptions = {\n\t\tid: id || instance.defaultId,\n\t\tspawn: spawn || instance.defaultSpawn\n\t};\n\n\tonMount(() => {\n\t\tif (typeof onMount$1 === \"function\") {\n\t\t\tonMount$1();\n\t\t}\n\t});\n\n\t$$self.$$set = $$props => {\n\t\tif (\"instance\" in $$props) $$invalidate(2, instance = $$props.instance);\n\t\tif (\"ns\" in $$props) $$invalidate(0, ns = $$props.ns);\n\t\tif (\"spawn\" in $$props) $$invalidate(3, spawn = $$props.spawn);\n\t\tif (\"id\" in $$props) $$invalidate(4, id = $$props.id);\n\t\tif (\"onMount\" in $$props) $$invalidate(5, onMount$1 = $$props.onMount);\n\t};\n\n\treturn [ns, identityOptions, instance, spawn, id, onMount$1];\n}\n\nclass Dialogical extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance_1$1, create_fragment$3, safe_not_equal, {\n\t\t\tinstance: 2,\n\t\t\tns: 0,\n\t\t\tspawn: 3,\n\t\t\tid: 4,\n\t\t\tonMount: 5\n\t\t});\n\t}\n}\n\n/* src/Dialog.svelte generated by Svelte v3.37.0 */\n\nfunction create_fragment$2(ctx) {\n\tlet dialogical;\n\tlet current;\n\tconst dialogical_spread_levels = [/*$$props*/ ctx[0], { instance: dialog }];\n\tlet dialogical_props = {};\n\n\tfor (let i = 0; i < dialogical_spread_levels.length; i += 1) {\n\t\tdialogical_props = assign(dialogical_props, dialogical_spread_levels[i]);\n\t}\n\n\tdialogical = new Dialogical({ props: dialogical_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(dialogical.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(dialogical, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst dialogical_changes = (dirty & /*$$props, dialog*/ 1)\n\t\t\t? get_spread_update(dialogical_spread_levels, [\n\t\t\t\t\tdirty & /*$$props*/ 1 && get_spread_object(/*$$props*/ ctx[0]),\n\t\t\t\t\tdirty & /*dialog*/ 0 && { instance: dialog }\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tdialogical.$set(dialogical_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(dialogical.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(dialogical.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(dialogical, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass Dialog extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, {});\n\t}\n}\n\n/* src/Notification.svelte generated by Svelte v3.37.0 */\n\nfunction create_fragment$1(ctx) {\n\tlet dialogical;\n\tlet current;\n\tconst dialogical_spread_levels = [/*$$props*/ ctx[0], { instance: notification }];\n\tlet dialogical_props = {};\n\n\tfor (let i = 0; i < dialogical_spread_levels.length; i += 1) {\n\t\tdialogical_props = assign(dialogical_props, dialogical_spread_levels[i]);\n\t}\n\n\tdialogical = new Dialogical({ props: dialogical_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(dialogical.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(dialogical, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst dialogical_changes = (dirty & /*$$props, notification*/ 1)\n\t\t\t? get_spread_update(dialogical_spread_levels, [\n\t\t\t\t\tdirty & /*$$props*/ 1 && get_spread_object(/*$$props*/ ctx[0]),\n\t\t\t\t\tdirty & /*notification*/ 0 && { instance: notification }\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tdialogical.$set(dialogical_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(dialogical.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(dialogical.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(dialogical, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass Notification extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, {});\n\t}\n}\n\n/* src/UseDialogic.svelte generated by Svelte v3.37.0 */\n\nfunction instance_1($$self, $$props, $$invalidate) {\n\tlet augProps;\n\n\tlet $effect,\n\t\t$$unsubscribe_effect = noop,\n\t\t$$subscribe_effect = () => ($$unsubscribe_effect(), $$unsubscribe_effect = subscribe(effect, $$value => $$invalidate(7, $effect = $$value)), effect);\n\n\t$$self.$$.on_destroy.push(() => $$unsubscribe_effect());\n\tlet useDialogicCounter = 0;\n\tconst useEffect = subscribe => ({ subscribe });\n\tconst id = useDialogicCounter++;\n\tlet { props } = $$props;\n\tlet { isShow = undefined } = $$props;\n\tlet { isHide = undefined } = $$props;\n\tlet { isIgnore = undefined } = $$props;\n\tlet { deps } = $$props;\n\tlet { instance } = $$props;\n\n\tconst showInstance = () => {\n\t\tinstance.show(augProps);\n\t};\n\n\tconst hideInstance = () => {\n\t\tinstance.hide(augProps);\n\t};\n\n\tlet effect;\n\n\tonMount(() => {\n\t\treturn () => {\n\t\t\thideInstance();\n\t\t};\n\t});\n\n\t$$self.$$set = $$props => {\n\t\tif (\"props\" in $$props) $$invalidate(1, props = $$props.props);\n\t\tif (\"isShow\" in $$props) $$invalidate(2, isShow = $$props.isShow);\n\t\tif (\"isHide\" in $$props) $$invalidate(3, isHide = $$props.isHide);\n\t\tif (\"isIgnore\" in $$props) $$invalidate(4, isIgnore = $$props.isIgnore);\n\t\tif (\"deps\" in $$props) $$invalidate(5, deps = $$props.deps);\n\t\tif (\"instance\" in $$props) $$invalidate(6, instance = $$props.instance);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*props*/ 2) {\n\t\t\t// Make augProps reactive\n\t\t\taugProps = {\n\t\t\t\t...props,\n\t\t\t\t...props.dialogic\n\t\t\t\t? {\n\t\t\t\t\t\tdialogic: {\n\t\t\t\t\t\t\t...props.dialogic,\n\t\t\t\t\t\t\tid: props.dialogic.id || id\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t: { dialogic: { id } }\n\t\t\t};\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*deps, isIgnore, isShow, isHide*/ 60) {\n\t\t\t$$subscribe_effect($$invalidate(0, effect = useEffect(() => {\n\n\t\t\t\tif (!isIgnore) {\n\t\t\t\t\tif (isShow !== undefined) {\n\t\t\t\t\t\tif (isShow) {\n\t\t\t\t\t\t\tshowInstance();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thideInstance();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isHide !== undefined) {\n\t\t\t\t\t\tif (isHide) {\n\t\t\t\t\t\t\thideInstance();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn () => {\n\t\t\t\t\t\n\t\t\t\t}; // required\n\t\t\t})));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*$effect*/ 128) ;\n\t};\n\n\treturn [effect, props, isShow, isHide, isIgnore, deps, instance, $effect];\n}\n\nclass UseDialogic extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance_1, null, safe_not_equal, {\n\t\t\tprops: 1,\n\t\t\tisShow: 2,\n\t\t\tisHide: 3,\n\t\t\tisIgnore: 4,\n\t\t\tdeps: 5,\n\t\t\tinstance: 6\n\t\t});\n\t}\n}\n\n/* src/UseDialog.svelte generated by Svelte v3.37.0 */\n\nfunction create_fragment(ctx) {\n\tlet usedialogic;\n\tlet current;\n\tconst usedialogic_spread_levels = [{ instance: dialog$1 }, /*$$props*/ ctx[0]];\n\tlet usedialogic_props = {};\n\n\tfor (let i = 0; i < usedialogic_spread_levels.length; i += 1) {\n\t\tusedialogic_props = assign(usedialogic_props, usedialogic_spread_levels[i]);\n\t}\n\n\tusedialogic = new UseDialogic({ props: usedialogic_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(usedialogic.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(usedialogic, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst usedialogic_changes = (dirty & /*dialog, $$props*/ 1)\n\t\t\t? get_spread_update(usedialogic_spread_levels, [\n\t\t\t\t\tdirty & /*dialog*/ 0 && { instance: dialog$1 },\n\t\t\t\t\tdirty & /*$$props*/ 1 && get_spread_object(/*$$props*/ ctx[0])\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tusedialogic.$set(usedialogic_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(usedialogic.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(usedialogic.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(usedialogic, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass UseDialog extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport { Dialog, Dialogical, Notification, UseDialog, UseDialogic, dialog, notification };\n","<script>\n  import { dialog, notification } from \"dialogic-svelte\";\n</script>\n\n<div class=\"mdc-dialog__container\">\n  <div class=\"mdc-dialog__surface\">\n    <div>\n      <h2 class=\"h2 mdc-dialog__title\">\n        {$$props.title}\n      </h2>\n      <div class=\"mdc-dialog__content\">\n        {$$props.body}\n      </div>\n      <footer class=\"mdc-dialog__actions\">\n        <div>\n          <button\n            class=\"mdc-button mdc-dialog__button\"\n            on:click={() => {\n              dialog.hide();\n              $$props.onReject();\n            }}\n          >\n            <span class=\"mdc-button__label\">Never mind</span>\n          </button>\n          <button\n            class=\"mdc-button mdc-dialog__button\"\n            on:click={() => {\n              dialog.hide();\n              $$props.onAccept();\n            }}\n          >\n            <span class=\"mdc-button__label\">Yes, retry</span>\n          </button>\n        </div>\n      </footer>\n    </div>\n  </div>\n</div>\n","<script>\n  import DialogContent from \"./DialogContent.svelte\";\n</script>\n\n<div\n  class=\"mdc-dialog mdc-dialog--open\"\n  role=\"alertdialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"my-dialog-title\"\n  aria-describedby=\"my-dialog-content\"\n  >\n    <DialogContent {...$$props} />\n    <div class=\"mdc-dialog__scrim\"/> <!-- modal, onclick is not used -->\n</div>\n","<script>\n  import { dialog, notification } from \"dialogic-svelte\";\n  import DialogComponent from \"./DialogComponent.svelte\";\n  import { remaining } from \"dialogic\";\n\n  let remainingSeconds;\n\n  remaining({\n    instance: notification,\n    roundToSeconds: true,\n    callback: (newValue) => {\n      remainingSeconds = newValue;\n    },\n  });\n\n</script>\n\n<div class=\"mdc-snackbar__label\">\n  {#if remainingSeconds !== undefined}\n    Can't send photo. Retrying in {remainingSeconds} seconds.\n  {:else}\n    Can't send photo.\n  {/if}\n</div>\n<div class=\"mdc-snackbar__actions\">\n  <button\n    class=\"button mdc-button mdc-snackbar__action\"\n    on:click={() => {\n      notification.pause();\n      dialog.show({\n        dialogic: {\n          component: DialogComponent,\n          className: \"dialog\",\n        },\n        title: \"Retry sending?\",\n        body: \"We have noticed a slow internet connection. Even when you retry now, sending may take longer than usual.\",\n        onAccept: () => {\n          notification.hide();\n          notification.resume();\n        },\n        onReject: () => {\n          notification.resume({ minimumDuration: 2000 });\n        }\n      });\n    }}>\n    Retry now\n  </button>\n</div>\n","<script>\n  import { remaining } from \"dialogic\";\n\n  export let instance;\n  export let roundToSeconds;\n  let remainingSeconds;\n\n  remaining({\n    instance,\n    roundToSeconds: roundToSeconds,\n    callback: (newValue) => {\n      remainingSeconds = newValue;\n    },\n  });\n  \n</script>\n\n<div class=\"remaining\">\n  <span>\n    {remainingSeconds === undefined\n      ? \"0\"\n      : remainingSeconds.toString()\n    }\n  </span>\n</div>\n\n<style>\n.remaining {\n  min-width: 3em;\n  text-align: left;\n}\n</style>\n","<script>\n\timport { Dialog, notification, Notification } from \"dialogic-svelte\";\n\timport NotificationComponent from \"./NotificationComponent.svelte\";\n\timport RemainingLabel from \"./RemainingLabel.svelte\";\n\timport { remaining } from \"dialogic\";\n\n\tconst notificationIsPaused = notification.isPaused();\n\tconst notificationExists = notification.exists();\n\tconst notificationCount = notification.getCount();\n</script>\n\n<div class=\"page\">\n\t<main>\n\t\t<h1>Dialogic for Svelte demo</h1>\n\t\t<div class=\"message\">Add one or more notifications, then click on the Retry button in the message.</div>\n\t\t<div class=\"ui message\">\n\t\t\t<button\n\t\t\t\tclass=\"ui button primary\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.show({\n\t\t\t\t\t\tdialogic: {\n\t\t\t\t\t\t\tcomponent: NotificationComponent,\n\t\t\t\t\t\t\tclassName: \"notification\",\n\t\t\t\t\t\t\ttimeout: 4000\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}}>\n\t\t\t\tAdd notification\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.pause()\n\t\t\t\t}}>\n\t\t\t\tPause\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.resume()\n\t\t\t\t}}>\n\t\t\t\tResume\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.hideAll()\n\t\t\t\t}}>\n\t\t\t\tHide all\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.resetAll()\n\t\t\t\t}}>\n\t\t\t\tReset all\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"ui message\">\n\t\t\t<div class=\"ui label\">\n\t\t\t\tNotifications\n\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t{$notificationCount}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"ui label\">\n\t\t\t\tIs paused\n\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t{$notificationIsPaused}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{#if $notificationExists}\n\t\t\t\t<div class=\"ui label\">\n\t\t\t\t\tRemaining\n\t\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t\t<RemainingLabel instance={notification} roundToSeconds={false} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</main>\n\t<footer>\n\t\tDialogic: manage dialogs and notifications. <a href='https://github.com/ArthurClemens/dialogic'>Main documentation on GitHub</a>\n\t</footer>\n</div>\n<Dialog />\n<Notification />\n","import App from './App.svelte';\n\nimport \"./styles.css\";\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","Stream","SKIP","lift","arguments","streams","prototype","merge","apply","scan","acc","origin","stream","v","next","combine","scanMerge","tuples","seed","tuple","changed","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","createEnd","_parents","_unregisterChild","constructor","_map","ignoreInitial","toJSON","x","s1","s2","child","childIndex","defineProperty","get","every","concat","mappers","endStream","mapper","console","log","module","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","Boolean","join","initialState","actions","state","timer","states","refresh","remove","remaining","removeItem","replace","newItem","removeAll","newItems","selectors","getStore","fitem","just","nothing","getAll","itemsBySpawn","getCount","patch","isPaused","onAbort","onDone","promise","startTime","timeoutFn","timerId","appendStopTimeout","window","clearTimeout","appendPauseTimer","getRemaining$1","Date","getTime","TimerStore","start","duration","updateState","setTimeout","appendStartTimer","done","stop","appendStopTimer","pause","resume","minimumDuration","Math","max","appendResumeTimer","abort","getRemaining","getResultPromise","pipe","reduce","y","f","getStyleValue","domElement","prop","defaultView","style","getComputedStyle","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","createClassList","className","split","applyStylesForState","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","removeTransitionClassNames","scrollTop","styleDurationToMs","durationStr","parsed","parseFloat","Number","isNaN","steps","nextStep","transition","mode","__transitionTimeoutId__","currentStep","durationStyleValue","durationValue","delayStyleValue","getDuration","localState","uid","TransitionStates","getMaybeItem","defaultDialogicOptions","getMergedIdentityOptions","filterBySpawn","filterFirstInQueue","nsItems","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","handleOptions","dialogic","passThroughOptions","copy","getPassThroughOptions","show","willShow","willHide","didShow","didHide","timeout","MAX_VALUE","toString","transitionState","Default","existingItem","toggle","hide","replacingItem","Hiding","hideItem","validItems","getValidItems","all","commandOptions","getTimerSelectors","_a","_b","maybeItem","exists","allItems","filterById","resetAll","getOverridingTransitionOptions","hideAll","regularItems","queuedItems","current","transitionItem","deferredHideItem","async","showItem","Displaying","dialogical","defaultId","defaultSpawn","dialog","notification","displayValue","reqId","isCanceled","identity","remainingValue","roundToSeconds","round","requestAnimationFrame","cancelAnimationFrame","freeze","__proto__","subscriber_queue","writable","subscribers","set","new_value","run_queue","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","appState","isPaused$1","exists$1","dialog$1","notification$1","handleDispatch","maybeTransitioningItem","create_fragment$5","div","switch_instance","switch_instance_spread_levels","switch_value","switch_props","switch_instance_props","switch_instance_changes","old_component","$set","instance$3","$$self","$$invalidate","dispatch","dispatchTransition","$$value","Instance","super","get_each_context","list","child_ctx","create_each_block","key_1","first","$on","new_ctx","instance_changes","create_fragment$4","each_1_anchor","each_blocks","each_1_lookup","each_value","get_key","old_blocks","dynamic","destroy","get_context","old_indexes","new_blocks","new_lookup","deltas","abs","will_move","did_move","new_block","old_block","new_key","old_key","update_keyed_each","instance_1$2","$appState","nsOnInstanceMounted","onInstanceMounted","nsOnShowInstance","onShowInstance","nsOnHideInstance","onHideInstance","Wrapper","create_fragment$3","wrapper","wrapper_changes","instance_1$1","onMount$1","Dialogical","create_fragment$2","dialogical_spread_levels","dialogical_props","dialogical_changes","instance$2","$$new_props","Dialog","create_fragment$1","instance$1","Notification","title","body","onReject","onAccept","remainingSeconds","newValue","DialogComponent","notificationIsPaused","notificationExists","notificationCount","NotificationComponent"],"mappings":"mPAAA,SAASA,KAET,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAahF,SAASE,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAOnB,EAEX,MAAMqB,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,EAO3D,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,IA6ClD,SAASI,EAAuBC,GAC5B,MAAMC,EAAS,GACf,IAAK,MAAM3B,KAAK0B,EACC,MAAT1B,EAAE,KACF2B,EAAO3B,GAAK0B,EAAM1B,IAC1B,OAAO2B,EAsFX,SAASC,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOjB,EAAMkB,EAAOC,EAASC,GAElC,OADApB,EAAKqB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMpB,EAAKsB,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAKvB,EAAMwB,EAAWC,GACd,MAATA,EACAzB,EAAK0B,gBAAgBF,GAChBxB,EAAK2B,aAAaH,KAAeC,GACtCzB,EAAK4B,aAAaJ,EAAWC,GAgGrC,SAASI,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKkB,YAAcjB,IACnBD,EAAKC,KAAOA,GAsRpB,IAAIkB,EACJ,SAASC,EAAsB1C,GAC3ByC,EAAoBzC,EAExB,SAAS2C,IACL,IAAKF,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,EAKX,SAASI,EAAQ/D,GACb6D,IAAwBzC,GAAG4C,SAAS1C,KAAKtB,GAQ7C,SAASiE,IACL,MAAM/C,EAAY2C,IAClB,MAAO,CAACK,EAAMC,KACV,MAAMrD,EAAYI,EAAUE,GAAGN,UAAUoD,GACzC,GAAIpD,EAAW,CAGX,MAAMgC,EApNlB,SAAsBoB,EAAMC,GACxB,MAAMC,EAAI9B,SAAS+B,YAAY,eAE/B,OADAD,EAAEE,gBAAgBJ,GAAM,GAAO,EAAOC,GAC/BC,EAiNeG,CAAaL,EAAMC,GACjCrD,EAAU0D,QAAQlE,QAAQN,IACtBA,EAAGyE,KAAKvD,EAAW4B,OAwBnC,MAAM4B,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBlF,GACzB4E,EAAiBtD,KAAKtB,GAK1B,IAAImF,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAII,EAAI,EAAGA,EAAIb,EAAiBc,OAAQD,GAAK,EAAG,CACjD,MAAMrE,EAAYwD,EAAiBa,GACnC3B,EAAsB1C,GACtBuE,EAAOvE,EAAUE,IAIrB,IAFAwC,EAAsB,MACtBc,EAAiBc,OAAS,EACnBb,EAAkBa,QACrBb,EAAkBe,KAAlBf,GAIJ,IAAK,IAAIY,EAAI,EAAGA,EAAIX,EAAiBY,OAAQD,GAAK,EAAG,CACjD,MAAMpE,EAAWyD,EAAiBW,GAC7BH,EAAeO,IAAIxE,KAEpBiE,EAAeQ,IAAIzE,GACnBA,KAGRyD,EAAiBY,OAAS,QACrBd,EAAiBc,QAC1B,KAAOX,EAAgBW,QACnBX,EAAgBa,KAAhBb,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAeS,SAEnB,SAASJ,EAAOrE,GACZ,GAAoB,OAAhBA,EAAG0E,SAAmB,CACtB1E,EAAGqE,SACHrF,EAAQgB,EAAG2E,eACX,MAAMC,EAAQ5E,EAAG4E,MACjB5E,EAAG4E,MAAQ,EAAE,GACb5E,EAAG0E,UAAY1E,EAAG0E,SAASG,EAAE7E,EAAG8E,IAAKF,GACrC5E,EAAG+E,aAAa7F,QAAQ4E,IAiBhC,MAAMkB,EAAW,IAAIf,IACrB,IAAIgB,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACRnG,EAAQiG,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMpB,IACfa,EAASS,OAAOF,GAChBA,EAAMpB,EAAEqB,IAGhB,SAASE,EAAeH,EAAOC,EAAO3E,EAAQd,GAC1C,GAAIwF,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAElF,KAAK,KACV8E,EAASS,OAAOF,GACZxF,IACIc,GACA0E,EAAMK,EAAE,GACZ7F,OAGRwF,EAAMI,EAAEH,IAqThB,SAASK,EAAwBN,EAAOO,GACpCJ,EAAeH,EAAO,EAAG,EAAG,KACxBO,EAAOL,OAAOF,EAAMQ,OAiG5B,SAASC,EAAkBC,EAAQC,GAC/B,MAAM7B,EAAS,GACT8B,EAAc,GACdC,EAAgB,CAAEC,QAAS,GACjC,IAAIlC,EAAI8B,EAAO7B,OACf,KAAOD,KAAK,CACR,MAAMwB,EAAIM,EAAO9B,GACXmC,EAAIJ,EAAQ/B,GAClB,GAAImC,EAAG,CACH,IAAK,MAAMP,KAAOJ,EACRI,KAAOO,IACTH,EAAYJ,GAAO,GAE3B,IAAK,MAAMA,KAAOO,EACTF,EAAcL,KACf1B,EAAO0B,GAAOO,EAAEP,GAChBK,EAAcL,GAAO,GAG7BE,EAAO9B,GAAKmC,OAGZ,IAAK,MAAMP,KAAOJ,EACdS,EAAcL,GAAO,EAIjC,IAAK,MAAMA,KAAOI,EACRJ,KAAO1B,IACTA,EAAO0B,QAAOQ,GAEtB,OAAOlC,EAEX,SAASmC,EAAkBC,GACvB,MAA+B,iBAAjBA,GAA8C,OAAjBA,EAAwBA,EAAe,GAkJtF,SAASC,EAAiBnB,GACtBA,GAASA,EAAMH,IAKnB,SAASuB,EAAgB7G,EAAWS,EAAQI,EAAQiG,GAChD,MAAMlC,SAAEA,EAAQ9B,SAAEA,EAAQ3C,WAAEA,EAAU8E,aAAEA,GAAiBjF,EAAUE,GACnE0E,GAAYA,EAASmC,EAAEtG,EAAQI,GAC1BiG,GAED9C,EAAoB,KAChB,MAAMgD,EAAiBlE,EAASmE,IAAIpI,GAAKqI,OAAO7H,GAC5Cc,EACAA,EAAWC,QAAQ4G,GAKnB9H,EAAQ8H,GAEZhH,EAAUE,GAAG4C,SAAW,KAGhCmC,EAAa7F,QAAQ4E,GAEzB,SAASmD,EAAkBnH,EAAWoH,GAClC,MAAMlH,EAAKF,EAAUE,GACD,OAAhBA,EAAG0E,WACH1F,EAAQgB,EAAGC,YACXD,EAAG0E,UAAY1E,EAAG0E,SAASkB,EAAEsB,GAG7BlH,EAAGC,WAAaD,EAAG0E,SAAW,KAC9B1E,EAAG8E,IAAM,IAGjB,SAASqC,EAAWrH,EAAWqE,IACI,IAA3BrE,EAAUE,GAAG4E,MAAM,KACnBtB,EAAiBpD,KAAKJ,GAluBrB+D,IACDA,GAAmB,EACnBH,EAAiB0D,KAAKlD,IAkuBtBpE,EAAUE,GAAG4E,MAAMyC,KAAK,IAE5BvH,EAAUE,GAAG4E,MAAOT,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASmD,EAAKxH,EAAW8B,EAAS2F,EAAUC,EAAiBC,EAAWrH,EAAOwE,EAAQ,EAAE,IACrF,MAAM8C,EAAmBnF,EACzBC,EAAsB1C,GACtB,MAAME,EAAKF,EAAUE,GAAK,CACtB0E,SAAU,KACVI,IAAK,KAEL1E,MAAAA,EACAiE,OAAQ/F,EACRmJ,UAAAA,EACAE,MAAO9I,IAEP+D,SAAU,GACV3C,WAAY,GACZ2H,cAAe,GACfjD,cAAe,GACfI,aAAc,GACd8C,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiB1H,GAAG6H,QAAUjG,EAAQiG,SAAW,IAErFnI,UAAWb,IACX+F,MAAAA,EACAmD,YAAY,GAEhB,IAAIC,GAAQ,EAkBZ,GAjBAhI,EAAG8E,IAAMyC,EACHA,EAASzH,EAAW8B,EAAQxB,OAAS,GAAI,CAAC+D,EAAG8D,KAAQC,KACnD,MAAMjG,EAAQiG,EAAK9D,OAAS8D,EAAK,GAAKD,EAOtC,OANIjI,EAAG8E,KAAO2C,EAAUzH,EAAG8E,IAAIX,GAAInE,EAAG8E,IAAIX,GAAKlC,MACtCjC,EAAG+H,YAAc/H,EAAG2H,MAAMxD,IAC3BnE,EAAG2H,MAAMxD,GAAGlC,GACZ+F,GACAb,EAAWrH,EAAWqE,IAEvB8D,IAET,GACNjI,EAAGqE,SACH2D,GAAQ,EACRhJ,EAAQgB,EAAG2E,eAEX3E,EAAG0E,WAAW8C,GAAkBA,EAAgBxH,EAAG8E,KAC/ClD,EAAQrB,OAAQ,CAChB,GAAIqB,EAAQuG,QAAS,CACjB,MAAMC,EA9oClB,SAAkBpH,GACd,OAAOqH,MAAMC,KAAKtH,EAAQuH,YA6oCJC,CAAS5G,EAAQrB,QAE/BP,EAAG0E,UAAY1E,EAAG0E,SAAS+D,EAAEL,GAC7BA,EAAMlJ,QAAQ2B,QAIdb,EAAG0E,UAAY1E,EAAG0E,SAASU,IAE3BxD,EAAQ8G,OACRpD,EAAcxF,EAAUE,GAAG0E,UAC/BiC,EAAgB7G,EAAW8B,EAAQrB,OAAQqB,EAAQjB,OAAQiB,EAAQgF,eACnE1C,IAEJ1B,EAAsBkF,GAkD1B,MAAMiB,EACFC,WACI3B,EAAkB4B,KAAM,GACxBA,KAAKC,SAAWxK,EAEpBsK,IAAI9F,EAAM/C,GACN,MAAML,EAAamJ,KAAK7I,GAAGN,UAAUoD,KAAU+F,KAAK7I,GAAGN,UAAUoD,GAAQ,IAEzE,OADApD,EAAUQ,KAAKH,GACR,KACH,MAAMgJ,EAAQrJ,EAAUsJ,QAAQjJ,IACjB,IAAXgJ,GACArJ,EAAUuJ,OAAOF,EAAO,IAGpCH,KAAKM,GA//CT,IAAkBC,EAggDNN,KAAKO,QAhgDCD,EAggDkBD,EA//CG,IAA5BpK,OAAOuK,KAAKF,GAAK/E,UAggDhByE,KAAK7I,GAAG+H,YAAa,EACrBc,KAAKO,MAAMF,GACXL,KAAK7I,GAAG+H,YAAa,wFCpiD/B,WAGFuB,EAAOC,KAAO,GACdD,EAAOE,KA6JP,WACC,IAAI5K,EAAK6K,UAAU,GACfC,EAAUrB,MAAMsB,UAAUvG,MAAMC,KAAKoG,UAAW,GACpD,OAAOG,EAAMF,GAAS3C,KAAI,SAAS2C,GAClC,OAAO9K,EAAGiL,WAAMtD,EAAWmD,OAhK7BJ,EAAOQ,KAgIP,SAAclL,EAAImL,EAAKC,GACtB,IAAIC,EAASD,EAAOjD,KAAI,SAASmD,GAChC,IAAIC,EAAOvL,EAAGmL,EAAKG,GAEnB,OADIC,IAASb,EAAOC,OAAMQ,EAAMI,GACzBA,KAGR,OADAF,EAAOF,GACAE,GAtIRX,EAAOM,MAAQA,EACfN,EAAOc,QAAUA,EACjBd,EAAOe,UAuIP,SAAmBC,EAAQC,GAC1B,IAAIb,EAAUY,EAAOvD,KAAI,SAASyD,GAAS,OAAOA,EAAM,MAEpDP,EAASG,GAAQ,WACpB,IAAIK,EAAUhB,UAAUA,UAAUrF,OAAS,GAM3C,OALAsF,EAAQxK,SAAQ,SAAS+K,EAAQ9F,GAC5BsG,EAAQzB,QAAQiB,IAAW,IAC9BM,EAAOD,EAAOnG,GAAG,GAAGoG,EAAMN,SAGrBM,IACLb,GAIH,OAFAO,EAAOM,GAEAN,GArJRX,EAAO,mBAAqBA,EAE5B,IAAIoB,GAAa,EASjB,SAASpB,EAAOrH,GACf,IAuCI0I,EAvCAC,EAAmB,GACnBC,EAAe,GAEnB,SAASZ,EAAOC,GAUf,OATIT,UAAUrF,QAAU8F,IAAMZ,EAAOC,OACpCtH,EAAQiI,EACJY,EAAKb,KACRA,EAAOc,YACPd,EAAOe,OAAS,SAChBJ,EAAiB1L,SAAQ,SAAS+L,EAAG9G,GAAK8G,EAAEJ,EAAa1G,GAAGlC,SAIvDA,EA2BR,SAASiJ,IAUR,OATAP,EAAMrB,KACFvC,KAAI,SAAS9E,GAMhB,OALc,IAAVA,IACHgI,EAAOkB,SAASjM,SAAQ,SAAU2F,GAAIA,EAAEuG,iBAAiBnB,MACzDA,EAAOe,OAAS,QAChBf,EAAOkB,SAAS/G,OAASwG,EAAiBxG,OAASyG,EAAazG,OAAS,GAEnEnC,KAED0I,EAoBR,OAtDAV,EAAOoB,YAAc/B,EACrBW,EAAOe,OAASvB,UAAUrF,QAAUnC,IAAUqH,EAAOC,KAAO,SAAW,UACvEU,EAAOkB,SAAW,GAElBlB,EAAOc,UAAY,WACdD,EAAKb,KAASA,EAAOe,OAAS,YAClCJ,EAAiB1L,SAAQ,SAAS+L,GACjCA,EAAEF,gBAIJd,EAAOqB,KAAO,SAAS1M,EAAI2M,GAC1B,IAAIhL,EAASgL,EAAgBjC,IAAWA,EAAO1K,EAAGqD,IAIlD,OAHA1B,EAAO4K,SAASjL,KAAK+J,GACrBW,EAAiB1K,KAAKK,GACtBsK,EAAa3K,KAAKtB,GACX2B,GAGR0J,EAAOlD,IAAM,SAASnI,GACrB,OAAOqL,EAAOqB,KAAK1M,EAAsB,WAAlBqL,EAAOe,SAiB/Bf,EAAOuB,OAAS,WAAa,OAAgB,MAATvJ,GAAyC,mBAAjBA,EAAMuJ,OAAwBvJ,EAAMuJ,SAAWvJ,GAE3GgI,EAAO,oBAAsBA,EAAOlD,IACpCkD,EAAO,mBAAqB,SAASwB,GAAK,OAAOrB,GAAQ,SAASsB,EAAIC,GAAM,OAAOD,GAAAA,CAAKC,OAAS,CAACF,EAAGxB,KAErGA,EAAOmB,iBAAmB,SAASQ,GAClC,IAAIC,EAAajB,EAAiB5B,QAAQ4C,IACtB,IAAhBC,IACHjB,EAAiB3B,OAAO4C,EAAY,GACpChB,EAAa5B,OAAO4C,EAAY,KAIlC/M,OAAOgN,eAAe7B,EAAQ,MAAO,CACpC8B,IAAK,WAAa,OAAOpB,GAAOO,OAG1BjB,EAGR,SAASG,EAAQxL,EAAI8K,GACpB,IAAI1B,EAAQ0B,EAAQsC,OAAM,SAASf,GAClC,GAAIA,EAAEI,cAAgB/B,EACrB,MAAM,IAAI5G,MAAM,gFACjB,MAAoB,WAAbuI,EAAED,UAENf,EAASjC,EACVsB,EAAO1K,EAAGiL,MAAM,KAAMH,EAAQuC,OAAO,CAACvC,MACtCJ,IAECmB,EAAU,GAEVyB,EAAUxC,EAAQ3C,KAAI,SAASkE,GAClC,OAAOA,EAAEK,MAAK,SAASrJ,GAOtB,OANAwI,EAAQvK,KAAK+K,IACTjD,GAAS0B,EAAQsC,OAAM,SAASf,GAAK,MAAoB,YAAbA,EAAED,aACjDhD,GAAQ,EACRiC,EAAOrL,EAAGiL,MAAM,KAAMH,EAAQuC,OAAO,CAACxB,MACtCA,EAAU,IAEJxI,KACL,MAGAkK,EAAYlC,EAAOU,IAAI5D,KAAI,SAAS9E,IACzB,IAAVA,IACHiK,EAAQhN,SAAQ,SAASkN,GAAUA,EAAOzB,KAAI,MAC9CwB,EAAUxB,KAAI,OAKhB,OAAOV,EAGR,SAASL,EAAMF,GACd,OAAOU,GAAQ,WAAa,OAAOV,EAAQ3C,KAAI,SAASkE,GAAK,OAAOA,SAAUvB,GAuC/E,SAASoB,EAAKG,GACb,MAAoB,YAAbA,EAAED,QAAqC,WAAbC,EAAED,QAAoC,aAAbC,EAAED,OA9J7DlM,OAAOgN,eAAexC,EAAQ,OAAQ,CACrCyC,IAAK,WAGJ,OAFArB,GAAc2B,QAAQC,IAAI,mDAC1B5B,GAAa,EACNpB,EAAOC,QA6JmBgD,EAAgB,QAAIjD,EA7KtD,MCED,MACMkD,EAAY,CAACC,EAAIC,KACnB,MAAMC,EAFO,EAACF,EAAIC,IAAUA,EAAME,KAAKD,GAAQA,EAAKF,KAAOA,GAE9CI,CAASJ,EAAIC,GAC1B,OAAOC,EAAOD,EAAM1D,QAAQ2D,IAAS,GASnCG,EAAW,CAACC,EAAiBC,IAAO,CAACA,EAAID,EAAgBN,GAAIM,EAAgBE,OAAOjG,OAAOkG,SAASC,KAAK,KACzG1N,GAAQ,CACV2N,aAAc,CACV3N,MAAO,IAEX4N,QAAUhJ,KAING,IAAK,CAACwI,EAAIL,KACNtI,EAAQiJ,IACJ,MAAMZ,EAAQY,EAAM7N,MAAMuN,IAAO,GAMjC,OALAM,EAAM7N,MAAMuN,GAAM,IAAIN,EAAOC,GACzBA,EAAKY,OAELZ,EAAKY,MAAMC,OAAOzG,IAAI,IAAMtH,GAAM4N,QAAQhJ,GAAQoJ,WAE/CH,KAMfI,OAAQ,CAACV,EAAIP,KACTpI,EAAQiJ,IACJ,MAAMZ,EAAQY,EAAM7N,MAAMuN,IAAO,GAC3BW,EAjCH,EAAClB,EAAIC,KACpB,MAAM3D,EAAQyD,EAAUC,EAAIC,GAI5B,OAHe,IAAX3D,GACA2D,EAAMzD,OAAOF,EAAO,GAEjB2D,GA4BuBkB,CAAWnB,EAAIC,GAEjC,OADAY,EAAM7N,MAAMuN,GAAMW,EACXL,KAMfO,QAAS,CAACb,EAAIP,EAAIqB,KACdzJ,EAAQiJ,IACJ,MAAMZ,EAAQY,EAAM7N,MAAMuN,IAAO,GACjC,GAAIN,EAAO,CACP,MAAM3D,EAAQyD,EAAUC,EAAIC,IACb,IAAX3D,IACA2D,EAAM3D,GAAS+E,EACfR,EAAM7N,MAAMuN,GAAM,IAAIN,IAG9B,OAAOY,KAMfS,UAAYf,IACR3I,EAAQiJ,IACJA,EAAM7N,MAAMuN,GAAM,GACXM,KAMf7N,MAAO,CAACuN,EAAIgB,KACR3J,EAAQiJ,IACJA,EAAM7N,MAAMuN,GAAM,IAAIgB,GACfV,KAGfG,QAAS,KACLpJ,EAAQiJ,GAAWxO,OAAOP,OAAO,GAAI+O,OAG7CW,UAAYT,IACR,MAAMvO,EAAM,CACRiP,SAAU,IACQV,IACD/N,MAEjBmN,KAAM,CAACI,EAAID,KACP,MACML,EADQc,IACM/N,MAAMuN,IAAO,GAC3BP,EAAKK,EAASC,EAAiBC,GAC/BL,EAAOD,EAAME,KAAKuB,GAASA,EAAM1B,KAAOA,GAC9C,OAAOE,EAAO,CAAEyB,KAAMzB,GAAS,CAAE0B,aAAS9H,IAE9C+H,OAAQ,CAACtB,EAAID,KACT,MACML,EADQc,IACO/N,MAAMuN,IAAO,GAC5BC,OAA4B1G,IAApBwG,EAAgCA,EAAgBE,WAAQ1G,EAChEkG,OAAyBlG,IAApBwG,EAAgCA,EAAgBN,QAAKlG,EAC1DgI,OAAyBhI,IAAV0G,EACfP,EAAM1F,OAAOmH,GAASA,EAAMpB,gBAAgBE,QAAUA,GACtDP,EAIN,YAHyBnG,IAAPkG,EACZ8B,EAAavH,OAAO2F,GAAQA,EAAKI,gBAAgBN,KAAOA,GACxD8B,GAGVC,SAAU,CAACxB,EAAID,IAAoB9N,EAAIqP,OAAOtB,EAAID,GAAiB3I,QAEvE,OAAOnF,IAGToF,GAASiF,IACTkE,GAASlE,EAAOQ,KAAK,CAACwD,EAAOmB,IAAUA,EAAMnB,GAAQxO,OAAOP,OAAO,GAAIkB,GAAM2N,cAAe/I,IAC5FgJ,GAAUvO,OAAOP,OAAO,GAAIkB,GAAM4N,QAAQhJ,KAC1C4J,GAAYnP,OAAOP,OAAO,GAAIkB,GAAMwO,UAAUT,KAM9CJ,GAAe,CACjBrN,SAAU,OACV2O,UAAU,EACVC,QAAS,OACTC,OAAQ,OACRC,aAAStI,EACToH,eAAWpH,EACXuI,eAAWvI,EACXwI,UAAW,OACXC,aAASzI,GAmBP0I,GAAqB3B,IACvB4B,OAAOC,aAAa7B,EAAM0B,SACnB,CACHA,QAAS5B,GAAa4B,UAIxBI,GAAoB9B,GAAWxO,OAAOP,OAAOO,OAAOP,OAAO,GAAI0Q,GAAkB3B,IAAS,CAAEoB,UAAU,EAAMf,UAAW0B,GAAe/B,KAatI+B,GAAkB/B,GAA8B,IAApBA,EAAMK,gBAAuCpH,IAApB+G,EAAMK,UAC3DL,EAAMK,UACNL,EAAMK,YAAa,IAAI2B,MAAOC,WAAajC,EAAMwB,WAAa,IAC9DU,GAAa,KACf,MAAMjC,EAAQ,CACVH,aAAAA,GACAC,QAAUhJ,KAMNoL,MAAO,CAAC1P,EAAU2P,KACdrL,EAAQiJ,GAAWxO,OAAOP,OAAOO,OAAOP,OAAOO,OAAOP,OAAOO,OAAOP,OAAO,GAAI+O,GAAQ2B,GAAkB3B,IAlDhG,EAACA,EAAOvN,EAAU2P,EAAUC,KACjD,MAAMZ,EAAY,KACdhP,IACAuN,EAAMsB,SACNe,KAEJ,OAAO7Q,OAAOP,OAAO,CAAEwQ,UAAAA,EAAWF,QAAS,IAAIlL,QAAQC,IAC/C0J,EAAMsB,OAAS,IAAMhL,IACrB0J,EAAMqB,QAAU,IAAM/K,OACnB0J,EAAMoB,SACX,GACA,CACEI,WAAW,IAAIQ,MAAOC,UACtBP,QAASE,OAAOU,WAAWb,EAAWW,GACtC/B,UAAW+B,KAoC2GG,CAAiBvC,EAAOvN,EAAU2P,EAAU,IAAMnC,EAAMF,QAAQhJ,GAAQyL,SAAWxC,EAAMoB,UAAYU,GAAiB9B,MAK5OyC,KAAM,KACF1L,EAAQiJ,GAAWxO,OAAOP,OAAOO,OAAOP,OAAOO,OAAOP,OAAO,GAAI+O,GAjCzD,CAACA,GAAWxO,OAAOP,OAAO,GAAI0Q,GAAkB3B,IAiCiB0C,CAAgB1C,IAASF,MAKtG6C,MAAO,KACH5L,EAAQiJ,GAAWxO,OAAOP,OAAOO,OAAOP,OAAO,GAAI+O,IAAUA,EAAMoB,UAAYU,GAAiB9B,MAMpG4C,OAASC,IACL9L,EAAQiJ,GAAWxO,OAAOP,OAAOO,OAAOP,OAAO,GAAI+O,GAASA,EAAMoB,UA5CxD,EAACpB,EAAO6C,KAC9BjB,OAAOC,aAAa7B,EAAM0B,SAC1B,MAAMrB,EAAYwC,EACZC,KAAKC,IAAI/C,EAAMK,WAAa,EAAGwC,GAC/B7C,EAAMK,UACZ,MAAO,CACHmB,WAAW,IAAIQ,MAAOC,UACtBb,UAAU,EACVf,UAAAA,EACAqB,QAASE,OAAOU,WAAWtC,EAAMyB,UAAWpB,KAmC0C2C,CAAkBhD,EAAO6C,MAK3GI,MAAO,KACHlM,EAAQiJ,IACJA,EAAMqB,UACC7P,OAAOP,OAAOO,OAAOP,OAAO,GAAI+O,GAAQ2B,GAAkB3B,OAMzEG,QAAS,KACLpJ,EAAQiJ,GAAWxO,OAAOP,OAAO,GAAI+O,KAMzCwC,KAAM,KACFzL,EAAO,IAAM+I,OAGrBa,UAAYT,KAIRkB,SAAU,IACQlB,IACDkB,SAKjB8B,aAAc,KACV,MAAMlD,EAAQE,IACd,OAAOF,EAAMoB,SAAWpB,EAAMK,UAAY0B,GAAe/B,IAK7DmD,iBAAkB,IACAjD,IACDqB,WAInBxK,EAASiF,IACTkE,EAASlE,EAAOQ,KAAK,CAACwD,EAAOmB,IAAUA,EAAMnB,GAAQxO,OAAOP,OAAO,GAAIgP,EAAMH,cAAe/I,GAMlG,MAAO,CACHmJ,OAAAA,EACAH,QAPYvO,OAAOP,OAAO,GAAIgP,EAAMF,QAAQhJ,IAQ5C4J,UAPcnP,OAAOP,OAAO,GAAIgP,EAAMU,UAAUT,MAWlDkD,GAAO,IAAIzR,IAASwM,GAAMxM,EAAI+H,OAAOkG,SAASyD,OAAO,CAACC,EAAGC,IAAMA,EAAED,GAAInF,GACrEqF,GAAgB,EAAGC,WAAAA,EAAYC,KAAAA,MACjC,MAAMC,EAAc/P,SAAS+P,YAC7B,GAAIA,EAAa,CACb,MAAMC,EAAQD,EAAYE,iBAAiBJ,GAC3C,GAAIG,EACA,OAAOA,EAAME,iBAAiBJ,KAKpCK,GACI,OADJA,GAEI,OAGJC,GAAwB,CAACP,EAAYQ,EAAMC,KAC7C,MAAMC,EAAkBD,EAAOD,GAC3BE,GACA3S,OAAOuK,KAAKoI,GAAiBvS,QAAS6G,IAElC,MAAM9D,EAAQwP,EAAgB1L,GAE9BgL,EAAWG,MAAMnL,GAAO9D,KAS9ByP,GAAkB,CAACC,EAAWJ,IAASI,EAAUC,MAAM,KAAK7K,IAAKT,GAAM,GAAGA,KAAKiL,KAC/EM,GAAsB,CAACd,EAAY3Q,EAAOmR,EAAMO,KAClD,GAAI1R,EAAMoR,OAAQ,CACd,MAAMA,EAJc,EAACT,EAAYS,KAA8B,mBAAXA,EAAwBA,EAAOT,GAAcS,IAAW,GAI7FO,CAAoBhB,EAAY3Q,EAAMoR,QACrDF,GAAsBP,EAAY,UAAWS,GACzCM,GAV2B,CAACf,IAEpCA,EAAWG,MAAMc,mBAAqB,OAS9BC,CAA+BlB,GAEnCO,GAAsBP,EAAYQ,EAAMC,GAE5C,GAAIpR,EAAMuR,UAAW,CACjB,MAAMO,EAAuB,CACzBC,UAAWT,GAAgBtR,EAAMuR,UAAW,cAC5CS,QAASV,GAAgBtR,EAAMuR,UAAW,YAC1CU,UAAWX,GAAgBtR,EAAMuR,UAAW,cAC5CW,QAASZ,GAAgBtR,EAAMuR,UAAW,aAhCnB,EAACZ,EAAYmB,KAAyBnB,EAAWwB,UAAU7E,UAAUwE,EAAqBC,aAAcD,EAAqBE,WAAYF,EAAqBG,aAAcH,EAAqBI,UAkC5NE,CAA2BzB,EAAYmB,GACnCA,GACAnB,EAAWwB,UAAU/N,OAAO0N,EAAqBX,IAKzDR,EAAW0B,WAETC,GAAqBC,IACvB,MAAMC,EAASC,WAAWF,KAA+C,IAA/BA,EAAY3J,QAAQ,MAAe,IAAO,GACpF,OAAO8J,OAAOC,MAAMH,GAAU,EAAIA,GAiBhCI,GAAQ,CACVb,UAAW,CACPc,SAAU,WAEdb,QAAS,CACLa,cAAU1M,GAEd8L,UAAW,CACPY,SAAU,WAEdX,QAAS,CACLW,cAAU1M,IAGZ2M,GAAa,CAAC9S,EAAO+S,KACvB,MAAMpC,WAAEA,GAAe3Q,EACvB,IAAK2Q,EACD,OAAOpN,QAAQC,QAAQ,iBAE3BuL,aAAa/O,EAAMgT,yBACnB,IAAIC,EAAcF,IAAS9B,GAAY,YAAc,YACrD,OAAO,IAAI1N,QAAQC,IACfiO,GAAoBd,EAAY3Q,EAAOiT,EAA6B,cAAhBA,GACpDzD,WAAW,KACP,MAAMqD,SAAEA,GAAaD,GAAMK,GAC3B,GAAIJ,EAAU,CACVI,EAAcJ,EACdpB,GAAoBd,EAAY3Q,EAAOiT,GAGvC,MAAM3D,EA7CF,CAACqB,IACjB,MAAMuC,EAAqBxC,GAAc,CACrCC,WAAAA,EACAC,KAAM,wBAEJuC,OAAuChN,IAAvB+M,EAChBZ,GAAkBY,GAClB,EACAE,EAAkB1C,GAAc,CAClCC,WAAAA,EACAC,KAAM,qBAGV,OAAOuC,QADgChN,IAApBiN,EAAgCd,GAAkBc,GAAmB,IAiC3DC,CAAY1C,GAE7B3Q,EAAMgT,wBAA0BlE,OAAOU,WAAWhM,EAAS8L,KAEhE,MAILgE,GAAa,CACfC,IAAK,GAWT,IAAIC,IACJ,SAAWA,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAyB,OAAI,GAAK,SAHvD,CAIGA,KAAqBA,GAAmB,KAC3C,MAAMC,GAAgB7G,GAAQ8G,GAA4B/G,GAAoBkB,GAAUrB,KAAKI,EAE7F+G,GAAyBD,EAAwB/G,IAC3CiH,GAAiBjH,GAAqBL,QAAoCnG,IAA1BwG,EAAgBE,MAChEP,EAAM1F,OAAO2F,GAAQA,EAAKI,gBAAgBE,QAAUF,EAAgBE,OACpEP,EAQAuH,GAAsBC,IACxB,IAAIC,EAAc,EAClB,OAAOD,EACFnN,IAAI4F,KACLA,KAAAA,EACAyH,WAAYzH,EAAK0H,gBAAgBC,OAASH,IAAgB,KAEzDnN,OAAO,EAAGoN,WAAAA,KAAgC,IAAfA,GAC3BrN,IAAI,EAAG4F,KAAAA,KAAWA,IAErB4H,GAAmB,CAACvH,EAAIN,EAAOK,KACjC,MAAMmH,EAAWxH,EAAMM,IAAO,GAC9B,OAAuB,IAAnBkH,EAAQ9P,OACD,GAEJsM,GAAKsD,GAAcjH,GAAkBkH,GAArCvD,CAAyDwD,IAO9DH,GAA2B,CAACD,EAAwB/G,EAAkB,OACxEN,GAAIM,EAAgBN,IAAMqH,EAAuBrH,GACjDQ,MAAOF,EAAgBE,OAAS6G,EAAuB7G,QAErDuH,GAAgB,CAACV,EAAwBlS,EAAU,MACrD,MAAMmL,EAAkB,CACpBN,GAAI7K,EAAQ6S,SAAW7S,EAAQ6S,SAAShI,QAAKlG,EAC7C0G,MAAOrL,EAAQ6S,SAAW7S,EAAQ6S,SAASxH,WAAQ1G,GAKvD,MAAO,CACHwG,gBAJ0BgH,GAAyBD,GAA0B,GAAI/G,GAKjFsH,gBAJoBvV,OAAOP,OAAOO,OAAOP,OAAOO,OAAOP,OAAO,GAAIuV,GAAyBlS,EAAQ6S,UAAW,CAAErB,wBAAyB,IAKzIsB,mBApBsB9S,CAAAA,IAC1B,MAAM+S,EAAO7V,OAAOP,OAAO,GAAIqD,GAE/B,cADO+S,EAAKF,SACLE,GAaoBC,CAAsBhT,KAmE/CiT,GA5DkB7H,GAAQ8G,GAA4BlS,IACxD,MAAMmL,gBAAEA,EAAesH,gBAAEA,EAAeK,mBAAEA,GAAwBF,GAAcV,EAAwBlS,GAExG,OAAO,IAAI+B,QAAQC,IACf,MAAMlE,EAAY,CACdoV,SAAWnI,IACH0H,EAAgBS,UAChBT,EAAgBS,SAASnI,GAEtB/I,EAAQ+I,IAEnBoI,SAAWpI,IACH0H,EAAgBU,UAChBV,EAAgBU,SAASpI,GAEtB/I,EAAQ+I,IAEnBqI,QAAUrI,IACF0H,EAAgBW,SAChBX,EAAgBW,QAAQrI,GAErB/I,EAAQ+I,IAEnBsI,QAAUtI,IACF0H,EAAgBY,SAChBZ,EAAgBY,QAAQtI,GAErB/I,EAAQ+I,KAGjBA,EAAO,CACTK,GAAAA,EACAD,gBAAAA,EACAsH,gBAAAA,EACA3U,UAAAA,EACAgV,mBAAAA,EACAjI,GAAIK,EAASC,EAAiBC,GAC9BO,MAAO8G,EAAgBa,QAAU1F,UAAejJ,EAChDR,KAzGJ2N,GAAWC,MAAQb,OAAOqC,UAC1BzB,GAAWC,IAAM,EAGjBD,GAAWC,KAAO,EAEfD,GAAWC,KAmGIyB,WACdC,gBAAiBzB,GAAiB0B,SAGhCC,EADoBtH,GAAUrB,KAAKI,EAAID,GACNqB,KACvC,GAAImH,GAAgBlB,EAAgBmB,OAGhC,OADAC,GAAKzI,EAALyI,CAAS3B,EAAT2B,CAAiC7T,GAC1BgC,EAAQ2R,GAEnB,GAAIA,IAAiBlB,EAAgBC,OAAQ,CACzC,MAAMoB,EAAgB5W,OAAOP,OAAOO,OAAOP,OAAO,GAAIoO,GAAO,CAAE5G,IAAKwP,EAAaxP,IAAKsP,gBAAiBE,EAAaF,gBAAiBhB,gBAAiBkB,EAAalB,kBACnKhH,GAAQQ,QAAQb,EAAIuI,EAAa9I,GAAIiJ,QAGrCrI,GAAQ7I,IAAIwI,EAAIL,GAIpB/I,EAAQ+I,MAIV8I,GAAQzI,GAAQ8G,GAA4BlS,IAC9C,MAAMmL,gBAAEA,EAAesH,gBAAEA,EAAeK,mBAAEA,GAAwBF,GAAcV,EAAwBlS,GAElG2T,EADoBtH,GAAUrB,KAAKI,EAAID,GACNqB,KACvC,GAAImH,EAAc,CACd,MAAM5I,EAAO7N,OAAOP,OAAOO,OAAOP,OAAO,GAAIgX,GAAe,CAAElB,gBAAiBvV,OAAOP,OAAOO,OAAOP,OAAO,GAAIgX,EAAalB,iBAAkBA,GAAkBK,mBAAoB5V,OAAOP,OAAOO,OAAOP,OAAO,GAAIgX,EAAab,oBAAqB,CAAEA,mBAAAA,MAExP,OADArH,GAAQQ,QAAQb,EAAIuI,EAAa9I,GAAIE,GACjCA,EAAK0I,kBAAoBzB,GAAiB+B,OAEnCC,GAASjJ,GAEbhJ,QAAQC,QAAQ+I,GAE3B,OAAOhJ,QAAQC,QAAQ,CACnBoJ,GAAAA,EACAP,GAAIM,EAAgBN,MAGtBwD,GAASjD,GAEf8G,GAA4B/G,IAExB,MAAM8I,EAAaC,GAAc9I,EAAID,GAAiB/F,OAAO2F,KAAUA,EAAKY,OAM5E,OALAsI,EAAW3W,QAASyN,IACZA,EAAKY,OACLZ,EAAKY,MAAMF,QAAQ4C,UAGpBtM,QAAQoS,IAAIF,IAEjB3F,GAAUlD,GAEhB8G,GAA4BkC,IACxB,MAAMpU,EAAUoU,GAAkB,GAC5BjJ,EAAkB,CACpBN,GAAI7K,EAAQ6K,GACZQ,MAAOrL,EAAQqL,OAGb4I,EAAaC,GAAc9I,EAAID,GAAiB/F,OAAO2F,KAAUA,EAAKY,OAM5E,OALAsI,EAAW3W,QAASyN,IACZA,EAAKY,OACLZ,EAAKY,MAAMF,QAAQ6C,OAAOtO,EAAQuO,mBAGnCxM,QAAQoS,IAAIF,IAEjBI,GAAoB,CAACjJ,EAAI8G,EAAwB/G,KACnD,IAAImJ,EAAIC,EACR,MAAMC,EAAYvC,GAAa7G,EAAb6G,CAAiBC,EAAjBD,CAAyC9G,GAC3D,OAA4I,QAApIoJ,EAAqF,QAA/ED,EAAKE,MAAAA,OAA6C,EAASA,EAAUhI,YAAyB,IAAP8H,OAAgB,EAASA,EAAG3I,aAA0B,IAAP4I,OAAgB,EAASA,EAAGlI,WAE9KS,GAAY1B,GAAQ8G,GAA4B/G,IAClD,IAAImJ,EACJ,OAAkF,QAAzEA,EAAKD,GAAkBjJ,EAAI8G,EAAwB/G,UAAqC,IAAPmJ,OAAgB,EAASA,EAAGxH,cAClH,GAEF8B,GAAgBxD,GAAQ8G,GAA4B/G,IACtD,IAAImJ,EACJ,OAAkF,QAAzEA,EAAKD,GAAkBjJ,EAAI8G,EAAwB/G,UAAqC,IAAPmJ,OAAgB,EAASA,EAAG1F,sBAAmBjK,GAEvI8P,GAAUrJ,GAEhB8G,GAA4B/G,KAE1B+I,GAAc9I,EAAID,GAAiB3I,OAC/B0R,GAAgB,CAAC9I,EAAID,KACvB,MAAMuJ,EAAWrI,GAAUK,OAAOtB,GAClC,IAAI6I,EAOJ,OALIA,EADA9I,EACa2D,GAAKsD,GAAcjH,GAlLrB,CAACA,GAAqBL,QAAiCnG,IAAvBwG,EAAgBN,GAC7DC,EAAM1F,OAAO2F,GAAQA,EAAKI,gBAAgBN,KAAOM,EAAgBN,IACjEC,EAgLoD6J,CAAWxJ,GAAhD2D,CAAkE4F,GAGlEA,EAEVT,GAELW,GAAYxJ,GAElB8G,GAA4B/G,IACxB,MAAM8I,EAAaC,GAAc9I,EAAID,GAC/BL,EAAQ,GAed,OAdAmJ,EAAW3W,QAASyN,IACZA,EAAKY,OACLZ,EAAKY,MAAMF,QAAQkD,QAEvB7D,EAAMxM,KAAKyM,KAEXI,EACAL,EAAMxN,QAASyN,IACXU,GAAQK,OAAOV,EAAIL,EAAKF,MAI5BY,GAAQU,UAAUf,GAEfrJ,QAAQC,QAAQ8I,IAErB+J,GAAiC,CAAC9J,EAAM0H,IAAqBvV,OAAOP,OAAOO,OAAOP,OAAO,GAAIoO,GAAO,CAAE0H,gBAAiBvV,OAAOP,OAAOO,OAAOP,OAAO,GAAIoO,EAAK0H,iBAAkBA,KAM9KqC,GAAW1J,GAEjB8G,GAA4BO,IACxB,MAAMzS,EAAUyS,GAAmB,GAC7BtH,EAAkB,CACpBN,GAAI7K,EAAQ6K,GACZQ,MAAOrL,EAAQqL,OAEb4I,EAAaC,GAAc9I,EAAID,GAC/B4J,EAAed,EAAW7O,OAAQ2F,IAAU/K,EAAQ0S,SAAW3H,EAAK0H,gBAAgBC,QACpFsC,EAAcf,EAAW7O,OAAQ2F,GAAS/K,EAAQ0S,QAAU3H,EAAK0H,gBAAgBC,QACjF5H,EAAQ,GAId,GAHAiK,EAAazX,QAASyN,GAEtBD,EAAMxM,KAAK0V,GAASa,GAA+B9J,EAAM/K,MACrDgV,EAAYxS,OAAS,EAAG,CACxB,MAAOyS,GAAWD,EAElBvJ,GAAQ5N,MAAMuN,EAAI,CAAC6J,IAGnBnK,EAAMxM,KAAK0V,GAASa,GAA+BI,EAASjV,KAEhE,OAAO+B,QAAQoS,IAAIrJ,IAEjB8B,GAAYxB,GAAQD,GAAoBkB,GAAUO,SAASxB,EAAID,GAC/D+J,GAAiB,CAACnK,EAAMwG,IAASD,GAAWvG,EAAK0H,gBAAiBlB,GAWlE4D,GAAmBC,MAAOrK,EAAMY,EAAO2H,KAEzC3H,EAAMF,QAAQoC,MAAM,IAAMmG,GAASjJ,GAAOuI,GAZdlI,GAAQ8G,GAA4B/G,IAChE,MAAMqJ,EAAYvC,GAAa7G,EAAb6G,CAAiBC,EAAjBD,CAAyC9G,GAC3D,GAAIqJ,EAAUhI,KACV,OAAIgI,EAAUhI,MAAQgI,EAAUhI,KAAKb,MAC1B6I,EAAUhI,KAAKb,MAAMU,UAAUwC,wBAE1C,IASFwG,GAAWD,MAAOrK,IAChBA,EAAKjN,UAAUoV,UACfnI,EAAKjN,UAAUoV,SAASnI,GAExBA,EAAK0I,kBAAoBzB,GAAiBsD,aAE1CvK,EAAK0I,gBAAkBzB,GAAiBsD,iBAClCJ,GAAenK,EAAM0E,KAE3B1E,EAAKjN,UAAUsV,SACfrI,EAAKjN,UAAUsV,QAAQrI,GAEvBA,EAAK0H,gBAAgBa,SAAWvI,EAAKY,aAC/BwJ,GAAiBpK,EAAMA,EAAKY,MAAOZ,EAAK0H,gBAAgBa,SAE3DvR,QAAQC,QAAQ+I,IAMrBiJ,GAAWoB,MAAOrK,IAEpBA,EAAK0I,gBAAkBzB,GAAiB+B,OAEpChJ,EAAKY,OACLZ,EAAKY,MAAMF,QAAQ0C,OAEnBpD,EAAKjN,UAAUqV,UACfpI,EAAKjN,UAAUqV,SAASpI,SAEtBmK,GAAenK,EAAM0E,IACvB1E,EAAKjN,UAAUuV,SACftI,EAAKjN,UAAUuV,QAAQtI,GAE3B,MAAMgI,EAAO7V,OAAOP,OAAO,GAAIoO,GAE/B,OADAU,GAAQK,OAAOf,EAAKK,GAAIL,EAAKF,IACtB9I,QAAQC,QAAQ+Q,IAOrBwC,GAAa,EAAGnK,GAAAA,EAAIsH,OAAAA,EAAQY,QAAAA,MAC9B,MAAMkC,EAAY,WAAWpK,EACvBqK,EAAe,WAAWrK,EAC1B8G,EAAyBhV,OAAOP,OAAOO,OAAOP,OAAO,CAAEkO,GAAI2K,EAAWnK,MAAOoK,GAAiB/C,GAAU,CAAEA,OAAAA,SAAyB/N,IAAZ2O,GAAyB,CAAEA,QAAAA,IACxJ,MAAO,CAEHlI,GAAAA,EACAoK,UAAAA,EACAC,aAAAA,EAEAvD,uBAAAA,EAEAe,KAAMA,GAAK7H,EAAL6H,CAASf,GACf2B,KAAMA,GAAKzI,EAALyI,CAAS3B,GACf4C,QAASA,GAAQ1J,EAAR0J,CAAY5C,GACrB0C,SAAUA,GAASxJ,EAATwJ,CAAa1C,GAEvB7D,MAAOA,GAAMjD,EAANiD,CAAU6D,GACjB5D,OAAQA,GAAOlD,EAAPkD,CAAW4D,GAEnBuC,OAAQA,GAAOrJ,EAAPqJ,CAAWvC,GACnBtF,SAAUA,GAASxB,GAEnB0B,SAAUA,GAAS1B,EAAT0B,CAAaoF,GACvBtD,aAAcA,GAAaxD,EAAbwD,CAAiBsD,KAIjCwD,GAASH,GAAW,CAAEnK,GAAI,WAE1BuK,GAAeJ,GAAW,CAC5BnK,GAAI,eACJsH,QAAQ,EACRY,QAAS,MAOPvH,GAAavN,IACf,IAAIoX,EACAC,EACAC,GAAa,EACjB,MAAMC,EAAW,CACblL,GAAIrM,EAAMqM,GACVQ,MAAO7M,EAAM6M,OAEX5I,EAAS,KACX,MAAMuT,EAAiBxX,EAAMmH,SAASiJ,aAAamH,GAC/CH,IAAiBI,IACjBJ,OACuBjR,IAAnBqR,EACMA,EACAxX,EAAMyX,eACFzH,KAAK0H,MAAM1H,KAAKC,IAAIuH,EAAgB,GAAK,KACzCxH,KAAKC,IAAIuH,EAAgB,IAE3CxX,EAAML,SAASyX,GACVpX,EAAMmH,SAAS8O,OAAOsB,GAIjBD,IACND,EAAQvI,OAAO6I,sBAAsB1T,KAJrC6K,OAAO8I,qBAAqBP,GAC5BC,GAAa,IAMrBD,EAAQvI,OAAO6I,sBAAsB1T,IAGhBvF,OAAOmZ,OAAO,CACnCC,UAAW,OCpwBf,MAAMC,GAAmB,GAgBzB,SAASC,GAASnW,EAAOwN,EAAQnR,GAC7B,IAAIyR,EACJ,MAAMsI,EAAc,GACpB,SAASC,EAAIC,GACT,GAAIlZ,EAAe4C,EAAOsW,KACtBtW,EAAQsW,EACJxI,GAAM,CACN,MAAMyI,GAAaL,GAAiB/T,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAIkU,EAAYjU,OAAQD,GAAK,EAAG,CAC5C,MAAM8G,EAAIoN,EAAYlU,GACtB8G,EAAE,KACFkN,GAAiBjY,KAAK+K,EAAGhJ,GAE7B,GAAIuW,EAAW,CACX,IAAK,IAAIrU,EAAI,EAAGA,EAAIgU,GAAiB/T,OAAQD,GAAK,EAC9CgU,GAAiBhU,GAAG,GAAGgU,GAAiBhU,EAAI,IAEhDgU,GAAiB/T,OAAS,IA0B1C,MAAO,CAAEkU,IAAAA,EAAKjU,OArBd,SAAgBzF,GACZ0Z,EAAI1Z,EAAGqD,KAoBWzC,UAlBtB,SAAmBb,EAAK8Z,EAAana,GACjC,MAAMoa,EAAa,CAAC/Z,EAAK8Z,GAMzB,OALAJ,EAAYnY,KAAKwY,GACU,IAAvBL,EAAYjU,SACZ2L,EAAON,EAAM6I,IAAQha,GAEzBK,EAAIsD,GACG,KACH,MAAM8G,EAAQsP,EAAYrP,QAAQ0P,IACnB,IAAX3P,GACAsP,EAAYpP,OAAOF,EAAO,GAEH,IAAvBsP,EAAYjU,SACZ2L,IACAA,EAAO,SAMvB,SAAS4I,GAAQC,EAAQha,EAAIia,GACzB,MAAMC,GAAUzQ,MAAM0Q,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAOra,EAAGwF,OAAS,EACzB,MA5DO,CACH5E,UAAW4Y,GA2DCS,EAAgBP,IAC5B,IAAIY,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAU/a,EACd,MAAMgb,EAAO,KACT,GAAIF,EACA,OAEJC,IACA,MAAMhZ,EAASzB,EAAGka,EAASK,EAAO,GAAKA,EAAQb,GAC3CW,EACAX,EAAIjY,GAGJgZ,EAAUla,EAAYkB,GAAUA,EAAS/B,GAG3Cib,EAAgBP,EAAajS,IAAI,CAACtH,EAAO0E,IAAM3E,EAAUC,EAAQwC,IACnEkX,EAAOhV,GAAKlC,EACZmX,KAAa,GAAKjV,GACd+U,GACAI,KAEL,KACCF,GAAY,GAAKjV,KAIrB,OAFA+U,GAAS,EACTI,IACO,WACHta,EAAQua,GACRF,OA1F8B7Z,WCN1C,MAAMga,GAAW,IACZpB,GAAS5K,OACTS,IAELT,GAAOzG,IAAIuG,GACTkM,GAASlB,IAAI,IACRhL,KACAW,MAGP,MAAMO,GAAWxB,GAAMD,GACrB4L,GAAQa,GAAU,IAAMvL,GAAUO,SAASxB,EAAID,IAC3C2B,GAAW1B,GAAM8G,GAA0B/G,GAC/C4L,GAAQa,GAAU,IAChBC,GAAWzM,EAAXyM,CAAe3F,EAAf2F,CAAuC1M,IAErCsJ,GAASrJ,GAAM8G,GAA0B/G,GAC7C4L,GAAQa,GAAU,IAChBE,GAAS1M,EAAT0M,CAAa5F,EAAb4F,CAAqC3M,IAGnCuK,GAAS,IACVqC,GACHnL,SAAUzB,GAAmByB,GAASmL,GAAS3M,GAAlBwB,CAAsBzB,GACnD2B,SAAU3B,GACR2B,GAASiL,GAAS3M,GAAlB0B,CAAsBiL,GAAS7F,uBAA/BpF,CAAuD3B,GACzDsJ,OAAQtJ,GACNsJ,GAAOsD,GAAS3M,GAAhBqJ,CAAoBsD,GAAS7F,uBAA7BuC,CAAqDtJ,IAGnDwK,GAAe,IAChBqC,GACHpL,SAAUzB,GAAmByB,GAASoL,GAAe5M,GAAxBwB,CAA4BzB,GACzD2B,SAAU3B,GACR2B,GAASkL,GAAe5M,GAAxB0B,CAA4BkL,GAAe9F,uBAA3CpF,CACE3B,GAEJsJ,OAAQtJ,GACNsJ,GAAOuD,GAAe5M,GAAtBqJ,CAA0BuD,GAAe9F,uBAAzCuC,CACEtJ,IAIA8M,GAAiB7M,GAAM,CAACtL,EAAO9C,KACnC,MAAMwX,EAAYnI,GAAUrB,KAAKI,EAAItL,EAAMqB,OAAOgK,iBF0oB9B,IAACgE,EEzoBjBqF,EAAUhI,OFyoBO2C,EExoBLrP,EAAMqB,OAAOgO,WAAYqF,EAAUhI,KF0oB5CiG,gBAAgBtD,WAAaA,GExoBpC,MAAM+I,EAAyB7L,GAAUrB,KACvCI,EACAtL,EAAMqB,OAAOgK,iBAEX+M,EAAuB1L,MACzBxP,EAAGkb,EAAuB1L,OAY9B,SAAS2L,GAAkBjV,GAC1B,IAAIkV,EACAC,EACApD,EAEJ,MAAMqD,EAAgC,CACrC,CAAErF,KAAe/P,EAAI,IACrB,CAAE2Q,KAAe3Q,EAAI,IACEA,EAAI,IAG5B,IAAIqV,EAAmCrV,EAAI,GAAGhF,UAE9C,SAASsa,EAAatV,GACrB,IAAIuV,EAAwB,GAE5B,IAAK,IAAIlW,EAAI,EAAGA,EAAI+V,EAA8B9V,OAAQD,GAAK,EAC9DkW,EAAwB9b,EAAO8b,EAAuBH,EAA8B/V,IAGrF,MAAO,CAAE/D,MAAOia,GAOjB,OAJIF,IACHF,EAAkB,IAAIE,EAAaC,MAG7B,CACNxR,IACCoR,EAAMhZ,EAAQ,OACViZ,GAAiBvT,EAAiBuT,EAAgBja,GAAG0E,UACzD3C,EAAKiY,EAAK,QAAuBlV,EAAI,KAEtC8D,EAAErI,EAAQI,GACTD,EAAOH,EAAQyZ,EAAKrZ,GAEhBsZ,GACHtT,EAAgBsT,EAAiBD,EAAK,MAGvBlV,EAAI,GAAGkV,GACvBnD,GAAU,GAEXjO,EAAE9D,GAAMF,IACP,MAAM0V,EAAsE,GAA3C1V,EAC/BoB,EAAkBkU,EAA+B,CAChC,GAAjBtV,GAAuB,CAAEiQ,KAAe/P,EAAI,IAC3B,GAAjBF,GAAuB,CAAE6Q,KAAe3Q,EAAI,IACb,EAA/BF,GAAoC4B,EAAyC1B,EAAI,MAEjF,GAEF,GAAIqV,KAAkBA,EAAmCrV,EAAI,GAAGhF,WAAY,CAC3E,GAAIma,EAAiB,CACpB/U,IACA,MAAMqV,EAAgBN,EAEtBvU,EAAe6U,EAAcva,GAAG0E,SAAU,EAAG,EAAG,KAC/CuC,EAAkBsT,EAAe,KAGlClV,IAGG8U,GACHF,EAAkB,IAAIE,EAAaC,KACnC1T,EAAiBuT,EAAgBja,GAAG0E,UACpCY,EAAc2U,EAAgBja,GAAG0E,SAAU,GAC3CiC,EAAgBsT,EAAiBD,EAAK,OAEtCC,EAAkB,UAETE,GACVF,EAAgBO,KAAKF,IAGvB1R,EAAEpD,GACGqR,IACAoD,GAAiB3U,EAAc2U,EAAgBja,GAAG0E,SAAUc,GAChEqR,GAAU,IAEXjO,EAAEpD,GACGyU,GAAiBvU,EAAeuU,EAAgBja,GAAG0E,SAAUc,GACjEqR,GAAU,GAEXjO,EAAE1B,GACGA,GAAWrG,EAAOmZ,GAClBC,GAAiBhT,EAAkBgT,GACvBnV,EAAI,GAAG,QAK1B,SAAS2V,GAAWC,EAAQxR,EAASyR,GACpC,MAAMC,EAAW/X,IAGjB,IAAIkO,GAEAhE,gBAAEA,GAAoB7D,GACtBwL,mBAAEA,GAAuBxL,GACzBmL,gBAAEA,GAAoBnL,EAC1B,MAAMyI,EAAY0C,EAAkBA,EAAgB1C,UAAY,GAC1DkJ,EAAqB5Z,GAAQ2Z,EAAS3Z,EAAM,CAAE8L,gBAAAA,EAAiBgE,WAAAA,IA2BrE,OAjBApO,EAAQ,KACPkY,EAAmB,WAUpBH,EAAOtR,MAAQF,IACV,oBAAqBA,GAASyR,EAAa,EAAG5N,EAAkB7D,EAAQ6D,iBACxE,uBAAwB7D,GAASyR,EAAa,EAAGjG,EAAqBxL,EAAQwL,oBAC9E,oBAAqBxL,GAASyR,EAAa,EAAGtG,EAAkBnL,EAAQmL,kBAGtE,CACNK,EACAL,EACAtD,EACAY,EA7BY,KACZkJ,EAAmB,SAGP,KACZA,EAAmB,SA2BnB9N,EApBD,SAAqB+N,GACpBvX,EAAkBuX,EAAU,UAAY,QAAQ,KAC/C/J,EAAa+J,EACbH,EAAa,EAAG5J,OAsBnB,MAAMgK,WAAiBpS,EACtBC,YAAYhH,GACXoZ,QAEA1T,EAAKuB,KAAMjH,EAAS6Y,GAAYV,GAAmB1a,EAAgB,CAClE0N,gBAAiB,EACjB2H,mBAAoB,EACpBL,gBAAiB,KAOpB,SAAS4G,GAAiBnW,EAAKoW,EAAM/W,GACpC,MAAMgX,EAAYrW,EAAI1B,QAMtB,OALA+X,EAAU,GAAKD,EAAK/W,GAAG4I,gBACvBoO,EAAU,GAAKD,EAAK/W,GAAGkQ,gBACvB8G,EAAU,GAAKD,EAAK/W,GAAGuQ,mBACvByG,EAAU,GAAKD,EAAK/W,GAAG4B,IACvBoV,EAAU,IAAMhX,EACTgX,EAIR,SAASC,GAAkBC,EAAOvW,GACjC,IAAIwW,EACA/T,EACAsP,EAcJ,OAZAtP,EAAW,IAAIwT,GAAS,CACtB3a,MAAO,CACN2M,gBAAqCjI,EAAI,GACzCuP,gBAAqCvP,EAAI,GACzC4P,mBAA2C5P,EAAI,MAIlDyC,EAASgU,IAAI,QAAiCzW,EAAI,IAClDyC,EAASgU,IAAI,OAA6BzW,EAAI,IAC9CyC,EAASgU,IAAI,OAA6BzW,EAAI,IAEvC,CACNiB,IAAKsV,EACLC,MAAO,KACP1S,IACC0S,EAAQ9Z,IACRkF,EAAiBa,EAASvH,GAAG0E,UAC7BmE,KAAKyS,MAAQA,GAEd1S,EAAErI,EAAQI,GACTD,EAAOH,EAAQ+a,EAAO3a,GACtBgG,EAAgBY,EAAUhH,EAAQI,GAClCkW,GAAU,GAEXjO,EAAE4S,EAAS5W,GACVE,EAAM0W,EACN,MAAMC,EAAmB,GACsB,EAA3C7W,IAA8C6W,EAAiB1O,gBAAsCjI,EAAI,IAC9D,EAA3CF,IAA8C6W,EAAiBpH,gBAAsCvP,EAAI,IAC9D,EAA3CF,IAA8C6W,EAAiB/G,mBAA4C5P,EAAI,IACnHyC,EAASiT,KAAKiB,IAEf7S,EAAEpD,GACGqR,IACJvR,EAAciC,EAASvH,GAAG0E,SAAUc,GACpCqR,GAAU,IAEXjO,EAAEpD,GACDE,EAAe6B,EAASvH,GAAG0E,SAAUc,GACrCqR,GAAU,GAEXjO,EAAE1B,GACGA,GAAWrG,EAAOya,GACtBrU,EAAkBM,EAAUL,KAK/B,SAASwU,GAAkB5W,GAC1B,IAEI6W,EACA9E,EAHA+E,EAAc,GACdC,EAAgB,IAAI/T,IAGpBgU,EAAavH,GAAwBzP,EAAI,GAAkBA,EAAI,GAAGrF,MAA2BqF,EAAI,IACrG,MAAMiX,EAAUjX,GAAeA,EAAI,GAEnC,IAAK,IAAIX,EAAI,EAAGA,EAAI2X,EAAW1X,OAAQD,GAAK,EAAG,CAC9C,IAAIgX,EAAYF,GAAiBnW,EAAKgX,EAAY3X,GAC9C4B,EAAMgW,EAAQZ,GAClBU,EAAcvD,IAAIvS,EAAK6V,EAAYzX,GAAKiX,GAAkBrV,EAAKoV,IAGhE,MAAO,CACNvS,IACC,IAAK,IAAIzE,EAAI,EAAGA,EAAIyX,EAAYxX,OAAQD,GAAK,EAC5CyX,EAAYzX,GAAGiB,IAGhBuW,EAAgBna,KAEjBoH,EAAErI,EAAQI,GACT,IAAK,IAAIwD,EAAI,EAAGA,EAAIyX,EAAYxX,OAAQD,GAAK,EAC5CyX,EAAYzX,GAAG0C,EAAEtG,EAAQI,GAG1BD,EAAOH,EAAQob,EAAehb,GAC9BkW,GAAU,GAEXjO,EAAE9D,GAAMF,IACmH,GAAtHA,IACHkX,EAAavH,GAAwBzP,EAAI,GAAkBA,EAAI,GAAGrF,MAA2BqF,EAAI,IACjGI,IACA0W,EJ4yBJ,SAA2BI,EAAYpX,EAAOmX,EAASE,EAASnX,EAAKoW,EAAMpV,EAAQtF,EAAM0b,EAASd,EAAmBjR,EAAMgS,GACvH,IAAIxW,EAAIqW,EAAW5X,OACfkC,EAAI4U,EAAK9W,OACTD,EAAIwB,EACR,MAAMyW,EAAc,GACpB,KAAOjY,KACHiY,EAAYJ,EAAW7X,GAAG4B,KAAO5B,EACrC,MAAMkY,EAAa,GACbC,EAAa,IAAIxU,IACjByU,EAAS,IAAIzU,IAEnB,IADA3D,EAAImC,EACGnC,KAAK,CACR,MAAMgX,EAAYgB,EAAYrX,EAAKoW,EAAM/W,GACnC4B,EAAMgW,EAAQZ,GACpB,IAAI5V,EAAQO,EAAOiG,IAAIhG,GAClBR,EAII0W,GACL1W,EAAMV,EAAEsW,EAAWvW,IAJnBW,EAAQ6V,EAAkBrV,EAAKoV,GAC/B5V,EAAMH,KAKVkX,EAAWhE,IAAIvS,EAAKsW,EAAWlY,GAAKoB,GAChCQ,KAAOqW,GACPG,EAAOjE,IAAIvS,EAAKqK,KAAKoM,IAAIrY,EAAIiY,EAAYrW,KAEjD,MAAM0W,EAAY,IAAIxY,IAChByY,EAAW,IAAIzY,IACrB,SAASvD,EAAO6E,GACZD,EAAcC,EAAO,GACrBA,EAAMsB,EAAErG,EAAM2J,GACdrE,EAAOwS,IAAI/S,EAAMQ,IAAKR,GACtB4E,EAAO5E,EAAM+V,MACbhV,IAEJ,KAAOX,GAAKW,GAAG,CACX,MAAMqW,EAAYN,EAAW/V,EAAI,GAC3BsW,EAAYZ,EAAWrW,EAAI,GAC3BkX,EAAUF,EAAU5W,IACpB+W,EAAUF,EAAU7W,IACtB4W,IAAcC,GAEdzS,EAAOwS,EAAUrB,MACjB3V,IACAW,KAEMgW,EAAW/X,IAAIuY,IAKfhX,EAAOvB,IAAIsY,IAAYJ,EAAUlY,IAAIsY,GAC3Cnc,EAAOic,GAEFD,EAASnY,IAAIuY,GAClBnX,IAEK4W,EAAOxQ,IAAI8Q,GAAWN,EAAOxQ,IAAI+Q,IACtCJ,EAASlY,IAAIqY,GACbnc,EAAOic,KAGPF,EAAUjY,IAAIsY,GACdnX,MAfAuW,EAAQU,EAAW9W,GACnBH,KAiBR,KAAOA,KAAK,CACR,MAAMiX,EAAYZ,EAAWrW,GACxB2W,EAAW/X,IAAIqY,EAAU7W,MAC1BmW,EAAQU,EAAW9W,GAE3B,KAAOQ,GACH5F,EAAO2b,EAAW/V,EAAI,IAC1B,OAAO+V,EIr3BOU,CAAkBnB,EAAahX,EAAOmX,EAAS,EAAGjX,EAAKgX,EAAYD,EAAeF,EAAc7a,WAAY+E,EAAyBuV,GAAmBO,EAAeV,IACrL5V,MAGFuD,EAAEpD,GACD,IAAIqR,EAAJ,CAEA,IAAK,IAAI1S,EAAI,EAAGA,EAAI2X,EAAW1X,OAAQD,GAAK,EAC3CmB,EAAcsW,EAAYzX,IAG3B0S,GAAU,IAEXjO,EAAEpD,GACD,IAAK,IAAIrB,EAAI,EAAGA,EAAIyX,EAAYxX,OAAQD,GAAK,EAC5CuB,EAAekW,EAAYzX,IAG5B0S,GAAU,GAEXjO,EAAE1B,GACD,IAAK,IAAI/C,EAAI,EAAGA,EAAIyX,EAAYxX,OAAQD,GAAK,EAC5CyX,EAAYzX,GAAGyB,EAAEsB,GAGdA,GAAWrG,EAAO8a,KAKzB,SAASqB,GAAatC,EAAQxR,EAASyR,GACtC,IAAIsC,EACJpd,EAAoB6a,EAAQlB,GAAUsB,GAAWH,EAAa,EAAGsC,EAAYnC,IAC7E,IAAI/N,gBAAEA,GAAoB7D,GACtB8D,GAAEA,GAAO9D,EACb,MAAMgU,EA3SmBlQ,CAAAA,GAAMtL,GAC9BmY,GAAe7M,EAAf6M,CAAmBnY,EAAOuV,IA0SCkG,CAAkBnQ,GACxCoQ,EA1SgBpQ,CAAAA,GAAMtL,GAC3BmY,GAAe7M,EAAf6M,CAAmBnY,EAAOuV,IAySFoG,CAAerQ,GAClCsQ,EAzSgBtQ,CAAAA,GAAMtL,GAC3BmY,GAAe7M,EAAf6M,CAAmBnY,EAAOkU,IAwSF2H,CAAevQ,GAOxC,OALA0N,EAAOtR,MAAQF,IACV,oBAAqBA,GAASyR,EAAa,EAAG5N,EAAkB7D,EAAQ6D,iBACxE,OAAQ7D,GAASyR,EAAa,EAAG3N,EAAK9D,EAAQ8D,KAG5C,CACNA,EACAD,EACAkQ,EACAC,EACAE,EACAE,GAIF,MAAME,WAAgB7U,EACrBC,YAAYhH,GACXoZ,QACA1T,EAAKuB,KAAMjH,EAASob,GAActB,GAAmBrc,EAAgB,CAAE0N,gBAAiB,EAAGC,GAAI,KAMjG,SAASyQ,GAAkB3Y,GAC1B,IAAI4Y,EACA7G,EASJ,OAPA6G,EAAU,IAAIF,GAAQ,CACpBpd,MAAO,CACN2M,gBAAqCjI,EAAI,GACzCkI,GAAWlI,EAAI,MAIX,CACN8D,IACClC,EAAiBgX,EAAQ1d,GAAG0E,WAE7BkE,EAAErI,EAAQI,GACTgG,EAAgB+W,EAASnd,EAAQI,GACjCkW,GAAU,GAEXjO,EAAE9D,GAAMF,IACP,MAAM+Y,EAAkB,GACL,EAAf/Y,IAAkB+Y,EAAgB3Q,GAAYlI,EAAI,IACtD4Y,EAAQlD,KAAKmD,IAEd/U,EAAEpD,GACGqR,IACJvR,EAAcoY,EAAQ1d,GAAG0E,SAAUc,GACnCqR,GAAU,IAEXjO,EAAEpD,GACDE,EAAegY,EAAQ1d,GAAG0E,SAAUc,GACpCqR,GAAU,GAEXjO,EAAE1B,GACDD,EAAkByW,EAASxW,KAK9B,SAAS0W,GAAalD,EAAQxR,EAASyR,GACtC,IAAIpT,SAAEA,GAAa2B,GACf8D,GAAEA,EAAKzF,EAASyF,IAAO9D,GACvB+D,MAAEA,GAAsB/D,GACxBuD,GAAEA,GAAmBvD,GACnBvG,QAASkb,GAA0B3U,EAEzC,MAAM6D,EAAkB,CACvBN,GAAIA,GAAMlF,EAAS6P,UACnBnK,MAAOA,GAAS1F,EAAS8P,cAiB1B,OAdA1U,EAAQ,KACkB,mBAAdkb,GACVA,MAIFnD,EAAOtR,MAAQF,IACV,aAAcA,GAASyR,EAAa,EAAGpT,EAAW2B,EAAQ3B,UAC1D,OAAQ2B,GAASyR,EAAa,EAAG3N,EAAK9D,EAAQ8D,IAC9C,UAAW9D,GAASyR,EAAa,EAAG1N,EAAQ/D,EAAQ+D,OACpD,OAAQ/D,GAASyR,EAAa,EAAGlO,EAAKvD,EAAQuD,IAC9C,YAAavD,GAASyR,EAAa,EAAGkD,EAAY3U,EAAQvG,UAGxD,CAACqK,EAAID,EAAiBxF,EAAU0F,EAAOR,EAAIoR,GAGnD,MAAMC,WAAmBnV,EACxBC,YAAYhH,GACXoZ,QAEA1T,EAAKuB,KAAMjH,EAASgc,GAAcH,GAAmBpe,EAAgB,CACpEkI,SAAU,EACVyF,GAAI,EACJC,MAAO,EACPR,GAAI,EACJ9J,QAAS,KAOZ,SAASob,GAAkBjZ,GAC1B,IAAIqS,EACAN,EACJ,MAAMmH,EAA2B,CAAalZ,EAAI,GAAI,CAAEyC,SAAU+P,KAClE,IAAI2G,EAAmB,GAEvB,IAAK,IAAI9Z,EAAI,EAAGA,EAAI6Z,EAAyB5Z,OAAQD,GAAK,EACzD8Z,EAAmB1f,EAAO0f,EAAkBD,EAAyB7Z,IAKtE,OAFAgT,EAAa,IAAI2G,GAAW,CAAE1d,MAAO6d,IAE9B,CACNrV,IACClC,EAAiByQ,EAAWnX,GAAG0E,WAEhCkE,EAAErI,EAAQI,GACTgG,EAAgBwQ,EAAY5W,EAAQI,GACpCkW,GAAU,GAEXjO,EAAE9D,GAAMF,IACP,MAAMsZ,EAAkD,EAA5BtZ,EAC1BoB,EAAkBgY,EAA0B,CACxB,EAApBpZ,GAAyB4B,EAA8B1B,EAAI,IACxC,EAAnBF,GAAwB,CAAE2C,SAAU+P,MAEpC,GAEFH,EAAWqD,KAAK0D,IAEjBtV,EAAEpD,GACGqR,IACJvR,EAAc6R,EAAWnX,GAAG0E,SAAUc,GACtCqR,GAAU,IAEXjO,EAAEpD,GACDE,EAAeyR,EAAWnX,GAAG0E,SAAUc,GACvCqR,GAAU,GAEXjO,EAAE1B,GACDD,EAAkBkQ,EAAYjQ,KAKjC,SAASiX,GAAWzD,EAAQxR,EAASyR,GAMpC,OALAD,EAAOtR,MAAQgV,IACdzD,EAAa,EAAGzR,EAAU3K,EAAOA,EAAO,GAAI2K,GAAU/I,EAAuBie,MAIvE,CADPlV,EAAU/I,EAAuB+I,IAIlC,MAAMmV,WAAe1V,EACpBC,YAAYhH,GACXoZ,QACA1T,EAAKuB,KAAMjH,EAASuc,GAAYJ,GAAmB1e,EAAgB,KAMrE,SAASif,GAAkBxZ,GAC1B,IAAIqS,EACAN,EACJ,MAAMmH,EAA2B,CAAalZ,EAAI,GAAI,CAAEyC,SAAUgQ,KAClE,IAAI0G,EAAmB,GAEvB,IAAK,IAAI9Z,EAAI,EAAGA,EAAI6Z,EAAyB5Z,OAAQD,GAAK,EACzD8Z,EAAmB1f,EAAO0f,EAAkBD,EAAyB7Z,IAKtE,OAFAgT,EAAa,IAAI2G,GAAW,CAAE1d,MAAO6d,IAE9B,CACNrV,IACClC,EAAiByQ,EAAWnX,GAAG0E,WAEhCkE,EAAErI,EAAQI,GACTgG,EAAgBwQ,EAAY5W,EAAQI,GACpCkW,GAAU,GAEXjO,EAAE9D,GAAMF,IACP,MAAMsZ,EAAwD,EAAlCtZ,EAC1BoB,EAAkBgY,EAA0B,CACxB,EAApBpZ,GAAyB4B,EAA8B1B,EAAI,IAClC,EAAzBF,GAA8B,CAAE2C,SAAUgQ,MAE1C,GAEFJ,EAAWqD,KAAK0D,IAEjBtV,EAAEpD,GACGqR,IACJvR,EAAc6R,EAAWnX,GAAG0E,SAAUc,GACtCqR,GAAU,IAEXjO,EAAEpD,GACDE,EAAeyR,EAAWnX,GAAG0E,SAAUc,GACvCqR,GAAU,GAEXjO,EAAE1B,GACDD,EAAkBkQ,EAAYjQ,KAKjC,SAASqX,GAAW7D,EAAQxR,EAASyR,GAMpC,OALAD,EAAOtR,MAAQgV,IACdzD,EAAa,EAAGzR,EAAU3K,EAAOA,EAAO,GAAI2K,GAAU/I,EAAuBie,MAIvE,CADPlV,EAAU/I,EAAuB+I,IAIlC,MAAMsV,WAAqB7V,EAC1BC,YAAYhH,GACXoZ,QACA1T,EAAKuB,KAAMjH,EAAS2c,GAAYD,GAAmBjf,EAAgB,0DCxkB5DyF,KAAQ2Z,WAGR3Z,KAAQ4Z,8tBAHR5Z,KAAQ2Z,8BAGR3Z,KAAQ4Z,8HAOHpH,GAAO7B,OACPvM,EAAQyV,iBAQRrH,GAAO7B,OACPvM,EAAQ0V,mHCjBC9Z,qaAAAA,8ZCQYA,2EAAAA,iGADPyB,IAArBzB,4dAbD+Z,EAEJlR,IACEpG,SAAUgQ,GACVM,gBAAgB,EAChB9X,SAAW+e,QACTD,EAAmBC,oBAiBnBvH,GAAatH,QACbqH,GAAOzC,MACLJ,UACE3U,UAAWif,GACXpN,UAAW,UAEb8M,MAAO,iBACPC,KAAM,2GACNE,cACErH,GAAa9B,OACb8B,GAAarH,UAEfyO,cACEpH,GAAarH,QAASC,gBAAiB,geCtBvB5J,IAArBzB,KACG,IACAA,KAAiBsQ,0JAFC7O,IAArBzB,KACG,IACAA,KAAiBsQ,uEAhBnByJ,YAFOtX,qBACAsQ,YAGXlK,IACEpG,SAAAA,EACgBsQ,eAAAA,EAChB9X,SAAW+e,QACTD,EAAmBC,oQCgEOvH,mBAA8B,uWAJtDzS,oiBATFA,iEAMAA,i8BANAA,qBAMAA,MAGEA,uUAjEDka,EAAuBzH,GAAa7I,oCACpCuQ,EAAqB1H,GAAalB,kCAClC6I,EAAoB3H,GAAa/I,sDAWnC+I,GAAa1C,MACZJ,UACC3U,UAAWqf,GACXxN,UAAW,eACXuD,QAAS,aASXqC,GAAatH,cAObsH,GAAarH,eAObqH,GAAab,gBAOba,GAAaf,oBCjDR,kEAAQ,CACjBjW,OAAQW,SAASwd"}
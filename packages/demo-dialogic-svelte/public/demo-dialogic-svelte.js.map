{"version":3,"file":"demo-dialogic-svelte.js","sources":["../../dialogic-svelte/src/store.js","../../dialogic-svelte/src/dialog.js","../../dialogic-svelte/src/notification.js","../../dialogic-svelte/src/instanceEvents.js","../../dialogic-svelte/src/Instance.svelte","../../dialogic-svelte/src/Wrapper.svelte","../../dialogic-svelte/src/Dialogical.svelte","../../dialogic-svelte/src/Dialog.svelte","../../dialogic-svelte/src/Notification.svelte","../src/DialogContent.svelte","../src/DialogComponent.svelte","../src/NotificationContent.svelte","../src/RemainingLabel.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["import { writable, derived } from 'svelte/store';\nimport {\n  states,\n  selectors,\n  isPaused as _isPaused,\n  exists as _isDisplayed,\n} from 'dialogic';\n\nexport const appState = {\n  ...writable(states),\n  ...selectors,\n};\n\nstates.map(state =>\n  appState.set({\n    ...state,\n    ...selectors,\n  }),\n);\n\nexport const getCount = ns => identityOptions =>\n  derived(appState, () => selectors.getCount(ns, identityOptions));\n\nexport const isPaused = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    _isPaused(ns)(defaultDialogicOptions)(identityOptions),\n  );\n\nexport const exists = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    _isDisplayed(ns)(defaultDialogicOptions)(identityOptions),\n  );\n","import { dialog as _dialog } from 'dialogic';\nimport { getCount, isPaused, exists } from './store'; // Access Svelte's store\n\nexport const dialog = {\n  ..._dialog,\n  getCount: identityOptions => getCount(_dialog.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n};\n","import { notification as _notification } from 'dialogic';\nimport { getCount, isPaused, exists } from './store'; // Access Svelte's store\n\nexport const notification = {\n  ..._notification,\n  getCount: identityOptions => getCount(_notification.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_notification.ns)(_notification.defaultDialogicOptions)(\n      identityOptions,\n    ),\n  exists: identityOptions =>\n    exists(_notification.ns)(_notification.defaultDialogicOptions)(\n      identityOptions,\n    ),\n};\n","import { showItem, hideItem, selectors, setDomElement } from 'dialogic';\n\nexport const handleDispatch = ns => (event, fn) => {\n  // Update dispatching item:\n  const maybeItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  // Find item to transition:\n  const maybeTransitioningItem = selectors.find(\n    ns,\n    event.detail.identityOptions,\n  );\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\n\nexport const onInstanceMounted = ns => event =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onShowInstance = ns => event =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onHideInstance = ns => event =>\n  handleDispatch(ns)(event, hideItem);\n","<script>\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  // DOM bindings\n  let domElement;\n\n  export let identityOptions;\n  export let passThroughOptions;\n  export let dialogicOptions;\n\n  const className = dialogicOptions ? dialogicOptions.className : '';\n\n  const dispatchTransition = (name) =>\n    dispatch(name, {\n      identityOptions,\n      domElement\n    });\n\n  const show = () => {\n    dispatchTransition(\"show\");\n  };\n\n  const hide = () => {\n    dispatchTransition(\"hide\");\n  };\n\n  onMount(() => {\n    dispatchTransition(\"mount\");\n  });\n\n</script>\n\n<div \n  class={className}\n  bind:this={domElement}\n>\n  <svelte:component this={dialogicOptions.component} {show} {hide} {...passThroughOptions} />\n</div>\n\n","\n<script>\n  import { appState } from \"./store\";\n  import { filterCandidates } from \"dialogic\";\n  import { onInstanceMounted, onShowInstance, onHideInstance } from \"./instanceEvents\";\n  import Instance from \"./Instance.svelte\";\n\n  export let identityOptions;\n  export let ns;\n\n  const nsOnInstanceMounted = onInstanceMounted(ns);\n  const nsOnShowInstance = onShowInstance(ns);\n  const nsOnHideInstance = onHideInstance(ns);\n  \n</script>\n\n{#each filterCandidates(ns, $appState.store, identityOptions) as { identityOptions, dialogicOptions, passThroughOptions, key }, index(key)}\n  <Instance\n    {identityOptions}\n    {dialogicOptions}\n    {passThroughOptions}\n    on:mount={nsOnInstanceMounted}\n    on:show={nsOnShowInstance}\n    on:hide={nsOnHideInstance}\n  />\n{/each}\n","<script>\n  import { onMount as svelteOnMount } from 'svelte';\n  import Wrapper from './Wrapper.svelte';\n\n  export let instance;\n  export let ns = instance.ns;\n  export let spawn = undefined;\n  export let id = undefined;\n  export let onMount = undefined;\n\n  const identityOptions = {\n    id: id || instance.defaultId,\n    spawn: spawn || instance.defaultSpawn,\n  };\n\n  svelteOnMount(() => {\n    if (typeof onMount === 'function') {\n      onMount();\n    }\n  });\n</script>\n\n<Wrapper {identityOptions} {ns} />\n","<script>\n  import { dialog } from './dialog';\n  import Dialogical from './Dialogical.svelte';\n</script>\n\n<Dialogical {...$$props} instance={dialog} />\n","<script>\n  import { notification } from './notification';\n  import Dialogical from './Dialogical.svelte';\n</script>\n\n<Dialogical {...$$props} instance={notification} />\n","<script>\n  import { dialog, notification } from \"dialogic-svelte\";\n</script>\n\n<div class=\"mdc-dialog__container\">\n  <div class=\"mdc-dialog__surface\">\n    <div>\n      <h2 class=\"h2 mdc-dialog__title\">\n        {$$props.title}\n      </h2>\n      <div class=\"mdc-dialog__content\">\n        {$$props.body}\n      </div>\n      <footer class=\"mdc-dialog__actions\">\n        <div>\n          <button\n            class=\"mdc-button mdc-dialog__button\"\n            on:click={() => {\n              dialog.hide();\n              $$props.onReject();\n            }}\n          >\n            <span class=\"mdc-button__label\">Never mind</span>\n          </button>\n          <button\n            class=\"mdc-button mdc-dialog__button\"\n            on:click={() => {\n              dialog.hide();\n              $$props.onAccept();\n            }}\n          >\n            <span class=\"mdc-button__label\">Yes, retry</span>\n          </button>\n        </div>\n      </footer>\n    </div>\n  </div>\n</div>\n","<script>\n  import DialogContent from \"./DialogContent.svelte\";\n</script>\n\n<div\n  class=\"mdc-dialog mdc-dialog--open\"\n  role=\"alertdialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"my-dialog-title\"\n  aria-describedby=\"my-dialog-content\"\n  >\n    <DialogContent {...$$props} />\n    <div class=\"mdc-dialog__scrim\"/> <!-- modal, onclick is not used -->\n</div>\n","<script>\n  import { dialog, notification } from \"dialogic-svelte\";\n  import DialogComponent from \"./DialogComponent.svelte\";\n  import { remaining } from \"dialogic\";\n\n  let remainingSeconds;\n\n  remaining({\n    instance: notification,\n    roundToSeconds: true,\n    callback: (newValue) => {\n      remainingSeconds = newValue;\n    },\n  });\n\n</script>\n\n<div class=\"mdc-snackbar__label\">\n  {#if remainingSeconds !== undefined}\n    Can't send photo. Retrying in {remainingSeconds} seconds.\n  {:else}\n    Can't send photo.\n  {/if}\n</div>\n<div class=\"mdc-snackbar__actions\">\n  <button\n    class=\"button mdc-button mdc-snackbar__action\"\n    on:click={() => {\n      notification.pause();\n      dialog.show({\n        dialogic: {\n          component: DialogComponent,\n          className: \"dialog\",\n        },\n        title: \"Retry sending?\",\n        body: \"We have noticed a slow internet connection. Even when you retry now, sending may take longer than usual.\",\n        onAccept: () => {\n          notification.hide();\n          notification.resume();\n        },\n        onReject: () => {\n          notification.resume({ minimumDuration: 2000 });\n        }\n      });\n    }}>\n    Retry now\n  </button>\n</div>\n","<script>\n  import { remaining } from \"dialogic\";\n\n  export let instance;\n  export let roundToSeconds;\n  let remainingSeconds;\n\n  remaining({\n    instance,\n    roundToSeconds: roundToSeconds,\n    callback: (newValue) => {\n      remainingSeconds = newValue;\n    },\n  });\n  \n</script>\n\n<div class=\"remaining\">\n  <span>\n    {remainingSeconds === undefined\n      ? \"0\"\n      : remainingSeconds.toString()\n    }\n  </span>\n</div>\n\n<style>\n.remaining {\n  min-width: 3em;\n  text-align: left;\n}\n</style>\n","<script>\n\timport { Dialog, notification, Notification } from \"dialogic-svelte\";\n\timport NotificationComponent from \"./NotificationComponent.svelte\";\n\timport RemainingLabel from \"./RemainingLabel.svelte\";\n\timport { remaining } from \"dialogic\";\n\n\tconst notificationIsPaused = notification.isPaused();\n\tconst notificationExists = notification.exists();\n\tconst notificationCount = notification.getCount();\n</script>\n\n<div class=\"page\">\n\t<main>\n\t\t<h1>Dialogic for Svelte demo</h1>\n\t\t<div class=\"message\">Add one or more notifications, then click on the Retry button in the message.</div>\n\t\t<div class=\"ui message\">\n\t\t\t<button\n\t\t\t\tclass=\"ui button primary\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.show({\n\t\t\t\t\t\tdialogic: {\n\t\t\t\t\t\t\tcomponent: NotificationComponent,\n\t\t\t\t\t\t\tclassName: \"notification\",\n\t\t\t\t\t\t\ttimeout: 4000\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}}>\n\t\t\t\tAdd notification\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.pause()\n\t\t\t\t}}>\n\t\t\t\tPause\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.resume()\n\t\t\t\t}}>\n\t\t\t\tResume\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.hideAll()\n\t\t\t\t}}>\n\t\t\t\tHide all\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.resetAll()\n\t\t\t\t}}>\n\t\t\t\tReset all\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"ui message\">\n\t\t\t<div class=\"ui label\">\n\t\t\t\tNotifications\n\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t{$notificationCount}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"ui label\">\n\t\t\t\tIs paused\n\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t{$notificationIsPaused}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{#if $notificationExists}\n\t\t\t\t<div class=\"ui label\">\n\t\t\t\t\tRemaining\n\t\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t\t<RemainingLabel instance={notification} roundToSeconds={false} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</main>\n\t<footer>\n\t\tDialogic: manage dialogs and notifications. <a href='https://github.com/ArthurClemens/dialogic'>Main documentation on GitHub</a>\n\t</footer>\n</div>\n<Dialog />\n<Notification />\n","import App from './App.svelte';\n\nimport './styles.css';\n\nvar app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["appState","writable","states","selectors","map","state","set","getCount","ns","identityOptions","derived","isPaused","defaultDialogicOptions","_isPaused","exists","_isDisplayed","dialog","_dialog","notification","_notification","handleDispatch","event","fn","maybeItem","find","detail","just","setDomElement","domElement","maybeTransitioningItem","onInstanceMounted","showItem","onShowInstance","onHideInstance","hideItem","ctx","component","dispatch","createEventDispatcher","passThroughOptions","dialogicOptions","className","dispatchTransition","name","show","hide","onMount","filterCandidates","store","length","nsOnInstanceMounted","nsOnShowInstance","nsOnHideInstance","instance","spawn","id","defaultId","defaultSpawn","svelteOnMount","title","body","$$props","onReject","onAccept","undefined","remainingSeconds","remaining","roundToSeconds","callback","newValue","pause","dialogic","DialogComponent","resume","minimumDuration","toString","notificationIsPaused","notificationExists","notificationCount","NotificationComponent","timeout","hideAll","resetAll","App","target","document"],"mappings":"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"}
{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../../dialogic/node_modules/mithril/stream/stream.js","../../dialogic/dist/dialogic.mjs","../node_modules/svelte/store/index.mjs","../../dialogic-svelte/src/store.js","../../dialogic-svelte/src/dialog.js","../../dialogic-svelte/src/notification.js","../../dialogic-svelte/src/instanceEvents.js","../../dialogic-svelte/src/Instance.svelte","../../dialogic-svelte/src/Wrapper.svelte","../../dialogic-svelte/src/Dialogical.svelte","../../dialogic-svelte/src/Dialog.svelte","../../dialogic-svelte/src/Notification.svelte","../src/DialogContent.svelte","../src/DialogComponent.svelte","../src/NotificationContent.svelte","../src/RemainingLabel.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.22.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/* eslint-disable */\n;(function() {\n\"use strict\"\n/* eslint-enable */\nStream.SKIP = {}\nStream.lift = lift\nStream.scan = scan\nStream.merge = merge\nStream.combine = combine\nStream.scanMerge = scanMerge\nStream[\"fantasy-land/of\"] = Stream\n\nvar warnedHalt = false\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true\n\t\treturn Stream.SKIP\n\t}\n})\n\nfunction Stream(value) {\n\tvar dependentStreams = []\n\tvar dependentFns = []\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing()\n\t\t\t\tstream._state = \"active\"\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)) })\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\"\n\tstream._parents = []\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\"\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing()\n\t\t})\n\t}\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value))\n\t\ttarget._parents.push(stream)\n\t\tdependentStreams.push(target)\n\t\tdependentFns.push(fn)\n\t\treturn target\n\t}\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t}\n\n\tvar end\n\tfunction createEnd() {\n\t\tend = Stream()\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream)})\n\t\t\t\tstream._state = \"ended\"\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0\n\t\t\t}\n\t\t\treturn value\n\t\t})\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value }\n\n\tstream[\"fantasy-land/map\"] = stream.map\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) }\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child)\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1)\n\t\t\tdependentFns.splice(childIndex, 1)\n\t\t}\n\t}\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t})\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t})\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream()\n\n\tvar changed = []\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s)\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])))\n\t\t\t\tchanged = []\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t})\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true) })\n\t\t\tendStream.end(true)\n\t\t}\n\t\treturn undefined\n\t})\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v)\n\t\tif (next !== Stream.SKIP) acc = next\n\t\treturn next\n\t})\n\tstream(acc)\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] })\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1]\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream())\n\t\t})\n\n\t\treturn seed\n\t}, streams)\n\n\tstream(seed)\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0]\n\tvar streams = Array.prototype.slice.call(arguments, 1)\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nif (typeof module !== \"undefined\") module[\"exports\"] = Stream\nelse if (typeof window.m === \"function\" && !(\"stream\" in window.m)) window.m.stream = Stream\nelse window.m = {stream : Stream}\n\n}());\n","import Stream from 'mithril/stream';\nexport { default as Stream } from 'mithril/stream';\n\nconst pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop, }) => {\r\n    const defaultView = document.defaultView;\r\n    if (defaultView) {\r\n        const style = defaultView.getComputedStyle(domElement);\r\n        if (style) {\r\n            return style.getPropertyValue(prop);\r\n        }\r\n    }\r\n};\n\nconst MODE = {\r\n    SHOW: 'show',\r\n    HIDE: 'hide',\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(...transitionClassNames.showStart, ...transitionClassNames.showEnd, ...transitionClassNames.hideStart, ...transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, styles) => {\r\n    const transitionStyle = styles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        const value = transitionStyle[key].toString();\r\n        domElement.style[key] = value;\r\n        // if (domElement.style[key] !== value) {\r\n        // \tconsole.warn(`Invalid style: ${key}: ${value} (${domElement.style[key]})`);\r\n        // }\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => (domElement.style.transitionDuration = '0ms');\r\nconst getTransitionStyles = (domElement, styles) => (typeof styles === 'function' ? styles(domElement) : styles) || {};\r\nconst createClassList = (className, step) => className.split(/ /).map((n) => `${n}-${step}`);\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.styles) {\r\n        const styles = getTransitionStyles(domElement, props.styles);\r\n        applyTransitionStyles(domElement, 'default', styles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, styles);\r\n    }\r\n    if (props.className) {\r\n        const transitionClassNames = {\r\n            showStart: createClassList(props.className, 'show-start'),\r\n            showEnd: createClassList(props.className, 'show-end'),\r\n            hideStart: createClassList(props.className, 'hide-start'),\r\n            hideEnd: createClassList(props.className, 'hide-end'),\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames &&\r\n            domElement.classList.add(...transitionClassNames[step]);\r\n    }\r\n    // reflow\r\n    domElement.scrollTop;\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({\r\n        domElement,\r\n        prop: 'transition-duration',\r\n    });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({\r\n        domElement,\r\n        prop: 'transition-delay',\r\n    });\r\n    const delayValue = delayStyleValue !== undefined ? styleDurationToMs(delayStyleValue) : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: 'showEnd',\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined,\r\n    },\r\n    hideStart: {\r\n        nextStep: 'hideEnd',\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined,\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve('no domElement');\r\n    }\r\n    clearTimeout(props.__transitionTimeoutId__);\r\n    let currentStep = mode === MODE.SHOW ? 'showStart' : 'hideStart';\r\n    return new Promise(resolve => {\r\n        applyStylesForState(domElement, props, currentStep, currentStep === 'showStart');\r\n        setTimeout(() => {\r\n            const nextStep = steps[currentStep].nextStep;\r\n            if (nextStep) {\r\n                currentStep = nextStep;\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // addEventListener sometimes hangs this function because it never finishes\r\n                // Using setTimeout instead of addEventListener gives more consistent results\r\n                const duration = getDuration(domElement);\r\n                props.__transitionTimeoutId__ = setTimeout(resolve, duration);\r\n            }\r\n        }, 0);\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf('ms') === -1 ? 1000 : 1);\r\n    return isNaN(parsed) ? 0 : parsed;\r\n};\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join('-');\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(identityOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item ? { just: item } : { nothing: undefined };\r\n            },\r\n            getAll: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = identityOptions !== undefined ? identityOptions.spawn : undefined;\r\n                const id = identityOptions !== undefined ? identityOptions.id : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = Stream();\r\nconst states = Stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state =>\r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    callback: () => { },\r\n    isPaused: false,\r\n    onAbort: () => { },\r\n    onDone: () => { },\r\n    promise: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    timeoutFn: () => { },\r\n    timerId: undefined,\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => resolve();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            }),\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId,\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state),\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === 0 || state.remaining === undefined\r\n    ? state.remaining\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState,\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(!state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration)),\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused ? state.remaining : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = Stream();\r\n    const states = Stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state =>\r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => (uid === Number.MAX_VALUE ? 0 : uid++);\r\nconst transitionStates = {\r\n    default: 0,\r\n    displaying: 1,\r\n    hiding: 2,\r\n};\r\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultDialogicOptions, identityOptions));\r\nconst filterBySpawn = (identityOptions) => (items) => identityOptions.spawn !== undefined\r\n    ? items.filter(item => item.identityOptions.spawn === identityOptions.spawn)\r\n    : items;\r\nconst filterById = (identityOptions) => (items) => identityOptions.id !== undefined\r\n    ? items.filter(item => item.identityOptions.id === identityOptions.id)\r\n    : items;\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.dialogicOptions.queued ? queuedCount++ : 0,\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, identityOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    if (nsItems.length == 0) {\r\n        return [];\r\n    }\r\n    return pipe(filterBySpawn(identityOptions), filterFirstInQueue)(nsItems);\r\n};\r\nconst getPassThroughOptions = options => {\r\n    const copy = {\r\n        ...options,\r\n    };\r\n    delete copy.dialogic;\r\n    return copy;\r\n};\r\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\r\n    id: identityOptions.id || defaultDialogicOptions.id,\r\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\r\n});\r\nconst handleOptions = (defaultDialogicOptions, options = {}) => {\r\n    const identityOptions = {\r\n        id: options.dialogic ? options.dialogic.id : undefined,\r\n        spawn: options.dialogic ? options.dialogic.spawn : undefined,\r\n    };\r\n    const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions || {}, identityOptions);\r\n    const dialogicOptions = {\r\n        ...defaultDialogicOptions,\r\n        ...options.dialogic,\r\n        __transitionTimeoutId__: 0,\r\n    };\r\n    const passThroughOptions = getPassThroughOptions(options);\r\n    return {\r\n        identityOptions: mergedIdentityOptions,\r\n        dialogicOptions,\r\n        passThroughOptions,\r\n    };\r\n};\r\nconst createInstance = (ns) => (defaultDialogicOptions) => (options = {}) => {\r\n    const { identityOptions, dialogicOptions, passThroughOptions, } = handleOptions(defaultDialogicOptions, options);\r\n    return new Promise(resolve => {\r\n        const callbacks = {\r\n            didShow: (item) => {\r\n                if (dialogicOptions.didShow) {\r\n                    dialogicOptions.didShow(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n            didHide: (item) => {\r\n                if (dialogicOptions.didHide) {\r\n                    dialogicOptions.didHide(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n        };\r\n        const item = {\r\n            ns,\r\n            identityOptions,\r\n            dialogicOptions,\r\n            callbacks,\r\n            passThroughOptions,\r\n            id: createId(identityOptions, ns),\r\n            timer: dialogicOptions.timeout ? Timer() : undefined,\r\n            key: getUid().toString(),\r\n            transitionState: transitionStates.default,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, identityOptions);\r\n        if (maybeExistingItem.just && dialogicOptions.toggle) {\r\n            const hideResult = hide(ns)(defaultDialogicOptions)(options);\r\n            return resolve(hideResult);\r\n        }\r\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve dialogicOptions\r\n            const dialogicOptions = existingItem.dialogicOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                transitionState: existingItem.transitionState,\r\n                dialogicOptions,\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst hide = (ns) => (defaultDialogicOptions) => (options) => {\r\n    const { identityOptions, dialogicOptions, passThroughOptions, } = handleOptions(defaultDialogicOptions, options);\r\n    const maybeExistingItem = selectors.find(ns, identityOptions);\r\n    if (maybeExistingItem.just) {\r\n        const existingItem = maybeExistingItem.just;\r\n        const item = {\r\n            ...existingItem,\r\n            dialogicOptions: {\r\n                ...existingItem.dialogicOptions,\r\n                ...dialogicOptions,\r\n            },\r\n            passThroughOptions: {\r\n                ...existingItem.passThroughOptions,\r\n                passThroughOptions,\r\n            },\r\n        };\r\n        actions.replace(ns, existingItem.id, item);\r\n        if (item.transitionState !== transitionStates.hiding) {\r\n            return hideItem(item);\r\n        }\r\n        else {\r\n            return Promise.resolve(item);\r\n        }\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst pause = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const items = getValidItems(ns, identityOptions).filter(item => !!item.timer);\r\n    items.forEach((item) => item.timer && item.timer.actions.pause());\r\n    return Promise.all(items);\r\n};\r\nconst resume = (ns) => (defaultDialogicOptions) => (commandOptions) => {\r\n    const options = commandOptions || {};\r\n    const identityOptions = {\r\n        id: options.id,\r\n        spawn: options.spawn,\r\n    };\r\n    const items = getValidItems(ns, identityOptions).filter(item => !!item.timer);\r\n    items.forEach((item) => item.timer && item.timer.actions.resume(options.minimumDuration));\r\n    return Promise.all(items);\r\n};\r\nconst getTimerProperty = (timerProp, defaultValue) => (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty('isPaused', false);\r\nconst getRemaining$1 = getTimerProperty('getRemaining', undefined);\r\nconst exists = (ns) => (defaultDialogicOptions) => (identityOptions) => !!getValidItems(ns, identityOptions).length;\r\nconst getValidItems = (ns, identityOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    let validItems;\r\n    if (identityOptions) {\r\n        validItems = pipe(filterBySpawn(identityOptions), filterById(identityOptions))(allItems);\r\n    }\r\n    else {\r\n        validItems = allItems;\r\n    }\r\n    return validItems;\r\n};\r\nconst resetAll = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const validItems = getValidItems(ns, identityOptions);\r\n    const items = [];\r\n    validItems.forEach((item) => {\r\n        item.timer && item.timer.actions.abort();\r\n        items.push(item);\r\n    });\r\n    if (identityOptions) {\r\n        items.forEach((item) => {\r\n            actions.remove(ns, item.id);\r\n        });\r\n    }\r\n    else {\r\n        actions.removeAll(ns);\r\n    }\r\n    return Promise.resolve(items);\r\n};\r\nconst getOverridingTransitionOptions = (item, dialogicOptions) => {\r\n    return {\r\n        ...item,\r\n        dialogicOptions: {\r\n            ...item.dialogicOptions,\r\n            ...dialogicOptions,\r\n        },\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * Optional `dialogicOptions` may be passed with specific transition options. This comes in handy when all items should hide in the same way.\r\n */\r\nconst hideAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\r\n    const options = dialogicOptions || {};\r\n    const identityOptions = {\r\n        id: options.id,\r\n        spawn: options.spawn,\r\n    };\r\n    const validItems = getValidItems(ns, identityOptions);\r\n    const regularItems = validItems.filter((item) => !options.queued && !item.dialogicOptions.queued);\r\n    const queuedItems = validItems.filter((item) => options.queued || item.dialogicOptions.queued);\r\n    const items = [];\r\n    regularItems.forEach((item) => items.push(hideItem(getOverridingTransitionOptions(item, options))));\r\n    if (queuedItems.length > 0) {\r\n        const [current] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        items.push(hideItem(getOverridingTransitionOptions(current, options)));\r\n    }\r\n    return Promise.all(items);\r\n};\r\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\r\nconst transitionItem = (item, mode) => transition(item.dialogicOptions, mode);\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => hideItem(item), timeout);\r\n    return getTimerProperty('getResultPromise', undefined);\r\n};\r\nconst showItem = async function (item) {\r\n    if (item.transitionState !== transitionStates.displaying) {\r\n        item.transitionState = transitionStates.displaying;\r\n        await transitionItem(item, MODE.SHOW);\r\n    }\r\n    item.callbacks.didShow && (await item.callbacks.didShow(item));\r\n    if (item.dialogicOptions.timeout && item.timer) {\r\n        await deferredHideItem(item, item.timer, item.dialogicOptions.timeout);\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    item.transitionState = transitionStates.hiding;\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await transitionItem(item, MODE.HIDE);\r\n    item.callbacks.didHide && (await item.callbacks.didHide(item));\r\n    const copy = {\r\n        ...item,\r\n    };\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.dialogicOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout, }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultDialogicOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued }),\r\n        ...(timeout !== undefined && { timeout }),\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultDialogicOptions,\r\n        // Commands\r\n        show: show(ns)(defaultDialogicOptions),\r\n        hide: hide(ns)(defaultDialogicOptions),\r\n        hideAll: hideAll(ns)(defaultDialogicOptions),\r\n        resetAll: resetAll(ns)(defaultDialogicOptions),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultDialogicOptions),\r\n        resume: resume(ns)(defaultDialogicOptions),\r\n        // State\r\n        exists: exists(ns)(defaultDialogicOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultDialogicOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultDialogicOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: 'dialog' });\n\nconst notification = dialogical({\r\n    ns: 'notification',\r\n    queued: true,\r\n    timeout: 3000,\r\n});\n\n/**\r\n * Utility script that uses an animation frame to pass the current remaining value\r\n * (which is utilized when setting `timeout`).\r\n */\r\nconst remaining = (props) => {\r\n    let displayValue = undefined;\r\n    let reqId;\r\n    let isCanceled = false;\r\n    const update = () => {\r\n        const remaining = props.instance.getRemaining();\r\n        if (displayValue !== remaining) {\r\n            displayValue =\r\n                remaining === undefined\r\n                    ? remaining\r\n                    : props.roundToSeconds\r\n                        ? Math.round(Math.max(remaining, 0) / 1000)\r\n                        : Math.max(remaining, 0);\r\n        }\r\n        props.callback(displayValue);\r\n        if (!props.instance.exists()) {\r\n            window.cancelAnimationFrame(reqId);\r\n            isCanceled = true;\r\n        }\r\n        else if (!isCanceled) {\r\n            reqId = window.requestAnimationFrame(update);\r\n        }\r\n    };\r\n    reqId = window.requestAnimationFrame(update);\r\n};\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, remaining, resetAll, resume, selectors, setDomElement, show, showItem, states };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from 'svelte/store';\nimport {\n  states,\n  selectors,\n  isPaused as _isPaused,\n  exists as _isDisplayed,\n} from 'dialogic';\n\nexport const appState = {\n  ...writable(states),\n  ...selectors,\n};\n\nstates.map(state =>\n  appState.set({\n    ...state,\n    ...selectors,\n  }),\n);\n\nexport const getCount = ns => identityOptions =>\n  derived(appState, () => selectors.getCount(ns, identityOptions));\n\nexport const isPaused = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    _isPaused(ns)(defaultDialogicOptions)(identityOptions),\n  );\n\nexport const exists = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    _isDisplayed(ns)(defaultDialogicOptions)(identityOptions),\n  );\n","import { dialog as _dialog } from 'dialogic';\nimport { getCount, isPaused, exists } from './store'; // Access Svelte's store\n\nexport const dialog = {\n  ..._dialog,\n  getCount: identityOptions => getCount(_dialog.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n};\n","import { notification as _notification } from 'dialogic';\nimport { getCount, isPaused, exists } from './store'; // Access Svelte's store\n\nexport const notification = {\n  ..._notification,\n  getCount: identityOptions => getCount(_notification.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_notification.ns)(_notification.defaultDialogicOptions)(\n      identityOptions,\n    ),\n  exists: identityOptions =>\n    exists(_notification.ns)(_notification.defaultDialogicOptions)(\n      identityOptions,\n    ),\n};\n","import { showItem, hideItem, selectors, setDomElement } from 'dialogic';\n\nexport const handleDispatch = ns => (event, fn) => {\n  // Update dispatching item:\n  const maybeItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  // Find item to transition:\n  const maybeTransitioningItem = selectors.find(\n    ns,\n    event.detail.identityOptions,\n  );\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\n\nexport const onInstanceMounted = ns => event =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onShowInstance = ns => event =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onHideInstance = ns => event =>\n  handleDispatch(ns)(event, hideItem);\n","<script>\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  // DOM bindings\n  let domElement;\n\n  export let identityOptions;\n  export let passThroughOptions;\n  export let dialogicOptions;\n\n  const className = dialogicOptions ? dialogicOptions.className : '';\n\n  const dispatchTransition = (name) =>\n    dispatch(name, {\n      identityOptions,\n      domElement\n    });\n\n  const show = () => {\n    dispatchTransition(\"show\");\n  };\n\n  const hide = () => {\n    dispatchTransition(\"hide\");\n  };\n\n  onMount(() => {\n    dispatchTransition(\"mount\");\n  });\n\n</script>\n\n<div \n  class={className}\n  bind:this={domElement}\n>\n  <svelte:component this={dialogicOptions.component} {show} {hide} {...passThroughOptions} />\n</div>\n\n","\n<script>\n  import { appState } from \"./store\";\n  import { filterCandidates } from \"dialogic\";\n  import { onInstanceMounted, onShowInstance, onHideInstance } from \"./instanceEvents\";\n  import Instance from \"./Instance.svelte\";\n\n  export let identityOptions;\n  export let ns;\n\n  const nsOnInstanceMounted = onInstanceMounted(ns);\n  const nsOnShowInstance = onShowInstance(ns);\n  const nsOnHideInstance = onHideInstance(ns);\n  \n</script>\n\n{#each filterCandidates(ns, $appState.store, identityOptions) as { identityOptions, dialogicOptions, passThroughOptions, key }, index(key)}\n  <Instance\n    {identityOptions}\n    {dialogicOptions}\n    {passThroughOptions}\n    on:mount={nsOnInstanceMounted}\n    on:show={nsOnShowInstance}\n    on:hide={nsOnHideInstance}\n  />\n{/each}\n","<script>\n  import { onMount as svelteOnMount } from \"svelte\";\n  import Wrapper from \"./Wrapper.svelte\";\n\n  export let type;\n  export let ns = type.ns;\n  export let spawn = undefined;\n  export let id = undefined;\n  export let onMount = undefined;\n\n  const identityOptions = {\n    id: id || type.defaultId,\n    spawn: spawn || type.defaultSpawn,\n  };\n\n  svelteOnMount(() => {\n    if (typeof onMount === \"function\") {\n      onMount();\n    }\n  })\n</script>\n\n<Wrapper {identityOptions} {ns} />\n","<script>\n  import { dialog } from \"./dialog\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={dialog} />\n","<script>\n  import { notification } from \"./notification\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={notification} />\n","<script>\n  import { dialog, notification } from \"dialogic-svelte\";\n</script>\n\n<div class=\"mdc-dialog__container\">\n  <div class=\"mdc-dialog__surface\">\n    <div>\n      <h2 class=\"h2 mdc-dialog__title\">\n        {$$props.title}\n      </h2>\n      <div class=\"mdc-dialog__content\">\n        {$$props.body}\n      </div>\n      <footer class=\"mdc-dialog__actions\">\n        <div>\n          <button\n            class=\"mdc-button mdc-dialog__button\"\n            on:click={() => {\n              dialog.hide();\n              $$props.onReject();\n            }}\n          >\n            <span class=\"mdc-button__label\">Never mind</span>\n          </button>\n          <button\n            class=\"mdc-button mdc-dialog__button\"\n            on:click={() => {\n              dialog.hide();\n              $$props.onAccept();\n            }}\n          >\n            <span class=\"mdc-button__label\">Yes, retry</span>\n          </button>\n        </div>\n      </footer>\n    </div>\n  </div>\n</div>\n","<script>\n  import DialogContent from \"./DialogContent.svelte\";\n</script>\n\n<div\n  class=\"mdc-dialog mdc-dialog--open\"\n  role=\"alertdialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"my-dialog-title\"\n  aria-describedby=\"my-dialog-content\"\n  >\n    <DialogContent {...$$props} />\n    <div class=\"mdc-dialog__scrim\"/> <!-- modal, onclick is not used -->\n</div>\n","<script>\n  import { dialog, notification } from \"dialogic-svelte\";\n  import DialogComponent from \"./DialogComponent.svelte\";\n  import { remaining } from \"dialogic\";\n\n  let remainingSeconds;\n\n  remaining({\n    instance: notification,\n    roundToSeconds: true,\n    callback: (newValue) => {\n      remainingSeconds = newValue;\n    },\n  });\n\n</script>\n\n<div class=\"mdc-snackbar__label\">\n  {#if remainingSeconds !== undefined}\n    Can't send photo. Retrying in {remainingSeconds} seconds.\n  {:else}\n    Can't send photo.\n  {/if}\n</div>\n<div class=\"mdc-snackbar__actions\">\n  <button\n    class=\"button mdc-button mdc-snackbar__action\"\n    on:click={() => {\n      notification.pause();\n      dialog.show({\n        dialogic: {\n          component: DialogComponent,\n          className: \"dialog\",\n        },\n        title: \"Retry sending?\",\n        body: \"We have noticed a slow internet connection. Even when you retry now, sending may take longer than usual.\",\n        onAccept: () => {\n          notification.hide();\n          notification.resume();\n        },\n        onReject: () => {\n          notification.resume({ minimumDuration: 2000 });\n        }\n      });\n    }}>\n    Retry now\n  </button>\n</div>\n","<script>\n  import { remaining } from \"dialogic\";\n\n  export let instance;\n  export let roundToSeconds;\n  let remainingSeconds;\n\n  remaining({\n    instance,\n    roundToSeconds: roundToSeconds,\n    callback: (newValue) => {\n      remainingSeconds = newValue;\n    },\n  });\n  \n</script>\n\n<div class=\"remaining\">\n  <span>\n    {remainingSeconds === undefined\n      ? \"0\"\n      : remainingSeconds.toString()\n    }\n  </span>\n</div>\n\n<style>\n.remaining {\n  min-width: 3em;\n  text-align: left;\n}\n</style>\n","<script>\n\timport { Dialog, notification, Notification } from \"dialogic-svelte\";\n\timport NotificationComponent from \"./NotificationComponent.svelte\";\n\timport RemainingLabel from \"./RemainingLabel.svelte\";\n\timport { remaining } from \"dialogic\";\n\n\tconst notificationIsPaused = notification.isPaused();\n\tconst notificationExists = notification.exists();\n\tconst notificationCount = notification.getCount();\n</script>\n\n<div class=\"page\">\n\t<main>\n\t\t<h1>Dialogic for Svelte demo</h1>\n\t\t<div class=\"message\">Add one or more notifications, then click on the Retry button in the message.</div>\n\t\t<div class=\"ui message\">\n\t\t\t<button\n\t\t\t\tclass=\"ui button primary\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.show({\n\t\t\t\t\t\tdialogic: {\n\t\t\t\t\t\t\tcomponent: NotificationComponent,\n\t\t\t\t\t\t\tclassName: \"notification\",\n\t\t\t\t\t\t\ttimeout: 4000\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}}>\n\t\t\t\tAdd notification\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.pause()\n\t\t\t\t}}>\n\t\t\t\tPause\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.resume()\n\t\t\t\t}}>\n\t\t\t\tResume\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.hideAll()\n\t\t\t\t}}>\n\t\t\t\tHide all\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclass=\"ui button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tnotification.resetAll()\n\t\t\t\t}}>\n\t\t\t\tReset all\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"ui message\">\n\t\t\t<div class=\"ui label\">\n\t\t\t\tNotifications\n\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t{$notificationCount}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"ui label\">\n\t\t\t\tIs paused\n\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t{$notificationIsPaused}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{#if $notificationExists}\n\t\t\t\t<div class=\"ui label\">\n\t\t\t\t\tRemaining\n\t\t\t\t\t<div class=\"detail\">\n\t\t\t\t\t\t<RemainingLabel instance={notification} roundToSeconds={false} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</main>\n\t<footer>\n\t\tDialogic: manage dialogs and notifications. <a href='https://github.com/ArthurClemens/dialogic'>Main documentation on GitHub</a>\n\t</footer>\n</div>\n<Dialog />\n<Notification />\n","import App from './App.svelte';\n\nimport \"./styles.css\";\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","get_spread_object","spread_props","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","Stream","SKIP","lift","arguments","streams","prototype","merge","apply","scan","acc","origin","stream","v","next","combine","scanMerge","tuples","seed","tuple","changed","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","createEnd","_parents","_unregisterChild","constructor","_map","ignoreInitial","toJSON","x","s1","s2","child","childIndex","defineProperty","get","every","concat","mappers","endStream","mapper","console","log","module","pipe","Boolean","reduce","y","f","getStyleValue","domElement","prop","defaultView","style","getComputedStyle","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","keys","toString","createClassList","className","split","applyStylesForState","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","scrollTop","steps","nextStep","transition","mode","clearTimeout","__transitionTimeoutId__","currentStep","setTimeout","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","isNaN","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","join","initialState","actions","state","timer","states","refresh","remaining","removeItem","replace","newItem","removeAll","newItems","selectors","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","isPaused","onAbort","onDone","promise","startTime","timeoutFn","timerId","appendStartTimer","updateState","reject","Date","getTime","window","appendStopTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","transitionStates","filterBySpawn","filterFirstInQueue","nsItems","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","getMergedIdentityOptions","defaultDialogicOptions","handleOptions","dialogic","passThroughOptions","copy","getPassThroughOptions","show","didShow","didHide","timeout","Number","MAX_VALUE","transitionState","maybeExistingItem","toggle","hideResult","hide","existingItem","replacingItem","hideItem","getValidItems","all","commandOptions","getTimerProperty","timerProp","defaultValue","maybeItem","getMaybeItem","getRemaining$1","exists","allItems","validItems","filterById","resetAll","getOverridingTransitionOptions","hideAll","regularItems","queuedItems","current","transitionItem","showItem","async","deferredHideItem","dialogical","defaultId","defaultSpawn","dialog","notification","reqId","displayValue","isCanceled","roundToSeconds","round","requestAnimationFrame","cancelAnimationFrame","subscriber_queue","writable","subscribers","set","new_value","run_queue","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","appState","_isPaused","_isDisplayed","_dialog","_notification","handleDispatch","maybeTransitioningItem","dispatch","dispatchTransition","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","nsOnInstanceMounted","onInstanceMounted","nsOnShowInstance","onShowInstance","nsOnHideInstance","onHideInstance","svelteOnMount","title","body","$$props","onReject","onAccept","remainingSeconds","newValue","DialogComponent","notificationIsPaused","notificationExists","notificationCount","NotificationComponent"],"mappings":"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"}
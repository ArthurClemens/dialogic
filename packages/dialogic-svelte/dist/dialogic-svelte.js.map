{"version":3,"file":"dialogic-svelte.js","sources":["../../dialogic/dist/dialogic.mjs","../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/store.js","../src/dialog.js","../src/notification.js","../src/instance-events.js","../src/Instance.svelte","../src/Wrapper.svelte","../src/Dialog.svelte","../src/Notification.svelte"],"sourcesContent":["const MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst transitionOptionKeys = {\r\n    className: true,\r\n    component: true,\r\n    didHide: true,\r\n    didShow: true,\r\n    hideDelay: true,\r\n    hideDuration: true,\r\n    hideTimingFunction: true,\r\n    showClassName: true,\r\n    showDelay: true,\r\n    showDuration: true,\r\n    showTimingFunction: true,\r\n    timeout: true,\r\n    transitionClassName: true,\r\n    transitions: true,\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElements\r\n        ? props.domElements.domElement\r\n        : null;\r\n    if (!domElement) {\r\n        throw new Error(\"No DOM element\");\r\n    }\r\n    return new Promise(resolve => {\r\n        const style = domElement.style;\r\n        const computedStyle =  window.getComputedStyle(domElement)\r\n            ;\r\n        const isShow = mode === MODE.SHOW;\r\n        const transitionProps = getTransitionProps(props, isShow);\r\n        const duration = transitionProps.duration !== undefined\r\n            ? transitionProps.duration * 1000\r\n            : computedStyle\r\n                ? styleDurationToMs(computedStyle.transitionDuration)\r\n                : 0;\r\n        const delay = transitionProps.delay !== undefined\r\n            ? transitionProps.delay * 1000\r\n            : computedStyle\r\n                ? styleDurationToMs(computedStyle.transitionDelay)\r\n                : 0;\r\n        const totalDuration = duration + delay;\r\n        const before = () => {\r\n            if (transitionProps.before && typeof transitionProps.before === \"function\") {\r\n                style.transitionDuration = \"0ms\";\r\n                style.transitionDelay = \"0ms\";\r\n                transitionProps.before();\r\n            }\r\n        };\r\n        const after = () => {\r\n            if (transitionProps.after && typeof transitionProps.after === \"function\") {\r\n                transitionProps.after();\r\n            }\r\n        };\r\n        const applyTransition = () => {\r\n            // Set styles\r\n            const timingFunction = transitionProps.timingFunction\r\n                // or when set in CSS:\r\n                || (computedStyle\r\n                    ? computedStyle.transitionTimingFunction\r\n                    : undefined);\r\n            if (timingFunction) {\r\n                style.transitionTimingFunction = timingFunction;\r\n            }\r\n            style.transitionDuration = duration + \"ms\";\r\n            style.transitionDelay = delay + \"ms\";\r\n            // Set classes (need to be set after styles)\r\n            if (props.transitionClassName) {\r\n                domElement.classList.add(props.transitionClassName);\r\n            }\r\n            if (props.showClassName) {\r\n                const showClassElement = props.showClassElement || domElement;\r\n                showClassElement.classList[isShow ? \"add\" : \"remove\"](props.showClassName);\r\n            }\r\n            // Call transition function\r\n            if (transitionProps.transition) {\r\n                transitionProps.transition();\r\n            }\r\n        };\r\n        before();\r\n        applyTransition();\r\n        setTimeout(() => {\r\n            after();\r\n            if (props.transitionClassName) {\r\n                domElement.classList.remove(props.transitionClassName);\r\n            }\r\n            resolve();\r\n        }, totalDuration);\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\r\nconst getTransitionProps = (props, isShow) => {\r\n    const [duration, delay, timingFunction, transition] = isShow\r\n        ? [props.showDuration, props.showDelay, props.showTimingFunction, props.transitions ? props.transitions.show : undefined]\r\n        : [props.hideDuration, props.hideDelay, props.hideTimingFunction, props.transitions ? props.transitions.hide : undefined];\r\n    return {\r\n        duration,\r\n        delay,\r\n        timingFunction,\r\n        ...(transition\r\n            ? transition(props.domElements)\r\n            : undefined)\r\n    };\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (spawnOptions, ns) => [ns, spawnOptions.id, spawnOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, spawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(spawnOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, instanceSpawnOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = instanceSpawnOptions !== undefined\r\n                    ? instanceSpawnOptions.spawn\r\n                    : undefined;\r\n                const id = instanceSpawnOptions !== undefined\r\n                    ? instanceSpawnOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.spawnOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.spawnOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, instanceSpawnOptions) => fns.getAll(ns, instanceSpawnOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    timerId: undefined,\r\n    isPaused: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    callback: () => { },\r\n    timeoutFn: () => { },\r\n    promise: undefined,\r\n    onDone: () => { },\r\n    onAbort: () => { },\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendPauseTimer(state),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    none: \"none\",\r\n    hiding: \"hiding\"\r\n};\r\nconst filterBySpawnId = (nsItems, spawn) => nsItems.filter(item => item.spawnOptions.spawn === spawn);\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterQueued = (nsItems, ns) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.spawnOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filter = (ns, items, spawn) => {\r\n    const nsItems = items[ns] || [];\r\n    return filterBySpawnId(filterQueued(nsItems), spawn);\r\n};\r\nconst getOptionsByKind = options => {\r\n    const initial = {\r\n        transitionOptions: {},\r\n        instanceOptions: {}\r\n    };\r\n    return Object.keys(options).reduce((acc, key) => {\r\n        const value = options[key];\r\n        const isTransitionKey = transitionOptionKeys[key];\r\n        if (isTransitionKey) {\r\n            acc.transitionOptions[key] = value;\r\n        }\r\n        else {\r\n            acc.instanceOptions[key] = value;\r\n        }\r\n        return acc;\r\n    }, initial);\r\n};\r\nconst createInstance = (ns) => (defaultSpawnOptions) => (defaultTransitionOptions) => (options, instanceSpawnOptions) => {\r\n    return new Promise((resolve) => {\r\n        const spawnOptions = {\r\n            ...defaultSpawnOptions,\r\n            ...instanceSpawnOptions,\r\n        };\r\n        const id = createId(spawnOptions, ns);\r\n        const { transitionOptions: instanceTransitionOptions, instanceOptions } = getOptionsByKind(options);\r\n        const transitionOptions = {\r\n            ...defaultTransitionOptions,\r\n            ...instanceTransitionOptions,\r\n        };\r\n        transitionOptions.didShow = (id) => {\r\n            if (options.didShow) {\r\n                options.didShow(id);\r\n            }\r\n            return resolve(id);\r\n        };\r\n        transitionOptions.didHide = (id) => {\r\n            if (options.didHide) {\r\n                options.didHide(id);\r\n            }\r\n            return resolve(id);\r\n        };\r\n        const uid = getUid().toString();\r\n        const item = {\r\n            spawnOptions,\r\n            transitionOptions,\r\n            instanceTransitionOptions,\r\n            instanceOptions,\r\n            id,\r\n            timer: transitionOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: uid,\r\n            transitionState: transitionStates.none,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, spawnOptions);\r\n        if (maybeExistingItem.just && !spawnOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve instanceTransitionOptions\r\n            const instanceTransitionOptions = existingItem.instanceTransitionOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                instanceTransitionOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n            // While this is a replace action, mimic a show\r\n            transitionOptions.didShow(spawnOptions.id);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst getMaybeItem = (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    return selectors.find(ns, spawnOptions);\r\n};\r\nconst performOnItem = fn => ns => defaultSpawnOptions => (instanceSpawnOptions, fnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, fnOptions);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        item.transitionState = transitionStates.hiding;\r\n        return hideItem(ns, item);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve();\r\n});\r\nconst resume = performOnItem((ns, item, fnOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(fnOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve();\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst isDisplayed = (ns) => (defaultSpawnOptions) => (instanceSpawnOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultSpawnOptions)(instanceSpawnOptions);\r\n    return !!maybeItem.just;\r\n};\r\nconst resetAll = (ns) => () => {\r\n    selectors.getAll(ns).forEach((item) => item.timer && item.timer.actions.abort());\r\n    actions.removeAll(ns);\r\n    return Promise.resolve();\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    const { transitionOptions } = getOptionsByKind(options);\r\n    return {\r\n        ...item,\r\n        transitionOptions: {\r\n            ...item.transitionOptions,\r\n            ...transitionOptions\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `options` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (defaultSpawnOptions) => (options, instanceSpawnOptions) => {\r\n    const spawnOptions = {\r\n        ...defaultSpawnOptions,\r\n        ...instanceSpawnOptions,\r\n    };\r\n    const allItems = selectors.getAll(ns);\r\n    const regularItems = allItems.filter((item) => !spawnOptions.queued && !item.spawnOptions.queued);\r\n    const queuedItems = allItems.filter((item) => spawnOptions.queued || item.spawnOptions.queued);\r\n    regularItems.forEach((item) => hideItem(ns, getOverridingTransitionOptions(item, options)));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        hideItem(ns, getOverridingTransitionOptions(current, options))\r\n            .then(() => actions.removeAll(ns));\r\n    }\r\n};\r\nconst getCount = (ns) => (instanceSpawnOptions) => selectors.getCount(ns, instanceSpawnOptions);\r\nconst transitionItem = (item, mode) => {\r\n    try {\r\n        return transition({\r\n            ...item.instanceTransitionOptions,\r\n            ...item.transitionOptions,\r\n        }, mode);\r\n    }\r\n    catch (e) {\r\n        throw new Error(`Transition error: ${e}`);\r\n    }\r\n};\r\nconst deferredHideItem = async function (ns, item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(ns, item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\"); // timer.selectors.getResultPromise();\r\n};\r\nconst showItem = async function (ns, item) {\r\n    await (transitionItem(item, MODE.SHOW));\r\n    item.transitionOptions.didShow && await (item.transitionOptions.didShow(item.spawnOptions.id));\r\n    if (item.transitionOptions.timeout && item.timer) {\r\n        await (deferredHideItem(ns, item, item.timer, item.transitionOptions.timeout));\r\n    }\r\n    return item.spawnOptions.id;\r\n};\r\nconst hideItem = async function (ns, item) {\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.transitionOptions.didHide && await (item.transitionOptions.didHide(item.spawnOptions.id));\r\n    actions.remove(ns, item.id);\r\n    return item.spawnOptions.id;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultSpawnOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        queued\r\n    };\r\n    const defaultTransitionOptions = {\r\n        timeout\r\n    };\r\n    return {\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        defaultSpawnOptions,\r\n        show: show(ns)(defaultSpawnOptions)(defaultTransitionOptions),\r\n        hide: hide(ns)(defaultSpawnOptions),\r\n        pause: pause(ns)(defaultSpawnOptions),\r\n        resume: resume(ns)(defaultSpawnOptions),\r\n        isDisplayed: isDisplayed(ns)(defaultSpawnOptions),\r\n        isPaused: isPaused(ns)(defaultSpawnOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultSpawnOptions),\r\n        hideAll: hideAll(ns)(defaultSpawnOptions),\r\n        resetAll: resetAll(ns),\r\n        getCount: getCount(ns),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, filter, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isDisplayed, isPaused, notification, pause, performOnItem, resetAll, resume, selectors, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from \"svelte/store\";\nimport { states, selectors, getTimerProperty, isDisplayed as _isDisplayed } from \"dialogic\";\n\nexport const appState = {\n  ...writable(states),\n  ...selectors\n};\n\nstates.map(state => appState.set({\n  ...state,\n  ...selectors\n}));\n\nexport const getCount = ns => instanceSpawnOptions => derived(\n\tappState,\n\t() => selectors.getCount(ns, instanceSpawnOptions)\n);\n\nexport const isPaused = ns => defaultSpawnOptions => instanceSpawnOptions => derived(\n\tappState,\n\t() => getTimerProperty(\"isPaused\")(ns)(defaultSpawnOptions)(instanceSpawnOptions)\n);\n\nexport const isDisplayed = ns => defaultSpawnOptions => instanceSpawnOptions => derived(\n\tappState,\n\t() => _isDisplayed(ns)(defaultSpawnOptions)(instanceSpawnOptions)\n);\n","import { dialog as _dialog } from \"dialogic\";\nimport { getCount, isPaused, isDisplayed } from \"./store\"; // Access Svelte's store for the count\n\nexport const dialog = {\n  ..._dialog,\n  getCount: instanceSpawnOptions =>\n    getCount(_dialog.ns)(instanceSpawnOptions),\n  isPaused: instanceSpawnOptions =>\n    isPaused(_dialog.ns)(_dialog.defaultSpawnOptions)(instanceSpawnOptions),\n  isDisplayed: instanceSpawnOptions =>\n    isDisplayed(_dialog.ns)(_dialog.defaultSpawnOptions)(instanceSpawnOptions),\n};\n","import { notification as _notification } from \"dialogic\";\nimport { getCount, isPaused, isDisplayed } from \"./store\"; // Access Svelte's store for the count\n\nexport const notification = {\n  ..._notification,\n  getCount: instanceSpawnOptions =>\n    getCount(_notification.ns)(instanceSpawnOptions),\n  isPaused: instanceSpawnOptions =>\n    isPaused(_notification.ns)(_notification.defaultSpawnOptions)(instanceSpawnOptions),\n  isDisplayed: instanceSpawnOptions =>\n    isDisplayed(_notification.ns)(_notification.defaultSpawnOptions)(instanceSpawnOptions),\n};\n","import { showItem, hideItem, selectors } from \"dialogic\";\n\nexport const handleDispatch = (ns) => (event, fn) => {\n  // Update dispatching item:\n  const maybeItem = selectors.find(ns, event.detail.spawnOptions);\n  if (maybeItem.just) {\n    maybeItem.just.instanceTransitionOptions = event.detail.transitionOptions;\n  }\n  // Find item to transition:\n  const maybeTransitioningItem = selectors.find(ns, event.detail.spawnOptions);\n  if (maybeTransitioningItem.just) {\n    fn(ns, maybeTransitioningItem.just);\n  }\n};\n\nexport const onInstanceMounted = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n  \nexport const onShowInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onHideInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, hideItem);\n","<script>\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  // DOM bindings\n  let domElement;\n\n  export let spawnOptions = undefined;\n  export let instanceOptions = undefined;\n  export let transitionOptions = undefined;\n\n  $: R_classNames = [,\n    transitionOptions.className,\n    instanceOptions.className\n\t].join(\" \");\n\n  const dispatchTransition = (name) =>\n    dispatch(name, {\n      spawnOptions,\n      transitionOptions: {\n        className: transitionOptions.className,\n        showClassName: transitionOptions.showClassName,\n        domElements: {\n          domElement\n        },\n      },\n    });\n\n  const show = () => {\n    dispatchTransition(\"show\");\n  };\n\n  const hide = () => {\n    dispatchTransition(\"hide\");\n  };\n\n  onMount(() => {\n    dispatchTransition(\"mount\");\n  });\n\n  $: elementProps = {\n    class: R_classNames,\n  };\n</script>\n\n<div \n  class={R_classNames}\n  bind:this={domElement}\n  {...elementProps}\n>\n  <svelte:component this={transitionOptions.component} {show} {hide} {...instanceOptions} />\n</div>\n\n","\n<script>\n  import { appState } from \"./store\";\n  import { filter } from \"dialogic\";\n  import { onInstanceMounted, onShowInstance, onHideInstance } from \"./instance-events\";\n  import Instance from \"./Instance.svelte\";\n\n  export let spawnOptions;\n  export let ns;\n\n  const nsOnInstanceMounted = onInstanceMounted(ns);\n  const nsOnShowInstance = onShowInstance(ns);\n  const nsOnHideInstance = onHideInstance(ns);\n  \n</script>\n\n{#each filter(ns, $appState.store, spawnOptions.spawn) as { spawnOptions, transitionOptions, instanceOptions, key }, index(key)}\n  <Instance\n    {spawnOptions}\n    {transitionOptions}\n    {instanceOptions}\n    on:mount={nsOnInstanceMounted}\n    on:show={nsOnShowInstance}\n    on:hide={nsOnHideInstance}\n  />\n{/each}\n","<script>\n  import { dialog } from \"./dialog\";\n  import Wrapper from \"./Wrapper.svelte\";\n\n  export let spawn = dialog.defaultSpawn;\n  export let id = dialog.defaultId;\n\n  const spawnOptions = {\n    id,\n    spawn,\n  };\n\n</script>\n\n<Wrapper {spawnOptions} ns={dialog.ns} />\n","<script>\n  import { notification } from \"./notification\";\n  import Wrapper from \"./Wrapper.svelte\";\n  import Instance from \"./Instance.svelte\";\n\n  export let spawn = notification.defaultSpawn;\n  export let id = notification.defaultId;\n\n  const spawnOptions = {\n    id,\n    spawn,\n  };\n\n</script>\n\n<Wrapper {Instance} {spawnOptions} ns={notification.ns} />\n"],"names":["MODE","transitionOptionKeys","className","component","didHide","didShow","hideDelay","hideDuration","hideTimingFunction","showClassName","showDelay","showDuration","showTimingFunction","timeout","transitionClassName","transitions","transition","props","mode","domElement","domElements","Error","Promise","resolve","style","computedStyle","window","getComputedStyle","isShow","transitionProps","getTransitionProps","duration","undefined","styleDurationToMs","transitionDuration","delay","transitionDelay","totalDuration","before","timingFunction","transitionTimingFunction","classList","add","showClassElement","applyTransition","setTimeout","after","remove","durationStr","parsed","parseFloat","indexOf","isNaN","show","hide","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","map","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","forEach","i","warnedHalt","value","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","x","s1","s2","_unregisterChild","child","childIndex","splice","Object","defineProperty","get","p","ready","every","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","spawnOptions","ns","spawn","filter","Boolean","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","fns","getStore","just","nothing","getAll","instanceSpawnOptions","itemsBySpawn","getCount","patch","timerId","isPaused","startTime","callback","timeoutFn","promise","onDone","onAbort","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","nsItems","filterBySpawnId","queuedCount","queueCount","queued","filterQueued","getOptionsByKind","options","keys","reduce","key","transitionOptions","instanceOptions","defaultSpawnOptions","defaultTransitionOptions","instanceTransitionOptions","toString","transitionState","maybeExistingItem","existingItem","replacingItem","getMaybeItem","performOnItem","fnOptions","maybeItem","hideItem","getTimerProperty","timerProp","getRemaining$1","isDisplayed","resetAll","getOverridingTransitionOptions","hideAll","allItems","regularItems","queuedItems","current","then","transitionItem","e","showItem","async","dialogical","defaultId","defaultSpawn","dialog","notification","noop","assign","tar","src","k","run","blank_object","create","run_all","is_function","thing","safe_not_equal","a","b","insert","node","anchor","insertBefore","detach","parentNode","removeChild","empty","data","document","createTextNode","attr","attribute","removeAttribute","setAttribute","set_attributes","attributes","cssText","current_component","set_current_component","onMount","get_current_component","$$","on_mount","createEventDispatcher","type","detail","callbacks","event","createEvent","initCustomEvent","custom_event","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","pop","has","fragment","dirty","before_update","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","mount_component","on_destroy","m","new_on_destroy","destroy_component","detaching","make_dirty","init","instance","create_fragment","not_equal","prop_names","parent_component","bound","context","Map","hydrate","l","element","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","subscriber_queue","writable","subscribers","set","new_value","run_queue","subscribe","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","appState","_isDisplayed","_dialog","_notification","handleDispatch","maybeTransitioningItem","onInstanceMounted","onShowInstance","onHideInstance","R_classNames","elementProps","name","createElement","dispatch","dispatchTransition","class","nsOnInstanceMounted","nsOnShowInstance","nsOnHideInstance","$appState","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","unsub","unsubscribe","Instance"],"mappings":"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"}
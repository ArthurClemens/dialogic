{"version":3,"file":"dialogic-svelte.js","sources":["../../dialogic/dist/dialogic.mjs","../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/store.js","../src/dialog.js","../src/notification.js","../src/instanceEvents.js","../src/Instance.svelte","../src/Wrapper.svelte","../src/Dialogical.svelte","../src/Dialog.svelte","../src/Notification.svelte"],"sourcesContent":["const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(transitionClassNames.showStart, transitionClassNames.showEnd, transitionClassNames.hideStart, transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, styles) => {\r\n    const transitionStyle = styles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        const value = transitionStyle[key].toString();\r\n        domElement.style[key] = value;\r\n        // if (domElement.style[key] !== value) {\r\n        // \tconsole.warn(`Invalid style: ${key}: ${value} (${domElement.style[key]})`);\r\n        // }\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => domElement.style.transitionDuration = \"0ms\";\r\nconst getTransitionStyles = (domElement, styles) => (typeof styles === \"function\"\r\n    ? styles(domElement)\r\n    : styles) || {};\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.styles) {\r\n        const styles = getTransitionStyles(domElement, props.styles);\r\n        applyTransitionStyles(domElement, \"default\", styles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, styles);\r\n    }\r\n    if (props.className) {\r\n        const transitionClassNames = {\r\n            showStart: `${props.className}-show-start`,\r\n            showEnd: `${props.className}-show-end`,\r\n            hideStart: `${props.className}-hide-start`,\r\n            hideEnd: `${props.className}-hide-end`\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames && domElement.classList.add(transitionClassNames[step]);\r\n    }\r\n    // reflow\r\n    domElement.scrollTop;\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n    const delayValue = delayStyleValue !== undefined\r\n        ? styleDurationToMs(delayStyleValue)\r\n        : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: \"showEnd\"\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined\r\n    },\r\n    hideStart: {\r\n        nextStep: \"hideEnd\"\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    let currentStep = mode === MODE.SHOW\r\n        ? \"showStart\"\r\n        : \"hideStart\";\r\n    return new Promise(resolve => {\r\n        applyStylesForState(domElement, props, currentStep, currentStep === \"showStart\");\r\n        setTimeout(() => {\r\n            const nextStep = steps[currentStep].nextStep;\r\n            if (nextStep) {\r\n                currentStep = nextStep;\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // addEventListener sometimes hangs this function because it never finishes\r\n                // Using setTimeout instead of addEventListener gives more consistent results\r\n                const duration = getDuration(domElement);\r\n                setTimeout(resolve, duration);\r\n            }\r\n        }, 0);\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(identityOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = identityOptions !== undefined\r\n                    ? identityOptions.spawn\r\n                    : undefined;\r\n                const id = identityOptions !== undefined\r\n                    ? identityOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    callback: () => { },\r\n    isPaused: undefined,\r\n    onAbort: () => { },\r\n    onDone: () => { },\r\n    promise: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    timeoutFn: () => { },\r\n    timerId: undefined,\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(!state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    default: 0,\r\n    displaying: 1,\r\n    hiding: 2,\r\n};\r\nconst performOnItem = fn => ns => defaultDialogicOptions => (options) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(options);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, options);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultDialogicOptions, identityOptions));\r\nconst filterBySpawnOption = (identityOptions) => (nsItems) => (nsItems.filter(item => (item.identityOptions.spawn === identityOptions.spawn)));\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.dialogicOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, identityOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    if (nsItems.length == 0) {\r\n        return [];\r\n    }\r\n    return pipe(filterFirstInQueue, filterBySpawnOption(identityOptions))(nsItems);\r\n};\r\nconst getPassThroughOptions = options => {\r\n    const copy = {\r\n        ...options,\r\n    };\r\n    delete copy.dialogic;\r\n    return copy;\r\n};\r\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\r\n    id: identityOptions.id || defaultDialogicOptions.id,\r\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\r\n});\r\nconst createInstance = (ns) => (defaultDialogicOptions) => (options = {}) => {\r\n    return new Promise(resolve => {\r\n        const identityOptions = {\r\n            id: options.dialogic ? options.dialogic.id : undefined,\r\n            spawn: options.dialogic ? options.dialogic.spawn : undefined\r\n        };\r\n        const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions, identityOptions);\r\n        const dialogicOptions = {\r\n            ...defaultDialogicOptions,\r\n            ...options.dialogic\r\n        };\r\n        const passThroughOptions = getPassThroughOptions(options);\r\n        const callbacks = {\r\n            didShow: (item) => {\r\n                if (dialogicOptions.didShow) {\r\n                    dialogicOptions.didShow(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n            didHide: (item) => {\r\n                if (dialogicOptions.didHide) {\r\n                    dialogicOptions.didHide(item);\r\n                }\r\n                return resolve(item);\r\n            }\r\n        };\r\n        const item = {\r\n            ns,\r\n            identityOptions: mergedIdentityOptions,\r\n            dialogicOptions,\r\n            callbacks,\r\n            passThroughOptions,\r\n            id: createId(mergedIdentityOptions, ns),\r\n            timer: dialogicOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: getUid().toString(),\r\n            transitionState: transitionStates.default,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, mergedIdentityOptions);\r\n        if (maybeExistingItem.just && dialogicOptions.toggle) {\r\n            const hideResult = hide(ns)(defaultDialogicOptions)(identityOptions);\r\n            return resolve(hideResult);\r\n        }\r\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve dialogicOptions\r\n            const dialogicOptions = existingItem.dialogicOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                transitionState: existingItem.transitionState,\r\n                dialogicOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        return hideItem(item);\r\n    }\r\n    else {\r\n        return Promise.resolve(item);\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst resume = performOnItem((ns, item, commandOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(commandOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst exists = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    return !!maybeItem.just;\r\n};\r\nconst resetAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    const validItems = dialogicOptions\r\n        ? filterBySpawnOption({\r\n            ...defaultDialogicOptions,\r\n            ...dialogicOptions,\r\n        })(allItems)\r\n        : allItems;\r\n    const items = [];\r\n    validItems.forEach((item) => {\r\n        item.timer && item.timer.actions.abort();\r\n        items.push(item);\r\n    });\r\n    if (dialogicOptions) {\r\n        validItems.forEach((item) => {\r\n            actions.remove(ns, item.id);\r\n        });\r\n    }\r\n    else {\r\n        actions.removeAll(ns);\r\n    }\r\n    return Promise.resolve(items);\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    return {\r\n        ...item,\r\n        dialogicOptions: {\r\n            ...item.dialogicOptions,\r\n            ...options\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `dialogicOptions` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    const validItems = dialogicOptions\r\n        ? filterBySpawnOption({\r\n            ...defaultDialogicOptions,\r\n            ...dialogicOptions,\r\n        })(allItems)\r\n        : allItems;\r\n    const options = dialogicOptions || {};\r\n    const regularItems = validItems.filter((item) => !options.queued && !item.dialogicOptions.queued);\r\n    const queuedItems = validItems.filter((item) => options.queued || item.dialogicOptions.queued);\r\n    const items = [];\r\n    regularItems.forEach((item) => items.push(hideItem(getOverridingTransitionOptions(item, options))));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        items.push(hideItem(getOverridingTransitionOptions(current, options)));\r\n    }\r\n    return Promise.all(items);\r\n};\r\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\r\nconst transitionItem = (item, mode) => {\r\n    return transition(item.dialogicOptions, mode);\r\n};\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\");\r\n};\r\nconst showItem = async function (item) {\r\n    if (item.transitionState !== transitionStates.displaying) {\r\n        item.transitionState = transitionStates.displaying;\r\n        await (transitionItem(item, MODE.SHOW));\r\n    }\r\n    item.callbacks.didShow && await (item.callbacks.didShow(item));\r\n    if (item.dialogicOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.dialogicOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    item.transitionState = transitionStates.hiding;\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.callbacks.didHide && await (item.callbacks.didHide(item));\r\n    const copy = {\r\n        ...item\r\n    };\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.dialogicOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultDialogicOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued }),\r\n        ...(timeout !== undefined && { timeout }),\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultDialogicOptions,\r\n        // Commands\r\n        show: show(ns)(defaultDialogicOptions),\r\n        hide: hide(ns)(defaultDialogicOptions),\r\n        hideAll: hideAll(ns)(defaultDialogicOptions),\r\n        resetAll: resetAll(ns)(defaultDialogicOptions),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultDialogicOptions),\r\n        resume: resume(ns)(defaultDialogicOptions),\r\n        // State\r\n        exists: exists(ns)(defaultDialogicOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultDialogicOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultDialogicOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, performOnItem, resetAll, resume, selectors, setDomElement, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from \"svelte/store\";\nimport { states, selectors, getTimerProperty, exists as _isDisplayed } from \"dialogic\";\n\nexport const appState = {\n  ...writable(states),\n  ...selectors\n};\n\nstates.map(state => appState.set({\n  ...state,\n  ...selectors\n}));\n\nexport const getCount = ns => identityOptions => derived(\n\tappState,\n\t() => selectors.getCount(ns, identityOptions)\n);\n\nexport const isPaused = ns => defaultDialogicOptions => identityOptions => derived(\n\tappState,\n\t() => getTimerProperty(\"isPaused\")(ns)(defaultDialogicOptions)(identityOptions)\n);\n\nexport const exists = ns => defaultDialogicOptions => identityOptions => derived(\n\tappState,\n\t() => _isDisplayed(ns)(defaultDialogicOptions)(identityOptions)\n);\n","import { dialog as _dialog } from \"dialogic\";\nimport { getCount, isPaused, exists } from \"./store\"; // Access Svelte's store\n\nexport const dialog = {\n  ..._dialog,\n  getCount: identityOptions =>\n    getCount(_dialog.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n};\n","import { notification as _notification } from \"dialogic\";\nimport { getCount, isPaused, exists } from \"./store\"; // Access Svelte's store\n\nexport const notification = {\n  ..._notification,\n  getCount: identityOptions =>\n    getCount(_notification.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_notification.ns)(_notification.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_notification.ns)(_notification.defaultDialogicOptions)(identityOptions),\n};\n","import { showItem, hideItem, selectors, setDomElement } from \"dialogic\";\n\nexport const handleDispatch = (ns) => (event, fn) => {\n  // Update dispatching item:\n  const maybeItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  // Find item to transition:\n  const maybeTransitioningItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\n\nexport const onInstanceMounted = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n  \nexport const onShowInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onHideInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, hideItem);\n","<script>\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  // DOM bindings\n  let domElement;\n\n  export let identityOptions = undefined;\n  export let passThroughOptions = undefined;\n  export let dialogicOptions = undefined;\n\n  const className = dialogicOptions.className;\n\n  const dispatchTransition = (name) =>\n    dispatch(name, {\n      identityOptions,\n      domElement\n    });\n\n  const show = () => {\n    dispatchTransition(\"show\");\n  };\n\n  const hide = () => {\n    dispatchTransition(\"hide\");\n  };\n\n  onMount(() => {\n    dispatchTransition(\"mount\");\n  });\n\n</script>\n\n<div \n  class={className}\n  bind:this={domElement}\n>\n  <svelte:component this={dialogicOptions.component} {show} {hide} {...passThroughOptions} />\n</div>\n\n","\n<script>\n  import { appState } from \"./store\";\n  import { filterCandidates } from \"dialogic\";\n  import { onInstanceMounted, onShowInstance, onHideInstance } from \"./instanceEvents\";\n  import Instance from \"./Instance.svelte\";\n\n  export let identityOptions;\n  export let ns;\n\n  const nsOnInstanceMounted = onInstanceMounted(ns);\n  const nsOnShowInstance = onShowInstance(ns);\n  const nsOnHideInstance = onHideInstance(ns);\n  \n</script>\n\n{#each filterCandidates(ns, $appState.store, identityOptions) as { identityOptions, dialogicOptions, passThroughOptions, key }, index(key)}\n  <Instance\n    {identityOptions}\n    {dialogicOptions}\n    {passThroughOptions}\n    on:mount={nsOnInstanceMounted}\n    on:show={nsOnShowInstance}\n    on:hide={nsOnHideInstance}\n  />\n{/each}\n","<script>\n  import { onMount as svelteOnMount } from \"svelte\";\n  import Wrapper from \"./Wrapper.svelte\";\n\n  export let type;\n  export let ns = type.ns;\n  export let spawn = undefined;\n  export let id = undefined;\n  export let onMount = undefined;\n\n  const identityOptions = {\n    id: id || type.defaultId,\n    spawn: spawn || type.defaultSpawn,\n  };\n\n  svelteOnMount(() => {\n    if (typeof onMount === \"function\") {\n      onMount();\n    }\n  })\n</script>\n\n<Wrapper {identityOptions} {ns} />\n","<script>\n  import { dialog } from \"./dialog\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={dialog} />\n","<script>\n  import { notification } from \"./notification\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={notification} />\n"],"names":["getStyleValue","domElement","prop","window","getComputedStyle","defaultView","document","style","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","Object","keys","forEach","key","value","toString","applyStylesForState","props","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","className","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","add","scrollTop","steps","nextStep","undefined","transition","mode","Promise","resolve","currentStep","setTimeout","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","indexOf","isNaN","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","map","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","i","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","x","s1","s2","_unregisterChild","child","childIndex","splice","defineProperty","get","p","ready","every","Error","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","filter","Boolean","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","fns","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","callback","isPaused","onAbort","onDone","promise","startTime","timeoutFn","timerId","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","performOnItem","defaultDialogicOptions","options","maybeItem","getMaybeItem","getMergedIdentityOptions","filterBySpawnOption","nsItems","filterFirstInQueue","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","reduce","y","f","pipe","show","dialogic","mergedIdentityOptions","passThroughOptions","copy","getPassThroughOptions","callbacks","didShow","didHide","timeout","transitionState","maybeExistingItem","toggle","hideResult","hide","existingItem","replacingItem","hideItem","commandOptions","getTimerProperty","timerProp","getRemaining$1","exists","resetAll","allItems","validItems","getOverridingTransitionOptions","hideAll","regularItems","queuedItems","current","all","transitionItem","showItem","async","dialogical","defaultId","defaultSpawn","dialog","notification","noop","assign","tar","src","k","run","blank_object","create","run_all","is_function","thing","safe_not_equal","a","b","exclude_internal_props","result","insert","node","anchor","insertBefore","detach","parentNode","removeChild","empty","data","createTextNode","current_component","set_current_component","component","onMount","get_current_component","$$","on_mount","createEventDispatcher","type","detail","event","e","createEvent","initCustomEvent","custom_event","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","pop","has","fragment","dirty","before_update","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","mount_component","on_destroy","m","new_on_destroy","destroy_component","detaching","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","bound","context","Map","hydrate","l","element","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","subscriber_queue","writable","subscribers","set","new_value","run_queue","subscribe","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","appState","_isDisplayed","_dialog","_notification","handleDispatch","setDomElement","maybeTransitioningItem","onInstanceMounted","onShowInstance","onHideInstance","name","attribute","createElement","removeAttribute","setAttribute","dispatch","dispatchTransition","nsOnInstanceMounted","nsOnShowInstance","nsOnHideInstance","$appState","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","unsub","unsubscribe","svelteOnMount","$$props"],"mappings":"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"}
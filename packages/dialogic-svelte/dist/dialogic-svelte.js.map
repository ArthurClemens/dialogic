{"version":3,"file":"dialogic-svelte.js","sources":["../../dialogic/dist/dialogic.mjs","../../../node_modules/svelte/internal/index.mjs","../../../node_modules/svelte/store/index.mjs","../src/store.js","../src/dialog.js","../src/notification.js","../src/instanceEvents.js","../src/Instance.svelte","../src/Wrapper.svelte","../src/Dialogical.svelte","../src/Dialog.svelte","../src/Notification.svelte"],"sourcesContent":["const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(...transitionClassNames.showStart, ...transitionClassNames.showEnd, ...transitionClassNames.hideStart, ...transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, styles) => {\r\n    const transitionStyle = styles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        const value = transitionStyle[key].toString();\r\n        domElement.style[key] = value;\r\n        // if (domElement.style[key] !== value) {\r\n        // \tconsole.warn(`Invalid style: ${key}: ${value} (${domElement.style[key]})`);\r\n        // }\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => domElement.style.transitionDuration = \"0ms\";\r\nconst getTransitionStyles = (domElement, styles) => (typeof styles === \"function\"\r\n    ? styles(domElement)\r\n    : styles) || {};\r\nconst createClassList = (className, step) => className.split(/ /).map((n) => `${n}-${step}`);\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.styles) {\r\n        const styles = getTransitionStyles(domElement, props.styles);\r\n        applyTransitionStyles(domElement, \"default\", styles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, styles);\r\n    }\r\n    if (props.className) {\r\n        const transitionClassNames = {\r\n            showStart: createClassList(props.className, \"show-start\"),\r\n            showEnd: createClassList(props.className, \"show-end\"),\r\n            hideStart: createClassList(props.className, \"hide-start\"),\r\n            hideEnd: createClassList(props.className, \"hide-end\"),\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames && domElement.classList.add(...transitionClassNames[step]);\r\n    }\r\n    // reflow\r\n    domElement.scrollTop;\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n    const delayValue = delayStyleValue !== undefined\r\n        ? styleDurationToMs(delayStyleValue)\r\n        : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: \"showEnd\"\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined\r\n    },\r\n    hideStart: {\r\n        nextStep: \"hideEnd\"\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    let currentStep = mode === MODE.SHOW\r\n        ? \"showStart\"\r\n        : \"hideStart\";\r\n    return new Promise(resolve => {\r\n        applyStylesForState(domElement, props, currentStep, currentStep === \"showStart\");\r\n        setTimeout(() => {\r\n            const nextStep = steps[currentStep].nextStep;\r\n            if (nextStep) {\r\n                currentStep = nextStep;\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // addEventListener sometimes hangs this function because it never finishes\r\n                // Using setTimeout instead of addEventListener gives more consistent results\r\n                const duration = getDuration(domElement);\r\n                setTimeout(resolve, duration);\r\n            }\r\n        }, 0);\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(identityOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = identityOptions !== undefined\r\n                    ? identityOptions.spawn\r\n                    : undefined;\r\n                const id = identityOptions !== undefined\r\n                    ? identityOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    callback: () => { },\r\n    isPaused: false,\r\n    onAbort: () => { },\r\n    onDone: () => { },\r\n    promise: undefined,\r\n    remaining: 0,\r\n    startTime: undefined,\r\n    timeoutFn: () => { },\r\n    timerId: undefined,\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => resolve();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === 0\r\n    ? 0\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(!state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    default: 0,\r\n    displaying: 1,\r\n    hiding: 2,\r\n};\r\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultDialogicOptions, identityOptions));\r\nconst filterBySpawn = (identityOptions) => (items) => identityOptions.spawn !== undefined\r\n    ? items.filter(item => (item.identityOptions.spawn === identityOptions.spawn))\r\n    : items;\r\nconst filterById = (identityOptions) => (items) => identityOptions.id !== undefined\r\n    ? items.filter(item => (item.identityOptions.id === identityOptions.id))\r\n    : items;\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.dialogicOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, identityOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    if (nsItems.length == 0) {\r\n        return [];\r\n    }\r\n    return pipe(filterBySpawn(identityOptions), filterFirstInQueue)(nsItems);\r\n};\r\nconst getPassThroughOptions = options => {\r\n    const copy = {\r\n        ...options,\r\n    };\r\n    delete copy.dialogic;\r\n    return copy;\r\n};\r\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\r\n    id: identityOptions.id || defaultDialogicOptions.id,\r\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\r\n});\r\nconst handleOptions = (defaultDialogicOptions, options = {}) => {\r\n    const identityOptions = {\r\n        id: options.dialogic ? options.dialogic.id : undefined,\r\n        spawn: options.dialogic ? options.dialogic.spawn : undefined\r\n    };\r\n    const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions || {}, identityOptions);\r\n    const dialogicOptions = {\r\n        ...defaultDialogicOptions,\r\n        ...options.dialogic\r\n    };\r\n    const passThroughOptions = getPassThroughOptions(options);\r\n    return {\r\n        identityOptions: mergedIdentityOptions,\r\n        dialogicOptions,\r\n        passThroughOptions,\r\n    };\r\n};\r\nconst createInstance = (ns) => (defaultDialogicOptions) => (options = {}) => {\r\n    const { identityOptions, dialogicOptions, passThroughOptions } = handleOptions(defaultDialogicOptions, options);\r\n    return new Promise(resolve => {\r\n        const callbacks = {\r\n            didShow: (item) => {\r\n                if (dialogicOptions.didShow) {\r\n                    dialogicOptions.didShow(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n            didHide: (item) => {\r\n                if (dialogicOptions.didHide) {\r\n                    dialogicOptions.didHide(item);\r\n                }\r\n                return resolve(item);\r\n            }\r\n        };\r\n        const item = {\r\n            ns,\r\n            identityOptions,\r\n            dialogicOptions,\r\n            callbacks,\r\n            passThroughOptions,\r\n            id: createId(identityOptions, ns),\r\n            timer: dialogicOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: getUid().toString(),\r\n            transitionState: transitionStates.default,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, identityOptions);\r\n        if (maybeExistingItem.just && dialogicOptions.toggle) {\r\n            const hideResult = hide(ns)(defaultDialogicOptions)(options);\r\n            return resolve(hideResult);\r\n        }\r\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve dialogicOptions\r\n            const dialogicOptions = existingItem.dialogicOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                transitionState: existingItem.transitionState,\r\n                dialogicOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst hide = (ns) => (defaultDialogicOptions) => (options) => {\r\n    const { identityOptions, dialogicOptions, passThroughOptions } = handleOptions(defaultDialogicOptions, options);\r\n    const maybeExistingItem = selectors.find(ns, identityOptions);\r\n    if (maybeExistingItem.just) {\r\n        const existingItem = maybeExistingItem.just;\r\n        const item = {\r\n            ...existingItem,\r\n            dialogicOptions: {\r\n                ...existingItem.dialogicOptions,\r\n                ...dialogicOptions,\r\n            },\r\n            passThroughOptions: {\r\n                ...existingItem.passThroughOptions,\r\n                passThroughOptions\r\n            }\r\n        };\r\n        actions.replace(ns, existingItem.id, item);\r\n        if (item.transitionState !== transitionStates.hiding) {\r\n            return hideItem(item);\r\n        }\r\n        else {\r\n            return Promise.resolve(item);\r\n        }\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst pause = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const items = getValidItems(ns, identityOptions)\r\n        .filter(item => !!item.timer);\r\n    items.forEach((item) => item.timer && item.timer.actions.pause());\r\n    return Promise.all(items);\r\n};\r\nconst resume = (ns) => (defaultDialogicOptions) => (commandOptions) => {\r\n    const options = commandOptions || {};\r\n    const identityOptions = {\r\n        id: options.id,\r\n        spawn: options.spawn\r\n    };\r\n    const items = getValidItems(ns, identityOptions)\r\n        .filter(item => !!item.timer);\r\n    items.forEach((item) => item.timer && item.timer.actions.resume(options.minimumDuration));\r\n    return Promise.all(items);\r\n};\r\nconst getTimerProperty = (timerProp, defaultValue) => (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\", false);\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\", 0);\r\nconst exists = (ns) => (defaultDialogicOptions) => (identityOptions) => !!getValidItems(ns, identityOptions).length;\r\nconst getValidItems = (ns, identityOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    let validItems;\r\n    if (identityOptions) {\r\n        validItems = pipe(filterBySpawn(identityOptions), filterById(identityOptions))(allItems);\r\n    }\r\n    else {\r\n        validItems = allItems;\r\n    }\r\n    return validItems;\r\n};\r\nconst resetAll = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const validItems = getValidItems(ns, identityOptions);\r\n    const items = [];\r\n    validItems.forEach((item) => {\r\n        item.timer && item.timer.actions.abort();\r\n        items.push(item);\r\n    });\r\n    if (identityOptions) {\r\n        items.forEach((item) => {\r\n            actions.remove(ns, item.id);\r\n        });\r\n    }\r\n    else {\r\n        actions.removeAll(ns);\r\n    }\r\n    return Promise.resolve(items);\r\n};\r\nconst getOverridingTransitionOptions = (item, dialogicOptions) => {\r\n    return {\r\n        ...item,\r\n        dialogicOptions: {\r\n            ...item.dialogicOptions,\r\n            ...dialogicOptions\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * Optional `dialogicOptions` may be passed with specific transition options. This comes in handy when all items should hide in the same way.\r\n */\r\nconst hideAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\r\n    const options = dialogicOptions || {};\r\n    const identityOptions = {\r\n        id: options.id,\r\n        spawn: options.spawn\r\n    };\r\n    const validItems = getValidItems(ns, identityOptions);\r\n    const regularItems = validItems.filter((item) => !options.queued && !item.dialogicOptions.queued);\r\n    const queuedItems = validItems.filter((item) => options.queued || item.dialogicOptions.queued);\r\n    const items = [];\r\n    regularItems.forEach((item) => items.push(hideItem(getOverridingTransitionOptions(item, options))));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        items.push(hideItem(getOverridingTransitionOptions(current, options)));\r\n    }\r\n    return Promise.all(items);\r\n};\r\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\r\nconst transitionItem = (item, mode) => transition(item.dialogicOptions, mode);\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\", undefined);\r\n};\r\nconst showItem = async function (item) {\r\n    if (item.transitionState !== transitionStates.displaying) {\r\n        item.transitionState = transitionStates.displaying;\r\n        await (transitionItem(item, MODE.SHOW));\r\n    }\r\n    item.callbacks.didShow && await (item.callbacks.didShow(item));\r\n    if (item.dialogicOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.dialogicOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    item.transitionState = transitionStates.hiding;\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.callbacks.didHide && await (item.callbacks.didHide(item));\r\n    const copy = {\r\n        ...item\r\n    };\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.dialogicOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultDialogicOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued }),\r\n        ...(timeout !== undefined && { timeout }),\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultDialogicOptions,\r\n        // Commands\r\n        show: show(ns)(defaultDialogicOptions),\r\n        hide: hide(ns)(defaultDialogicOptions),\r\n        hideAll: hideAll(ns)(defaultDialogicOptions),\r\n        resetAll: resetAll(ns)(defaultDialogicOptions),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultDialogicOptions),\r\n        resume: resume(ns)(defaultDialogicOptions),\r\n        // State\r\n        exists: exists(ns)(defaultDialogicOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultDialogicOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultDialogicOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, resetAll, resume, selectors, setDomElement, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from \"svelte/store\";\nimport { states, selectors, isPaused as _isPaused, exists as _isDisplayed } from \"dialogic\";\n\nexport const appState = {\n  ...writable(states),\n  ...selectors\n};\n\nstates.map(state => appState.set({\n  ...state,\n  ...selectors\n}));\n\nexport const getCount = ns => identityOptions => derived(\n\tappState,\n\t() => selectors.getCount(ns, identityOptions)\n);\n\nexport const isPaused = ns => defaultDialogicOptions => identityOptions => derived(\n\tappState,\n\t() => (\n\t\tconsole.log(\"store isPaused\", \"ns\", ns, \"defaultDialogicOptions\", defaultDialogicOptions, \"identityOptions\", identityOptions, \"query\", _isPaused(ns)(defaultDialogicOptions)(identityOptions)),\n\t\t_isPaused(ns)(defaultDialogicOptions)(identityOptions)\n\t)\n);\n\nexport const exists = ns => defaultDialogicOptions => identityOptions => derived(\n\tappState,\n\t() => _isDisplayed(ns)(defaultDialogicOptions)(identityOptions)\n);\n","import { dialog as _dialog } from \"dialogic\";\nimport { getCount, isPaused, exists } from \"./store\"; // Access Svelte's store\n\nexport const dialog = {\n  ..._dialog,\n  getCount: identityOptions =>\n    getCount(_dialog.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n};\n","import { notification as _notification } from \"dialogic\";\nimport { getCount, isPaused, exists } from \"./store\"; // Access Svelte's store\n\nexport const notification = {\n  ..._notification,\n  getCount: identityOptions =>\n    getCount(_notification.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_notification.ns)(_notification.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_notification.ns)(_notification.defaultDialogicOptions)(identityOptions),\n};\n","import { showItem, hideItem, selectors, setDomElement } from \"dialogic\";\n\nexport const handleDispatch = (ns) => (event, fn) => {\n  // Update dispatching item:\n  const maybeItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  // Find item to transition:\n  const maybeTransitioningItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\n\nexport const onInstanceMounted = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n  \nexport const onShowInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onHideInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, hideItem);\n","<script>\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  // DOM bindings\n  let domElement;\n\n  export let identityOptions;\n  export let passThroughOptions;\n  export let dialogicOptions;\n\n  const className = dialogicOptions ? dialogicOptions.className : '';\n\n  const dispatchTransition = (name) =>\n    dispatch(name, {\n      identityOptions,\n      domElement\n    });\n\n  const show = () => {\n    dispatchTransition(\"show\");\n  };\n\n  const hide = () => {\n    dispatchTransition(\"hide\");\n  };\n\n  onMount(() => {\n    dispatchTransition(\"mount\");\n  });\n\n</script>\n\n<div \n  class={className}\n  bind:this={domElement}\n>\n  <svelte:component this={dialogicOptions.component} {show} {hide} {...passThroughOptions} />\n</div>\n\n","\n<script>\n  import { appState } from \"./store\";\n  import { filterCandidates } from \"dialogic\";\n  import { onInstanceMounted, onShowInstance, onHideInstance } from \"./instanceEvents\";\n  import Instance from \"./Instance.svelte\";\n\n  export let identityOptions;\n  export let ns;\n\n  const nsOnInstanceMounted = onInstanceMounted(ns);\n  const nsOnShowInstance = onShowInstance(ns);\n  const nsOnHideInstance = onHideInstance(ns);\n  \n</script>\n\n{#each filterCandidates(ns, $appState.store, identityOptions) as { identityOptions, dialogicOptions, passThroughOptions, key }, index(key)}\n  <Instance\n    {identityOptions}\n    {dialogicOptions}\n    {passThroughOptions}\n    on:mount={nsOnInstanceMounted}\n    on:show={nsOnShowInstance}\n    on:hide={nsOnHideInstance}\n  />\n{/each}\n","<script>\n  import { onMount as svelteOnMount } from \"svelte\";\n  import Wrapper from \"./Wrapper.svelte\";\n\n  export let type;\n  export let ns = type.ns;\n  export let spawn = undefined;\n  export let id = undefined;\n  export let onMount = undefined;\n\n  const identityOptions = {\n    id: id || type.defaultId,\n    spawn: spawn || type.defaultSpawn,\n  };\n\n  svelteOnMount(() => {\n    if (typeof onMount === \"function\") {\n      onMount();\n    }\n  })\n</script>\n\n<Wrapper {identityOptions} {ns} />\n","<script>\n  import { dialog } from \"./dialog\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={dialog} />\n","<script>\n  import { notification } from \"./notification\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={notification} />\n"],"names":["pipe","fns","x","filter","Boolean","reduce","y","f","getStyleValue","domElement","prop","window","getComputedStyle","defaultView","document","style","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","Object","keys","forEach","key","value","toString","createClassList","className","split","map","n","applyStylesForState","props","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","add","scrollTop","steps","nextStep","undefined","transition","mode","Promise","resolve","currentStep","setTimeout","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","indexOf","isNaN","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","i","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","s1","s2","_unregisterChild","child","childIndex","splice","defineProperty","get","p","ready","every","Error","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","callback","isPaused","onAbort","onDone","promise","startTime","timeoutFn","timerId","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","filterBySpawn","filterFirstInQueue","nsItems","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","getMergedIdentityOptions","defaultDialogicOptions","handleOptions","options","dialogic","passThroughOptions","copy","getPassThroughOptions","show","callbacks","didShow","didHide","timeout","transitionState","maybeExistingItem","toggle","hideResult","hide","existingItem","replacingItem","hideItem","getValidItems","all","commandOptions","getTimerProperty","timerProp","defaultValue","maybeItem","getMaybeItem","getRemaining$1","exists","allItems","validItems","filterById","resetAll","getOverridingTransitionOptions","hideAll","regularItems","queuedItems","current","transitionItem","showItem","async","dialogical","defaultId","defaultSpawn","dialog","notification","noop","assign","tar","src","k","run","blank_object","create","run_all","is_function","thing","safe_not_equal","a","b","exclude_internal_props","result","insert","node","anchor","insertBefore","detach","parentNode","removeChild","empty","data","createTextNode","current_component","set_current_component","component","onMount","get_current_component","$$","on_mount","createEventDispatcher","type","detail","event","e","createEvent","initCustomEvent","custom_event","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","pop","has","fragment","dirty","before_update","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","get_spread_object","spread_props","mount_component","on_destroy","m","new_on_destroy","destroy_component","detaching","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","bound","context","Map","ret","hydrate","l","element","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","subscriber_queue","writable","subscribers","set","new_value","run_queue","subscribe","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","appState","_isPaused","_isDisplayed","_dialog","_notification","handleDispatch","setDomElement","maybeTransitioningItem","onInstanceMounted","onShowInstance","onHideInstance","name","attribute","createElement","removeAttribute","setAttribute","dispatch","dispatchTransition","nsOnInstanceMounted","nsOnShowInstance","nsOnHideInstance","$appState","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","unsub","unsubscribe","svelteOnMount","$$props"],"mappings":"gNAAA,MAAMA,EAAO,IAAIC,IAASC,GAAMD,EAAIE,OAAOC,SAASC,OAAO,CAACC,EAAGC,IAAMA,EAAED,GAAIJ,GACrEM,EAAgB,EAAGC,WAAAA,EAAYC,KAAAA,MACjC,GAAIC,OAAOC,iBAAkB,CACzB,MAAMC,EAAcC,SAASD,YAC7B,GAAIA,EAAa,CACb,MAAME,EAAQF,EAAYD,iBAAiBH,GAC3C,GAAIM,EACA,OAAOA,EAAMC,iBAAiBN,MAOxCO,EACI,OADJA,EAEI,OAGJC,EAAwB,CAACT,EAAYU,EAAMC,KAC7C,MAAMC,EAAkBD,EAAOD,IAAS,GACxCG,OAAOC,KAAKF,GAAiBG,QAASC,IAClC,MAAMC,EAAQL,EAAgBI,GAAKE,WACnClB,EAAWM,MAAMU,GAAOC,KAU1BE,EAAkB,CAACC,EAAWV,IAASU,EAAUC,MAAM,KAAKC,IAAKC,MAASA,KAAKb,KAC/Ec,EAAsB,CAACxB,EAAYyB,EAAOf,EAAMgB,KAClD,GAAID,EAAMd,OAAQ,CACd,MAAMA,EANc,EAACX,EAAYW,KAA8B,mBAAXA,EACtDA,EAAOX,GACPW,IAAW,GAIMgB,CAAoB3B,EAAYyB,EAAMd,QACrDF,EAAsBT,EAAY,UAAWW,GAC7Ce,GAT+B,CAAC1B,GAAeA,EAAWM,MAAMsB,mBAAqB,MAStEC,CAA+B7B,GAC9CS,EAAsBT,EAAYU,EAAMC,GAE5C,GAAIc,EAAML,UAAW,CACjB,MAAMU,EAAuB,CACzBC,UAAWZ,EAAgBM,EAAML,UAAW,cAC5CY,QAASb,EAAgBM,EAAML,UAAW,YAC1Ca,UAAWd,EAAgBM,EAAML,UAAW,cAC5Cc,QAASf,EAAgBM,EAAML,UAAW,aA5BnB,EAACpB,EAAY8B,IAAyB9B,EAAWmC,UAAUC,UAAUN,EAAqBC,aAAcD,EAAqBE,WAAYF,EAAqBG,aAAcH,EAAqBI,SA8B5NG,CAA2BrC,EAAY8B,GACvCA,GAAwB9B,EAAWmC,UAAUG,OAAOR,EAAqBpB,IAG7EV,EAAWuC,WAaTC,EAAQ,CACVT,UAAW,CACPU,SAAU,WAEdT,QAAS,CACLS,cAAUC,GAEdT,UAAW,CACPQ,SAAU,WAEdP,QAAS,CACLO,cAAUC,IAGZC,EAAa,CAAClB,EAAOmB,KACvB,MAAM5C,EAAayB,EAAMzB,WACzB,IAAKA,EACD,OAAO6C,QAAQC,QAAQ,iBAE3B,IAAIC,EAAcH,IAASpC,EACrB,YACA,YACN,OAAO,IAAIqC,QAAQC,IACftB,EAAoBxB,EAAYyB,EAAOsB,EAA6B,cAAhBA,GACpDC,WAAW,KACP,MAAMP,EAAWD,EAAMO,GAAaN,SACpC,GAAIA,EAAU,CAEVjB,EAAoBxB,EAAYyB,EADhCsB,EAAcN,GAId,MAAMQ,EA1CF,CAACjD,IACjB,MAAMkD,EAAqBnD,EAAc,CAAEC,WAAAA,EAAYC,KAAM,wBACvDkD,OAAuCT,IAAvBQ,EAChBE,EAAkBF,GAClB,EACAG,EAAkBtD,EAAc,CAAEC,WAAAA,EAAYC,KAAM,qBAI1D,OAAOkD,QAHgCT,IAApBW,EACbD,EAAkBC,GAClB,IAkCuBC,CAAYtD,GAC7BgD,WAAWF,EAASG,KAEzB,MAGLG,EAAqBG,IACvB,MAAMC,EAASC,WAAWF,KAA+C,IAA/BA,EAAYG,QAAQ,MAAe,IAAO,GACpF,OAAOC,MAAMH,GACP,EACAA,GAOV,IAAII,EAJJ,SAA8BC,EAAIC,GACjC,OAAiCD,EAA1BC,EAAS,CAAEC,QAAS,IAAiBD,EAAOC,SAAUD,EAAOC,QAGxDC,EAAqB,SAAUF,IAC3C,WAEDG,EAAOC,KAAO,GACdD,EAAOE,KA6JP,WACC,IAAIN,EAAKO,UAAU,GAEnB,OAAOC,EADOC,MAAMC,UAAUC,MAAMC,KAAKL,UAAW,IAC9B9C,KAAI,SAASoD,GAClC,OAAOb,EAAGc,WAAMjC,EAAWgC,OAhK7BT,EAAOW,KAgIP,SAAcf,EAAIgB,EAAKC,GACtB,IAAIlB,EAASkB,EAAOxD,KAAI,SAASyD,GAChC,IAAIC,EAAOnB,EAAGgB,EAAKE,GAEnB,OADIC,IAASf,EAAOC,OAAMW,EAAMG,GACzBA,KAGR,OADApB,EAAOiB,GACAjB,GAtIRK,EAAOI,MAAQA,EACfJ,EAAOgB,QAAUA,EACjBhB,EAAOiB,UAuIP,SAAmBC,EAAQC,GAC1B,IAAIV,EAAUS,EAAO7D,KAAI,SAAS+D,GAAS,OAAOA,EAAM,MAEpDzB,EAASqB,GAAQ,WACpB,IAAIK,EAAUlB,UAAUA,UAAUmB,OAAS,GAM3C,OALAb,EAAQ3D,SAAQ,SAAS6C,EAAQ4B,GAC5BF,EAAQ5B,QAAQE,IAAW,IAC9BwB,EAAOD,EAAOK,GAAG,GAAGJ,EAAMxB,SAGrBwB,IACLV,GAIH,OAFAd,EAAOwB,GAEAxB,GArJRK,EAAO,mBAAqBA,EAE5B,IAAIwB,GAAa,EASjB,SAASxB,EAAOhD,GACf,IAuCIyE,EAvCAC,EAAmB,GACnBC,EAAe,GAEnB,SAAShC,EAAOmB,GAUf,OATIX,UAAUmB,QAAUR,IAAMd,EAAOC,OACpCjD,EAAQ8D,EACJc,EAAKjC,KACRA,EAAOkC,YACPlC,EAAOmC,OAAS,SAChBJ,EAAiB5E,SAAQ,SAASiF,EAAGR,GAAKQ,EAAEJ,EAAaJ,GAAGvE,SAIvDA,EAyDR,OAtDA2C,EAAOqC,YAAchC,EACrBL,EAAOmC,OAAS3B,UAAUmB,QAAUtE,IAAUgD,EAAOC,KAAO,SAAW,UACvEN,EAAOsC,SAAW,GAElBtC,EAAOkC,UAAY,WACdD,EAAKjC,KAASA,EAAOmC,OAAS,YAClCJ,EAAiB5E,SAAQ,SAASiF,GACjCA,EAAEF,gBAIJlC,EAAOuC,KAAO,SAAStC,EAAIuC,GAC1B,IAAIC,EAASD,EAAgBnC,IAAWA,EAAOJ,EAAG5C,IAIlD,OAHAoF,EAAOH,SAASI,KAAK1C,GACrB+B,EAAiBW,KAAKD,GACtBT,EAAaU,KAAKzC,GACXwC,GAGRzC,EAAOtC,IAAM,SAASuC,GACrB,OAAOD,EAAOuC,KAAKtC,EAAsB,WAAlBD,EAAOmC,SAiB/BnC,EAAO2C,OAAS,WAAa,OAAgB,MAATtF,GAAyC,mBAAjBA,EAAMsF,OAAwBtF,EAAMsF,SAAWtF,GAE3G2C,EAAO,oBAAsBA,EAAOtC,IACpCsC,EAAO,mBAAqB,SAASnE,GAAK,OAAOwF,GAAQ,SAASuB,EAAIC,GAAM,OAAOD,GAAAA,CAAKC,OAAS,CAAChH,EAAGmE,KAErGA,EAAO8C,iBAAmB,SAASC,GAClC,IAAIC,EAAajB,EAAiBjC,QAAQiD,IACtB,IAAhBC,IACHjB,EAAiBkB,OAAOD,EAAY,GACpChB,EAAaiB,OAAOD,EAAY,KAIlC/F,OAAOiG,eAAelD,EAAQ,MAAO,CACpCmD,IAAK,WAAa,OAAOrB,KA1BzBA,EAAMzB,KACF3C,KAAI,SAASL,GAMhB,OALc,IAAVA,IACH2C,EAAOsC,SAASnF,SAAQ,SAAUiG,GAAIA,EAAEN,iBAAiB9C,MACzDA,EAAOmC,OAAS,QAChBnC,EAAOsC,SAASX,OAASI,EAAiBJ,OAASK,EAAaL,OAAS,GAEnEtE,KAEDyE,MAoBD9B,EAGR,SAASqB,EAAQpB,EAAIa,GACpB,IAAIuC,EAAQvC,EAAQwC,OAAM,SAASlB,GAClC,GAAIA,EAAEC,cAAgBhC,EACrB,MAAM,IAAIkD,MAAM,gFACjB,MAAoB,WAAbnB,EAAED,UAENnC,EAASqD,EACVhD,EAAOJ,EAAGc,MAAM,KAAMD,EAAQ0C,OAAO,CAAC1C,MACtCT,IAECqB,EAAU,GAEV+B,EAAU3C,EAAQpD,KAAI,SAAS0E,GAClC,OAAOA,EAAEG,MAAK,SAASlF,GAOtB,OANAqE,EAAQgB,KAAKN,IACTiB,GAASvC,EAAQwC,OAAM,SAASlB,GAAK,MAAoB,YAAbA,EAAED,aACjDkB,GAAQ,EACRrD,EAAOC,EAAGc,MAAM,KAAMD,EAAQ0C,OAAO,CAAC9B,MACtCA,EAAU,IAEJrE,KACL,MAGAqG,EAAY1D,EAAO8B,IAAIpE,KAAI,SAASL,IACzB,IAAVA,IACHoG,EAAQtG,SAAQ,SAASwG,GAAUA,EAAO7B,KAAI,MAC9C4B,EAAU5B,KAAI,OAKhB,OAAO9B,EAGR,SAASS,EAAMK,GACd,OAAOO,GAAQ,WAAa,OAAOP,EAAQpD,KAAI,SAAS0E,GAAK,OAAOA,SAAUtB,GAuC/E,SAASmB,EAAKG,GACb,MAAoB,YAAbA,EAAED,QAAqC,WAAbC,EAAED,QAAoC,aAAbC,EAAED,OA9J7DlF,OAAOiG,eAAe7C,EAAQ,OAAQ,CACrC8C,IAAK,WAGJ,OAFAtB,GAAc+B,QAAQC,IAAI,mDAC1BhC,GAAa,EACNxB,EAAOC,QA6JhBJ,EAAgB,QAAIG,EA5KpB,MAiLA,MAGMyD,EAAY,CAACC,EAAIC,KACnB,MAAMC,EAJO,EAACF,EAAIC,IACXA,EAAME,KAAKD,GAAQA,EAAKF,KAAOA,GAGzBI,CAASJ,EAAIC,GAC1B,OAAOA,EAAMlE,QAAQmE,IASnBG,EAAW,CAACC,EAAiBC,IAAO,CAACA,EAAID,EAAgBN,GAAIM,EAAgBE,OAAOzI,OAAOC,SAASyI,KAAK,KACzGC,EAAQ,CACVC,aAAc,CACVD,MAAO,IAEXE,QAAUC,IACC,CAIHlG,IAAK,CAAC4F,EAAIL,KACNW,EAAQC,IACJ,MAAMb,EAAQa,EAAMJ,MAAMH,IAAO,GAMjC,OALAO,EAAMJ,MAAMH,GAAM,IAAIN,EAAOC,GACzBA,EAAKa,OAELb,EAAKa,MAAMC,OAAOrH,IAAI,IAAM+G,EAAME,QAAQC,GAAQI,WAE/CH,KAMfrG,OAAQ,CAAC8F,EAAIP,KACTa,EAAQC,IACJ,MAAMb,EAAQa,EAAMJ,MAAMH,IAAO,GAC3BW,EAlCP,EAAClB,EAAIC,KACpB,MAAMkB,EAAQpB,EAAUC,EAAIC,GAI5B,OAHe,IAAXkB,GACAlB,EAAMf,OAAOiC,EAAO,GAEjBlB,GA6B2BmB,CAAWpB,EAAIC,GAEjC,OADAa,EAAMJ,MAAMH,GAAMW,EACXJ,KAMfO,QAAS,CAACd,EAAIP,EAAIsB,KACdT,EAAQC,IACJ,MAAMb,EAAQa,EAAMJ,MAAMH,IAAO,GACjC,GAAIN,EAAO,CACP,MAAMkB,EAAQpB,EAAUC,EAAIC,IACb,IAAXkB,IACAlB,EAAMkB,GAASG,EACfR,EAAMJ,MAAMH,GAAM,IAAIN,IAG9B,OAAOa,KAMfS,UAAYhB,IACRM,EAAQC,IACJA,EAAMJ,MAAMH,GAAM,GACXO,KAMfJ,MAAO,CAACH,EAAIiB,KACRX,EAAQC,IACJA,EAAMJ,MAAMH,GAAM,IAAIiB,GACfV,KAGfG,QAAS,KACLJ,EAAQC,IACG,IACAA,QAMvBW,UAAYT,IACR,MAAMnJ,EAAM,CACR6J,SAAU,KAEN,OADcV,IACDN,OAEjBP,KAAM,CAACI,EAAID,KACP,MACML,EADQe,IACMN,MAAMH,IAAO,GAC3BP,EAAKK,EAASC,EAAiBC,GAC/BL,EAAOD,EAAME,KAAMD,GAASA,EAAKF,KAAOA,GAC9C,OAAOE,EACD,CAAEyB,KAAMzB,GACR,CAAE0B,aAAS7G,IAErB8G,OAAQ,CAACtB,EAAID,KACT,MACML,EADQe,IACMN,MAAMH,IAAO,GAC3BC,OAA4BzF,IAApBuF,EACRA,EAAgBE,WAChBzF,EACAiF,OAAyBjF,IAApBuF,EACLA,EAAgBN,QAChBjF,EACA+G,OAAyB/G,IAAVyF,EACfP,EAAMlI,OAAOmI,GAAQA,EAAKI,gBAAgBE,QAAUA,GACpDP,EAIN,YAHyBlF,IAAPiF,EACZ8B,EAAa/J,OAAOmI,GAAQA,EAAKI,gBAAgBN,KAAOA,GACxD8B,GAGVC,SAAU,CAACxB,EAAID,IAAoBzI,EAAIgK,OAAOtB,EAAID,GAAiB1C,QAEvE,OAAO/F,IAGTgJ,EAAS5E,IACT+E,EAAS/E,EAAOgB,KAAK,CAAC6D,EAAOkB,IAAUA,EAAMlB,GAAQ,IACpDJ,EAAMC,cACVE,GACGD,EAAU,IACTF,EAAME,QAAQC,IAEfY,EAAY,IACXf,EAAMe,UAAUT,IAMjBL,EAAe,CACjBsB,SAAU,OACVC,UAAU,EACVC,QAAS,OACTC,OAAQ,OACRC,aAAStH,EACTmG,UAAW,EACXoB,eAAWvH,EACXwH,UAAW,OACXC,aAASzH,GAEP0H,EAAmB,CAAC3B,EAAOmB,EAAU3G,EAAUoH,KACjD,MAAMH,EAAY,KACdN,IACAnB,EAAMsB,SACNM,KAEJ,MAAO,CACHH,UAAAA,EACAF,QAAS,IAAInH,QAAQ,CAACC,EAASwH,KAC3B7B,EAAMsB,OAAS,IAAMjH,IACrB2F,EAAMqB,QAAU,IAAMhH,SAEtB2F,EAAMoB,SACJ,GACA,CACEI,WAAW,IAAIM,MAAOC,UACtBL,QAASjK,OAAO8C,WAAWkH,EAAWjH,GACtC4F,UAAW5F,KAIrBwH,EAAqBhC,IACvBvI,OAAOwK,aAAajC,EAAM0B,SACnB,CACHA,QAAS7B,EAAa6B,UAGxBQ,EAAmBlC,IACd,IACAgC,EAAkBhC,KAGvBmC,EAAoBnC,IACf,IACAgC,EAAkBhC,GACrBoB,UAAU,EACVhB,UAAWgC,EAAapC,KAG1BqC,EAAoB,CAACrC,EAAOsC,KAC9B7K,OAAOwK,aAAajC,EAAM0B,SAC1B,MAAMtB,EAAYkC,EACZC,KAAKC,IAAIxC,EAAMI,WAAa,EAAGkC,GAC/BtC,EAAMI,UACZ,MAAO,CACHoB,WAAW,IAAIM,MAAOC,UACtBX,UAAU,EACVhB,UAAAA,EACAsB,QAASjK,OAAO8C,WAAWyF,EAAMyB,UAAWrB,KAG9CgC,EAAgBpC,GAA8B,IAApBA,EAAMI,UAChC,EACAJ,EAAMI,YAAa,IAAI0B,MAAOC,WAAa/B,EAAMwB,WAAa,IAC9DiB,EAAQ,KACV,MAAMxC,EAAQ,CACVJ,aAAAA,EACAC,QAAUC,IACC,CACH2C,MAAO,CAACvB,EAAU3G,KACduF,EAAQC,IACG,IACAA,KACAgC,EAAkBhC,MAClB2B,EAAiB3B,EAAOmB,EAAU3G,EAAU,IAAMyF,EAAMH,QAAQC,GAAQ4C,WACvE3C,EAAMoB,UAAYe,EAAiBnC,OAInD4C,KAAM,KACF7C,EAAQC,IACG,IACAA,KACAkC,EAAgBlC,MAChBH,MAIfgD,MAAO,KACH9C,EAAQC,IACG,IACAA,MACEA,EAAMoB,UAAYe,EAAiBnC,OAIpD8C,OAASR,IACLvC,EAAQC,IACG,IACAA,KACCA,EAAMoB,UAAYiB,EAAkBrC,EAAOsC,OAI3DS,MAAO,KACHhD,EAAQC,IACJA,EAAMqB,UACC,IACArB,KACAgC,EAAkBhC,OAIjC2C,KAAM,KACF5C,EAAQC,GACGH,IAGfM,QAAS,KACLJ,EAAQC,IACG,IACAA,QAMvBW,UAAYT,IACD,CACHkB,SAAU,KAEN,OADclB,IACDkB,UAEjBgB,aAAc,KACV,MAAMpC,EAAQE,IACd,OAAOF,EAAMoB,SACPpB,EAAMI,UACNgC,EAAapC,IAEvBgD,iBAAkB,KAEd,OADc9C,IACDqB,YAKvBxB,EAAS5E,IACT+E,EAAS/E,EAAOgB,KAAK,CAAC6D,EAAOkB,IAAUA,EAAMlB,GAAQ,IACpDC,EAAMJ,cACVE,GAUH,MAAO,CACHG,OAAAA,EACAJ,QAXY,IACTG,EAAMH,QAAQC,IAWjBY,UATc,IACXV,EAAMU,UAAUT,MAY3B,IAAI+C,EAAM,EACV,MAAMC,EAAS,IAAMD,IAAQE,OAAOC,iBAC9B,EACAH,IACAI,EACO,EADPA,EAEU,EAFVA,EAGM,EAGNC,EAAiB9D,GAAqBL,QAAoClF,IAA1BuF,EAAgBE,MAChEP,EAAMlI,OAAOmI,GAASA,EAAKI,gBAAgBE,QAAUF,EAAgBE,OACrEP,EAQAoE,EAAsBC,IACxB,IAAIC,EAAc,EAClB,OAAOD,EACF3K,IAAIuG,KACLA,KAAAA,EACAsE,WAAYtE,EAAKuE,gBAAgBC,OAC3BH,IACA,KAELxM,OAAO,EAAGyM,WAAAA,KAAgC,IAAfA,GAC3B7K,IAAI,EAAGuG,KAAAA,KAAWA,IAErByE,EAAmB,CAACpE,EAAIN,EAAOK,KACjC,MAAMgE,EAAUrE,EAAMM,IAAO,GAC7B,OAAsB,GAAlB+D,EAAQ1G,OACD,GAEJhG,EAAKwM,EAAc9D,GAAkB+D,EAArCzM,CAAyD0M,IAS9DM,EAA2B,CAACC,EAAwBvE,EAAkB,OACxEN,GAAIM,EAAgBN,IAAM6E,EAAuB7E,GACjDQ,MAAOF,EAAgBE,OAASqE,EAAuBrE,QAErDsE,EAAgB,CAACD,EAAwBE,EAAU,MACrD,MAAMzE,EAAkB,CACpBN,GAAI+E,EAAQC,SAAWD,EAAQC,SAAShF,QAAKjF,EAC7CyF,MAAOuE,EAAQC,SAAWD,EAAQC,SAASxE,WAAQzF,GAQvD,MAAO,CACHuF,gBAP0BsE,EAAyBC,GAA0B,GAAIvE,GAQjFmE,gBAPoB,IACjBI,KACAE,EAAQC,UAMXC,mBAzBsBF,CAAAA,IAC1B,MAAMG,EAAO,IACNH,GAGP,cADOG,EAAKF,SACLE,GAgBoBC,CAAsBJ,KA6D/CK,EAtDkB7E,GAAQsE,GAA2B,CAACE,EAAU,MAClE,MAAMzE,gBAAEA,EAAemE,gBAAEA,EAAeQ,mBAAEA,GAAuBH,EAAcD,EAAwBE,GACvG,OAAO,IAAI7J,QAAQC,IACf,MAAMkK,EAAY,CACdC,QAAUpF,IACFuE,EAAgBa,SAChBb,EAAgBa,QAAQpF,GAErB/E,EAAQ+E,IAEnBqF,QAAUrF,IACFuE,EAAgBc,SAChBd,EAAgBc,QAAQrF,GAErB/E,EAAQ+E,KAGjBA,EAAO,CACTK,GAAAA,EACAD,gBAAAA,EACAmE,gBAAAA,EACAY,UAAAA,EACAJ,mBAAAA,EACAjF,GAAIK,EAASC,EAAiBC,GAC9BQ,MAAO0D,EAAgBe,QACjBjC,SACAxI,EACN1B,IAAK2K,IAASzK,WACdkM,gBAAiBtB,GAEfuB,EAAoBjE,EAAUtB,KAAKI,EAAID,GAC7C,GAAIoF,EAAkB/D,MAAQ8C,EAAgBkB,OAAQ,CAClD,MAAMC,EAAaC,EAAKtF,EAALsF,CAAShB,EAATgB,CAAiCd,GACpD,OAAO5J,EAAQyK,GAEnB,GAAIF,EAAkB/D,OAAS8C,EAAgBC,OAAQ,CACnD,MAAMoB,EAAeJ,EAAkB/D,KAEjC8C,EAAkBqB,EAAarB,gBAC/BsB,EAAgB,IACf7F,EACHuF,gBAAiBK,EAAaL,gBAC9BhB,gBAAAA,GAEJ7D,EAAQS,QAAQd,EAAIuF,EAAa9F,GAAI+F,QAGrCnF,EAAQjG,IAAI4F,EAAIL,GAIpB/E,EAAQ+E,MAIV2F,EAAQtF,GAAQsE,GAA4BE,IAC9C,MAAMzE,gBAAEA,EAAemE,gBAAEA,EAAeQ,mBAAEA,GAAuBH,EAAcD,EAAwBE,GACjGW,EAAoBjE,EAAUtB,KAAKI,EAAID,GAC7C,GAAIoF,EAAkB/D,KAAM,CACxB,MAAMmE,EAAeJ,EAAkB/D,KACjCzB,EAAO,IACN4F,EACHrB,gBAAiB,IACVqB,EAAarB,mBACbA,GAEPQ,mBAAoB,IACba,EAAab,mBAChBA,mBAAAA,IAIR,OADArE,EAAQS,QAAQd,EAAIuF,EAAa9F,GAAIE,GACjCA,EAAKuF,kBAAoBtB,EAClB6B,EAAS9F,GAGThF,QAAQC,QAAQ+E,GAG/B,OAAOhF,QAAQC,WAEbwI,EAASpD,GAAQsE,GAA4BvE,IAC/C,MAAML,EAAQgG,EAAc1F,EAAID,GAC3BvI,OAAOmI,KAAUA,EAAKa,OAE3B,OADAd,EAAM7G,QAAS8G,GAASA,EAAKa,OAASb,EAAKa,MAAMH,QAAQ+C,SAClDzI,QAAQgL,IAAIjG,IAEjB2D,EAAUrD,GAAQsE,GAA4BsB,IAChD,MAAMpB,EAAUoB,GAAkB,GAC5B7F,EAAkB,CACpBN,GAAI+E,EAAQ/E,GACZQ,MAAOuE,EAAQvE,OAEbP,EAAQgG,EAAc1F,EAAID,GAC3BvI,OAAOmI,KAAUA,EAAKa,OAE3B,OADAd,EAAM7G,QAAS8G,GAASA,EAAKa,OAASb,EAAKa,MAAMH,QAAQgD,OAAOmB,EAAQ3B,kBACjElI,QAAQgL,IAAIjG,IAEjBmG,EAAmB,CAACC,EAAWC,IAAkB/F,GAAQsE,GAA4BvE,IACvF,MAAMiG,EA7JW,CAAChG,GAAQsE,GAA4BvE,GAAoBmB,EAAUtB,KAAKI,EAAIqE,EAAyBC,EAAwBvE,IA6J5HkG,CAAajG,EAAbiG,CAAiB3B,EAAjB2B,CAAyClG,GAC3D,OAAIiG,EAAU5E,MACN4E,EAAU5E,MAAQ4E,EAAU5E,KAAKZ,MAC1BwF,EAAU5E,KAAKZ,MAAMU,UAAU4E,KAOnCC,GAGTpE,EAAWkE,EAAiB,YAAY,GACxCK,EAAiBL,EAAiB,eAAgB,GAClDM,EAAUnG,GAAQsE,GAA4BvE,KAAsB2F,EAAc1F,EAAID,GAAiB1C,OACvGqI,EAAgB,CAAC1F,EAAID,KACvB,MAAMqG,EAAWlF,EAAUI,OAAOtB,GAClC,IAAIqG,EAOJ,OALIA,EADAtG,EACa1I,EAAKwM,EAAc9D,GA7KrB,CAACA,GAAqBL,QAAiClF,IAAvBuF,EAAgBN,GAC7DC,EAAMlI,OAAOmI,GAASA,EAAKI,gBAAgBN,KAAOM,EAAgBN,IAClEC,EA2KoD4G,CAAWvG,GAAhD1I,CAAkE+O,GAGlEA,GAIfG,EAAYvG,GAAQsE,GAA4BvE,IAClD,MAAMsG,EAAaX,EAAc1F,EAAID,GAC/BL,EAAQ,GAad,OAZA2G,EAAWxN,QAAS8G,IAChBA,EAAKa,OAASb,EAAKa,MAAMH,QAAQiD,QACjC5D,EAAMtB,KAAKuB,KAEXI,EACAL,EAAM7G,QAAS8G,IACXU,EAAQnG,OAAO8F,EAAIL,EAAKF,MAI5BY,EAAQW,UAAUhB,GAEfrF,QAAQC,QAAQ8E,IAErB8G,EAAiC,CAAC7G,EAAMuE,KACnC,IACAvE,EACHuE,gBAAiB,IACVvE,EAAKuE,mBACLA,KASTuC,EAAWzG,GAAQsE,GAA4BJ,IACjD,MAAMM,EAAUN,GAAmB,GAC7BnE,EAAkB,CACpBN,GAAI+E,EAAQ/E,GACZQ,MAAOuE,EAAQvE,OAEboG,EAAaX,EAAc1F,EAAID,GAC/B2G,EAAeL,EAAW7O,OAAQmI,IAAU6E,EAAQL,SAAWxE,EAAKuE,gBAAgBC,QACpFwC,EAAcN,EAAW7O,OAAQmI,GAAS6E,EAAQL,QAAUxE,EAAKuE,gBAAgBC,QACjFzE,EAAQ,GAEd,GADAgH,EAAa7N,QAAS8G,GAASD,EAAMtB,KAAKqH,EAASe,EAA+B7G,EAAM6E,MACpFmC,EAAYtJ,OAAS,EAAG,CACxB,MAAOuJ,GAAYD,EAEnBtG,EAAQF,MAAMH,EAAI,CAAC4G,IAEnBlH,EAAMtB,KAAKqH,EAASe,EAA+BI,EAASpC,KAEhE,OAAO7J,QAAQgL,IAAIjG,IAEjB8B,EAAYxB,GAAQD,GAAoBmB,EAAUM,SAASxB,EAAID,GAC/D8G,EAAiB,CAAClH,EAAMjF,IAASD,EAAWkF,EAAKuE,gBAAiBxJ,GAKlEoM,EAAWC,eAAgBpH,GAS7B,OARIA,EAAKuF,kBAAoBtB,IACzBjE,EAAKuF,gBAAkBtB,QAChBiD,EAAelH,EAAMrH,IAEhCqH,EAAKmF,UAAUC,eAAkBpF,EAAKmF,UAAUC,QAAQpF,GACpDA,EAAKuE,gBAAgBe,SAAWtF,EAAKa,aAVpBuG,eAAgBpH,EAAMa,EAAOyE,GAElD,OADAzE,EAAMH,QAAQ4C,MAAM,IAAOwC,EAAS9F,GAAQsF,GACrCY,EAAiB,wBAAoBrL,IAShBmF,EAAMA,EAAKa,MAAOb,EAAKuE,gBAAgBe,SAE5DtK,QAAQC,QAAQ+E,IAErB8F,EAAWsB,eAAgBpH,GAC7BA,EAAKuF,gBAAkBtB,EAEnBjE,EAAKa,OACLb,EAAKa,MAAMH,QAAQ8C,aAEhB0D,EAAelH,EAAMrH,GAC5BqH,EAAKmF,UAAUE,eAAkBrF,EAAKmF,UAAUE,QAAQrF,GACxD,MAAMgF,EAAO,IACNhF,GAGP,OADAU,EAAQnG,OAAOyF,EAAKK,GAAIL,EAAKF,IACtB9E,QAAQC,QAAQ+J,IAMrBqC,EAAa,EAAGhH,GAAAA,EAAImE,OAAAA,EAAQc,QAAAA,MAC9B,MAAMgC,aAAuBjH,IACvBkH,aAA0BlH,IAC1BsE,EAAyB,CAC3B7E,GAAIwH,EACJhH,MAAOiH,KACH/C,GAAU,CAAEA,OAAAA,WACA3J,IAAZyK,GAAyB,CAAEA,QAAAA,IAEnC,MAAO,CAEHjF,GAAAA,EACAiH,UAAAA,EACAC,aAAAA,EAEA5C,uBAAAA,EAEAO,KAAMA,EAAK7E,EAAL6E,CAASP,GACfgB,KAAMA,EAAKtF,EAALsF,CAAShB,GACfmC,QAASA,EAAQzG,EAARyG,CAAYnC,GACrBiC,SAAUA,EAASvG,EAATuG,CAAajC,GAEvBlB,MAAOA,EAAMpD,EAANoD,CAAUkB,GACjBjB,OAAQA,EAAOrD,EAAPqD,CAAWiB,GAEnB6B,OAAQA,EAAOnG,EAAPmG,CAAW7B,GACnB9C,SAAUA,EAASxB,GAEnB2B,SAAUA,EAAS3B,EAAT2B,CAAa2C,GACvB3B,aAAcuD,EAAelG,EAAfkG,CAAmB5B,KAInC6C,GAASH,EAAW,CAAEhH,GAAI,WAE1BoH,GAAeJ,EAAW,CAAEhH,GAAI,eAAgBmE,QAAQ,EAAMc,QAAS,MCh5B7E,SAASoC,MAET,SAASC,GAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,GAAI/L,GACT,OAAOA,IAEX,SAASgM,KACL,OAAOhP,OAAOiP,OAAO,MAEzB,SAASC,GAAQvQ,GACbA,EAAIuB,QAAQ6O,IAEhB,SAASI,GAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,GAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAsChF,SAASE,GAAuB5O,GAC5B,MAAM6O,EAAS,GACf,IAAK,MAAMX,KAAKlO,EACC,MAATkO,EAAE,KACFW,EAAOX,GAAKlO,EAAMkO,IAC1B,OAAOW,EAqEX,SAASC,GAAOlK,EAAQmK,EAAMC,GAC1BpK,EAAOqK,aAAaF,EAAMC,GAAU,MAExC,SAASE,GAAOH,GACZA,EAAKI,WAAWC,YAAYL,GAoChC,SAASM,KACL,OAPUC,EAOE,GANL1Q,SAAS2Q,eAAeD,GADnC,IAAcA,EA2Vd,IAAIE,GACJ,SAASC,GAAsBC,GAC3BF,GAAoBE,EAUxB,SAASC,GAAQvN,IARjB,WACI,IAAKoN,GACD,MAAM,IAAI9J,MAAM,oDACpB,OAAO8J,IAMPI,GAAwBC,GAAGC,SAASjL,KAAKzC,GAQ7C,SAAS2N,KACL,MAAML,EAAYF,GAClB,MAAO,CAACQ,EAAMC,KACV,MAAM1E,EAAYmE,EAAUG,GAAGtE,UAAUyE,GACzC,GAAIzE,EAAW,CAGX,MAAM2E,EAxLlB,SAAsBF,EAAMC,GACxB,MAAME,EAAIvR,SAASwR,YAAY,eAE/B,OADAD,EAAEE,gBAAgBL,GAAM,GAAO,EAAOC,GAC/BE,EAqLeG,CAAaN,EAAMC,GACjC1E,EAAUxI,QAAQzD,QAAQ8C,IACtBA,EAAGY,KAAK0M,EAAWQ,OAqBnC,MAAMK,GAAmB,GAEnBC,GAAoB,GACpBC,GAAmB,GACnBC,GAAkB,GAClBC,GAAmBvP,QAAQC,UACjC,IAAIuP,IAAmB,EAWvB,SAASC,GAAoBzO,GACzBqO,GAAiB5L,KAAKzC,GAK1B,SAAS0O,KACL,MAAMC,EAAiB,IAAIC,IAC3B,EAAG,CAGC,KAAOT,GAAiBzM,QAAQ,CAC5B,MAAM4L,EAAYa,GAAiBU,QACnCxB,GAAsBC,GACtB3I,GAAO2I,EAAUG,IAErB,KAAOW,GAAkB1M,QACrB0M,GAAkBU,KAAlBV,GAIJ,IAAK,IAAIzM,EAAI,EAAGA,EAAI0M,GAAiB3M,OAAQC,GAAK,EAAG,CACjD,MAAMoE,EAAWsI,GAAiB1M,GAC7BgN,EAAeI,IAAIhJ,KACpBA,IAEA4I,EAAelQ,IAAIsH,IAG3BsI,GAAiB3M,OAAS,QACrByM,GAAiBzM,QAC1B,KAAO4M,GAAgB5M,QACnB4M,GAAgBQ,KAAhBR,GAEJE,IAAmB,EAEvB,SAAS7J,GAAO8I,GACRA,EAAGuB,WACHvB,EAAG9I,OAAO8I,EAAGwB,OACb/C,GAAQuB,EAAGyB,eACXzB,EAAGuB,SAAS7L,EAAEsK,EAAGwB,MAAOxB,EAAG0B,KAC3B1B,EAAGwB,MAAQ,KACXxB,EAAG2B,aAAalS,QAAQuR,KAiBhC,MAAMY,GAAW,IAAIT,IACrB,IAAIU,GACJ,SAASC,KACLD,GAAS,CACLE,EAAG,EACHC,EAAG,GACHtM,EAAGmM,IAGX,SAASI,KACAJ,GAAOE,GACRtD,GAAQoD,GAAOG,GAEnBH,GAASA,GAAOnM,EAEpB,SAASwM,GAAcC,EAAOC,GACtBD,GAASA,EAAMjO,IACf0N,GAASS,OAAOF,GAChBA,EAAMjO,EAAEkO,IAGhB,SAASE,GAAeH,EAAOC,EAAO/C,EAAQ/G,GAC1C,GAAI6J,GAASA,EAAMI,EAAG,CAClB,GAAIX,GAASN,IAAIa,GACb,OACJP,GAAS5Q,IAAImR,GACbN,GAAOG,EAAEhN,KAAK,KACV4M,GAASS,OAAOF,GACZ7J,IACI+G,GACA8C,EAAMK,EAAE,GACZlK,OAGR6J,EAAMI,EAAEH,IAoShB,SAASK,GAAwBN,EAAOO,GACpCJ,GAAeH,EAAO,EAAG,EAAG,KACxBO,EAAOL,OAAOF,EAAMzS,OA8F5B,SAASiT,GAAkBC,EAAQC,GAC/B,MAAM3L,EAAS,GACT4L,EAAc,GACdC,EAAgB,CAAEC,QAAS,GACjC,IAAI9O,EAAI0O,EAAO3O,OACf,KAAOC,KAAK,CACR,MAAMqO,EAAIK,EAAO1O,GACXjE,EAAI4S,EAAQ3O,GAClB,GAAIjE,EAAG,CACH,IAAK,MAAMP,KAAO6S,EACR7S,KAAOO,IACT6S,EAAYpT,GAAO,GAE3B,IAAK,MAAMA,KAAOO,EACT8S,EAAcrT,KACfwH,EAAOxH,GAAOO,EAAEP,GAChBqT,EAAcrT,GAAO,GAG7BkT,EAAO1O,GAAKjE,OAGZ,IAAK,MAAMP,KAAO6S,EACdQ,EAAcrT,GAAO,EAIjC,IAAK,MAAMA,KAAOoT,EACRpT,KAAOwH,IACTA,EAAOxH,QAAO0B,GAEtB,OAAO8F,EAEX,SAAS+L,GAAkBC,GACvB,MAA+B,iBAAjBA,GAA8C,OAAjBA,EAAwBA,EAAe,GA4GtF,SAASC,GAAgBtD,EAAW9K,EAAQoK,GACxC,MAAMoC,SAAEA,EAAQtB,SAAEA,EAAQmD,WAAEA,EAAUzB,aAAEA,GAAiB9B,EAAUG,GACnEuB,EAAS8B,EAAEtO,EAAQoK,GAEnB6B,GAAoB,KAChB,MAAMsC,EAAiBrD,EAASjQ,IAAIsO,IAAKlQ,OAAOsQ,IAC5C0E,EACAA,EAAWpO,QAAQsO,GAKnB7E,GAAQ6E,GAEZzD,EAAUG,GAAGC,SAAW,KAE5B0B,EAAalS,QAAQuR,IAEzB,SAASuC,GAAkB1D,EAAW2D,GAC9B3D,EAAUG,GAAGuB,WACb9C,GAAQoB,EAAUG,GAAGoD,YACrBvD,EAAUG,GAAGuB,SAASiB,EAAEgB,GAGxB3D,EAAUG,GAAGoD,WAAavD,EAAUG,GAAGuB,SAAW,KAClD1B,EAAUG,GAAG0B,IAAM,IAG3B,SAAS+B,GAAW5D,EAAWnQ,GACtBmQ,EAAUG,GAAGwB,QACdd,GAAiB1L,KAAK6K,GAtpBrBkB,KACDA,IAAmB,EACnBD,GAAiB4C,KAAKzC,KAspBtBpB,EAAUG,GAAGwB,MAAQjD,MAEzBsB,EAAUG,GAAGwB,MAAM9R,IAAO,EAE9B,SAASiU,GAAK9D,EAAWzE,EAASwI,EAAUC,EAAiBC,EAAWC,GACpE,MAAMC,EAAmBrE,GACzBC,GAAsBC,GACtB,MAAM1P,EAAQiL,EAAQjL,OAAS,GACzB6P,EAAKH,EAAUG,GAAK,CACtBuB,SAAU,KACVG,IAAK,KAELvR,MAAO4T,EACP7M,OAAQ+G,GACR6F,UAAAA,EACAG,MAAO1F,KAEP0B,SAAU,GACVmD,WAAY,GACZ3B,cAAe,GACfE,aAAc,GACduC,QAAS,IAAIC,IAAIH,EAAmBA,EAAiBhE,GAAGkE,QAAU,IAElExI,UAAW6C,KACXiD,MAAO,MAEX,IAAI7L,GAAQ,EACZqK,EAAG0B,IAAMkC,EACHA,EAAS/D,EAAW1P,EAAO,CAACT,EAAK0U,EAAKzU,EAAQyU,KACxCpE,EAAG0B,KAAOoC,EAAU9D,EAAG0B,IAAIhS,GAAMsQ,EAAG0B,IAAIhS,GAAOC,KAC3CqQ,EAAGiE,MAAMvU,IACTsQ,EAAGiE,MAAMvU,GAAKC,GACdgG,GACA8N,GAAW5D,EAAWnQ,IAEvB0U,IAETjU,EACN6P,EAAG9I,SACHvB,GAAQ,EACR8I,GAAQuB,EAAGyB,eACXzB,EAAGuB,SAAWsC,EAAgB7D,EAAG0B,KAC7BtG,EAAQrG,SACJqG,EAAQiJ,QAERrE,EAAGuB,SAAS+C,EApgCxB,SAAkBC,GACd,OAAOvR,MAAMwR,KAAKD,EAAQE,YAmgCJC,CAAStJ,EAAQrG,SAI/BiL,EAAGuB,SAASS,IAEZ5G,EAAQuJ,OACRzC,GAAcrC,EAAUG,GAAGuB,UAC/B4B,GAAgBtD,EAAWzE,EAAQrG,OAAQqG,EAAQ+D,QACnD8B,MAEJrB,GAAsBoE,GAsC1B,MAAMY,GACFC,WACItB,GAAkBuB,KAAM,GACxBA,KAAKC,SAAW9G,GAEpB4G,IAAI1E,EAAM7H,GACN,MAAMoD,EAAaoJ,KAAK9E,GAAGtE,UAAUyE,KAAU2E,KAAK9E,GAAGtE,UAAUyE,GAAQ,IAEzE,OADAzE,EAAU1G,KAAKsD,GACR,KACH,MAAMd,EAAQkE,EAAUtJ,QAAQkG,IACjB,IAAXd,GACAkE,EAAUnG,OAAOiC,EAAO,IAGpCqN,SCt0CJ,MAAMG,GAAmB,GAgBzB,SAASC,GAAStV,EAAOkK,EAAQoE,IAC7B,IAAIlE,EACJ,MAAMmL,EAAc,GACpB,SAASC,EAAIC,GACT,GAAIxG,GAAejP,EAAOyV,KACtBzV,EAAQyV,EACJrL,GAAM,CACN,MAAMsL,GAAaL,GAAiB/Q,OACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIgR,EAAYjR,OAAQC,GAAK,EAAG,CAC5C,MAAMQ,EAAIwQ,EAAYhR,GACtBQ,EAAE,KACFsQ,GAAiBhQ,KAAKN,EAAG/E,GAE7B,GAAI0V,EAAW,CACX,IAAK,IAAInR,EAAI,EAAGA,EAAI8Q,GAAiB/Q,OAAQC,GAAK,EAC9C8Q,GAAiB9Q,GAAG,GAAG8Q,GAAiB9Q,EAAI,IAEhD8Q,GAAiB/Q,OAAS,IA0B1C,MAAO,CAAEkR,IAAAA,EAAKjO,OArBd,SAAgB3E,GACZ4S,EAAI5S,EAAG5C,KAoBW2V,UAlBtB,SAAmBhH,EAAKiH,EAAatH,IACjC,MAAMuH,EAAa,CAAClH,EAAKiH,GAMzB,OALAL,EAAYlQ,KAAKwQ,GACU,IAAvBN,EAAYjR,SACZ8F,EAAOF,EAAMsL,IAAQlH,IAEzBK,EAAI3O,GACG,KACH,MAAM6H,EAAQ0N,EAAY9S,QAAQoT,IACnB,IAAXhO,GACA0N,EAAY3P,OAAOiC,EAAO,GAEH,IAAvB0N,EAAYjR,SACZ8F,IACAA,EAAO,SAavB,SAAS0L,GAAQC,EAAQnT,EAAIoT,GACzB,MAAMC,GAAU5S,MAAM6S,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAOxT,EAAG0B,OAAS,EACzB,MAnEO,CACHqR,UAAWL,GAkECU,EAAgBR,IAC5B,IAAIa,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAUlI,GACd,MAAMmI,EAAO,KACT,GAAIF,EACA,OAEJC,IACA,MAAMnH,EAASzM,EAAGqT,EAASK,EAAO,GAAKA,EAAQd,GAC3CY,EACAZ,EAAInG,GAGJmH,EAAUzH,GAAYM,GAAUA,EAASf,IAG3CoI,EAAgBP,EAAa9V,IAAI,CAAC+G,EAAO7C,IAAM6C,EAAMuO,UAAW3V,IAClEsW,EAAO/R,GAAKvE,EACZuW,KAAa,GAAKhS,GACd8R,GACAI,KAEL,KACCF,GAAY,GAAKhS,KAIrB,OAFA8R,GAAS,EACTI,IACO,WACH3H,GAAQ4H,GACRF,OAjG8Bb,WCRnC,MAAMgB,GAAW,IACnBrB,GAAS5N,MACTS,GAGLT,EAAOrH,IAAImH,GAASmP,GAASnB,IAAI,IAC5BhO,KACAW,KAGE,MAAMM,GAAWxB,GAAMD,GAAmB8O,GAChDa,GACA,IAAMxO,EAAUM,SAASxB,EAAID,IAGjB4B,GAAW3B,GAAMsE,GAA0BvE,GAAmB8O,GAC1Ea,GACA,KACCpQ,QAAQC,IAAI,iBAAkB,KAAMS,EAAI,yBAA0BsE,EAAwB,kBAAmBvE,EAAiB,QAAS4P,EAAU3P,EAAV2P,CAAcrL,EAAdqL,CAAsC5P,IAC7K4P,EAAU3P,EAAV2P,CAAcrL,EAAdqL,CAAsC5P,KAI3BoG,GAASnG,GAAMsE,GAA0BvE,GAAmB8O,GACxEa,GACA,IAAME,EAAa5P,EAAb4P,CAAiBtL,EAAjBsL,CAAyC7P,ICzBnCoH,GAAS,IACjB0I,GACHrO,SAAUzB,GACRyB,GAASqO,GAAQ7P,GAAjBwB,CAAqBzB,GACvB4B,SAAU5B,GACR4B,GAASkO,GAAQ7P,GAAjB2B,CAAqBkO,GAAQvL,uBAA7B3C,CAAqD5B,GACvDoG,OAAQpG,GACNoG,GAAO0J,GAAQ7P,GAAfmG,CAAmB0J,GAAQvL,uBAA3B6B,CAAmDpG,ICP1CqH,GAAe,IACvB0I,GACHtO,SAAUzB,GACRyB,GAASsO,GAAc9P,GAAvBwB,CAA2BzB,GAC7B4B,SAAU5B,GACR4B,GAASmO,GAAc9P,GAAvB2B,CAA2BmO,GAAcxL,uBAAzC3C,CAAiE5B,GACnEoG,OAAQpG,GACNoG,GAAO2J,GAAc9P,GAArBmG,CAAyB2J,GAAcxL,uBAAvC6B,CAA+DpG,ICRtDgQ,GAAkB/P,GAAO,CAACyJ,EAAO9N,KAE5C,MAAMqK,EAAY9E,EAAUtB,KAAKI,EAAIyJ,EAAMD,OAAOzJ,iBAC9CiG,EAAU5E,MNo2BM,EAACtJ,EAAY6H,KAC/BA,EAAKuE,gBAAgBpM,WAAaA,GMp2BlCkY,CAAcvG,EAAMD,OAAO1R,WAAYkO,EAAU5E,MAGnD,MAAM6O,EAAyB/O,EAAUtB,KAAKI,EAAIyJ,EAAMD,OAAOzJ,iBAC3DkQ,EAAuB7O,MACzBzF,EAAGsU,EAAuB7O,OAIjB8O,GAAqBlQ,GAAQyJ,GACxCsG,GAAe/P,EAAf+P,CAAmBtG,EAAO3C,GAEfqJ,GAAkBnQ,GAAQyJ,GACrCsG,GAAe/P,EAAf+P,CAAmBtG,EAAO3C,GAEfsJ,GAAkBpQ,GAAQyJ,GACrCsG,GAAe/P,EAAf+P,CAAmBtG,EAAOhE,qCCgB0BZ,cAAOS,QAAUZ,wBAA7CR,gBAAgB+E,2HNmH1C,IAAiBoH,EAwDH/H,EAAMgI,EAAWvX,EAxDdsX,UACNlY,SAASoY,cAAcF,wBAuDpB/H,IAAMgI,UACH,OADcvX,IM9KtBG,WNgLDoP,EAAKkI,gBAAgBF,GAErBhI,EAAKmI,aAAaH,EAAWvX,oIM/KiB8L,sBAAOS,iCAAUZ,qCAA7CR,gBAAgB+E,iTAnCxC,MAAMyH,EAAWpH,KAGjB,IAAIxR,mBAEOiI,EAAe2E,mBACfA,EAAkBR,gBAClBA,KAEX,MAAMhL,EAAYgL,EAAkBA,EAAgBhL,UAAY,GAE1DyX,EAAsBN,GAC1BK,EAASL,EAAM,CACbtQ,gBAAAA,EACAjI,WAAAA,WAWJoR,GAAQ,KACNyH,EAAmB,wTATR,KACXA,EAAmB,cAGR,KACXA,EAAmB,qdCPlB5Q,kCACAmE,qCACAQ,6CACSkM,oCACDC,iCACAC,6LALR/Q,8EACAmE,iFACAQ,sKAJEN,IAAiBpE,KAAI+Q,UAAU5Q,QAAOJ,8BAAyFjH,oBAApIuE,qFAAAA,oDAAAA,uDAAK+G,IAAiBpE,KAAI+Q,UAAU5Q,QAAOJ,wBP48B7C,SAA2BiR,EAAY5T,EAAS6T,EAASC,EAASpG,EAAKqG,EAAMrF,EAAQxD,EAAM8I,EAASC,EAAmBvU,EAAMwU,GACzH,IAAI3F,EAAIqF,EAAW3T,OACfhE,EAAI8X,EAAK9T,OACTC,EAAIqO,EACR,MAAM4F,EAAc,GACpB,KAAOjU,KACHiU,EAAYP,EAAW1T,GAAGxE,KAAOwE,EACrC,MAAMkU,EAAa,GACbC,EAAa,IAAIlE,IACjBmE,EAAS,IAAInE,IAEnB,IADAjQ,EAAIjE,EACGiE,KAAK,CACR,MAAMqU,EAAYL,EAAYxG,EAAKqG,EAAM7T,GACnCxE,EAAMmY,EAAQU,GACpB,IAAIpG,EAAQO,EAAOjN,IAAI/F,GAClByS,EAII2F,GACL3F,EAAMzM,EAAE1B,EAASuU,IAJjBpG,EAAQ8F,EAAkBvY,EAAK6Y,IACzBvG,IAKVqG,EAAWlD,IAAIzV,EAAK0Y,EAAWlU,GAAKiO,GAChCzS,KAAOyY,GACPG,EAAOnD,IAAIzV,EAAKgK,KAAK8O,IAAItU,EAAIiU,EAAYzY,KAEjD,MAAM+Y,EAAY,IAAItH,IAChBuH,EAAW,IAAIvH,IACrB,SAASlC,EAAOkD,GACZD,GAAcC,EAAO,GACrBA,EAAMkB,EAAEnE,EAAMxL,GACdgP,EAAOyC,IAAIhD,EAAMzS,IAAKyS,GACtBzO,EAAOyO,EAAMwG,MACb1Y,IAEJ,KAAOsS,GAAKtS,GAAG,CACX,MAAM2Y,EAAYR,EAAWnY,EAAI,GAC3B4Y,EAAYjB,EAAWrF,EAAI,GAC3BuG,EAAUF,EAAUlZ,IACpBqZ,EAAUF,EAAUnZ,IACtBkZ,IAAcC,GAEdnV,EAAOkV,EAAUD,MACjBpG,IACAtS,KAEMoY,EAAW/G,IAAIyH,IAKfrG,EAAOpB,IAAIwH,IAAYL,EAAUnH,IAAIwH,GAC3C7J,EAAO2J,GAEFF,EAASpH,IAAIyH,GAClBxG,IAEK+F,EAAO7S,IAAIqT,GAAWR,EAAO7S,IAAIsT,IACtCL,EAAS1X,IAAI8X,GACb7J,EAAO2J,KAGPH,EAAUzX,IAAI+X,GACdxG,MAfAyF,EAAQa,EAAWnG,GACnBH,KAiBR,KAAOA,KAAK,CACR,MAAMsG,EAAYjB,EAAWrF,GACxB8F,EAAW/G,IAAIuH,EAAUnZ,MAC1BsY,EAAQa,EAAWnG,GAE3B,KAAOzS,GACHgP,EAAOmJ,EAAWnY,EAAI,IAC1B,OAAOmY,4EOrhCTnU,iDAAAA,gDAAAA,2DPgCF,SAA6B4L,EAAW9I,EAAOuB,GAC3CuH,EAAUG,GAAGoD,WAAWpO,KAV5B,SAAmB+B,EAAOuB,GACtB,MAAM0Q,EAAQjS,EAAMuO,UAAUhN,GAC9B,OAAO0Q,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,EAQ1B1D,CAAUvO,EAAOuB,mCO1CzC,oBAAI3B,EAAeC,GACfA,KAEX,MAAM4Q,EAAsBV,GAAkBlQ,GACxC6Q,EAAmBV,GAAenQ,GAClC8Q,EAAmBV,GAAepQ,iWCUhCD,qBAAkBC,yFAAAA,oHAlB1B,SAAWuJ,EAAIvJ,GACJA,EAAKuJ,EAAKvJ,GAAEC,MACZA,EAAiBR,GACjBA,UACAyJ,KAEX,MAAMnJ,EAAkB,CACtBN,GAAIA,GAAM8J,EAAKtC,UACfhH,MAAOA,GAASsJ,EAAKrC,qBAGvBoL,GAAc,KACW,mBAAZpJ,GACTA,mWCZUqJ,cAAepL,2LAAfoL,yBAAepL,gOCAfoL,cAAenL,iMAAfmL,+BAAenL"}
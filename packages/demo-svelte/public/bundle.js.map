{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../../dialogic/dist/dialogic.mjs","../node_modules/svelte/store/index.mjs","../../dialogic-svelte/src/store.js","../../dialogic-svelte/src/dialog.js","../../dialogic-svelte/src/notification.js","../../dialogic-svelte/src/instanceEvents.js","../../dialogic-svelte/src/Instance.svelte","../../dialogic-svelte/src/Wrapper.svelte","../../dialogic-svelte/src/Dialogical.svelte","../../dialogic-svelte/src/Dialog.svelte","../../dialogic-svelte/src/Notification.svelte","../src/default/Content.svelte","../src/remaining/Remaining.svelte","../src/App.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(transitionClassNames.showStart, transitionClassNames.showEnd, transitionClassNames.hideStart, transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, styles) => {\r\n    const transitionStyle = styles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        const value = transitionStyle[key].toString();\r\n        domElement.style[key] = value;\r\n        // if (domElement.style[key] !== value) {\r\n        // \tconsole.warn(`Invalid style: ${key}: ${value} (${domElement.style[key]})`);\r\n        // }\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => domElement.style.transitionDuration = \"0ms\";\r\nconst getTransitionStyles = (domElement, styles) => (typeof styles === \"function\"\r\n    ? styles(domElement)\r\n    : styles) || {};\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.styles) {\r\n        const styles = getTransitionStyles(domElement, props.styles);\r\n        applyTransitionStyles(domElement, \"default\", styles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, styles);\r\n    }\r\n    if (props.className) {\r\n        const transitionClassNames = {\r\n            showStart: `${props.className}-show-start`,\r\n            showEnd: `${props.className}-show-end`,\r\n            hideStart: `${props.className}-hide-start`,\r\n            hideEnd: `${props.className}-hide-end`\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames && domElement.classList.add(transitionClassNames[step]);\r\n    }\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n    const delayValue = delayStyleValue !== undefined\r\n        ? styleDurationToMs(delayStyleValue)\r\n        : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: \"showEnd\"\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined\r\n    },\r\n    hideStart: {\r\n        nextStep: \"hideEnd\"\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    let currentStep = mode === MODE.SHOW\r\n        ? \"showStart\"\r\n        : \"hideStart\";\r\n    return new Promise(resolve => {\r\n        applyStylesForState(domElement, props, currentStep, currentStep === \"showStart\");\r\n        const nextStep = steps[currentStep].nextStep;\r\n        if (nextStep) {\r\n            setTimeout(() => {\r\n                currentStep = nextStep;\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // addEventListener sometimes hangs this function because it never finishes\r\n                // Using setTimeout instead of addEventListener gives more consistent results\r\n                const duration = getDuration(domElement);\r\n                setTimeout(resolve, duration);\r\n            }, 0);\r\n        }\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(identityOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = identityOptions !== undefined\r\n                    ? identityOptions.spawn\r\n                    : undefined;\r\n                const id = identityOptions !== undefined\r\n                    ? identityOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    timerId: undefined,\r\n    isPaused: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    callback: () => { },\r\n    timeoutFn: () => { },\r\n    promise: undefined,\r\n    onDone: () => { },\r\n    onAbort: () => { },\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => reject();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => state.remaining === undefined\r\n    ? undefined\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendPauseTimer(state),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    none: \"none\",\r\n    hiding: \"hiding\"\r\n};\r\nconst filterBySpawnOption = (identityOptions) => (nsItems) => (nsItems.filter(item => (item.identityOptions.spawn === identityOptions.spawn)));\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.dialogicOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, identityOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    if (nsItems.length == 0) {\r\n        return [];\r\n    }\r\n    return pipe(filterFirstInQueue, filterBySpawnOption(identityOptions))(nsItems);\r\n};\r\nconst getPassThroughOptions = options => {\r\n    const copy = {\r\n        ...options,\r\n    };\r\n    delete copy.dialogic;\r\n    return copy;\r\n};\r\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\r\n    id: identityOptions.id || defaultDialogicOptions.id,\r\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\r\n});\r\nconst createInstance = (ns) => (defaultDialogicOptions) => (options = {}) => {\r\n    return new Promise(resolve => {\r\n        const identityOptions = {\r\n            id: options.dialogic ? options.dialogic.id : undefined,\r\n            spawn: options.dialogic ? options.dialogic.spawn : undefined\r\n        };\r\n        const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions, identityOptions);\r\n        const dialogicOptions = {\r\n            ...defaultDialogicOptions,\r\n            ...options.dialogic\r\n        };\r\n        const passThroughOptions = getPassThroughOptions(options);\r\n        const callbacks = {\r\n            didShow: (item) => {\r\n                if (dialogicOptions.didShow) {\r\n                    dialogicOptions.didShow(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n            didHide: (item) => {\r\n                if (dialogicOptions.didHide) {\r\n                    dialogicOptions.didHide(item);\r\n                }\r\n                return resolve(item);\r\n            }\r\n        };\r\n        const item = {\r\n            ns,\r\n            identityOptions: mergedIdentityOptions,\r\n            dialogicOptions,\r\n            callbacks,\r\n            passThroughOptions,\r\n            id: createId(mergedIdentityOptions, ns),\r\n            timer: dialogicOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: getUid().toString(),\r\n            transitionState: transitionStates.none,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, mergedIdentityOptions);\r\n        if (maybeExistingItem.just && dialogicOptions.toggle) {\r\n            const hideResult = hide(ns)(defaultDialogicOptions)(identityOptions);\r\n            return resolve(hideResult);\r\n        }\r\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve dialogicOptions\r\n            const dialogicOptions = existingItem.dialogicOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                dialogicOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n            // While this is a replace action, mimic a show\r\n            callbacks.didShow && callbacks.didShow(item);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultDialogicOptions, identityOptions));\r\nconst performOnItem = fn => ns => defaultDialogicOptions => (options) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(options);\r\n    if (maybeItem.just) {\r\n        return fn(ns, maybeItem.just, options);\r\n    }\r\n    else {\r\n        return Promise.resolve();\r\n    }\r\n};\r\nconst hide = performOnItem((ns, item) => {\r\n    if (item.transitionState !== transitionStates.hiding) {\r\n        item.transitionState = transitionStates.hiding;\r\n        return hideItem(item);\r\n    }\r\n    else {\r\n        return Promise.resolve(item);\r\n    }\r\n});\r\nconst pause = performOnItem((ns, item) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.pause();\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst resume = performOnItem((ns, item, commandOptions = {}) => {\r\n    if (item && item.timer) {\r\n        item.timer.actions.resume(commandOptions.minimumDuration);\r\n    }\r\n    return Promise.resolve(item);\r\n});\r\nconst getTimerProperty = (timerProp) => (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\");\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\");\r\nconst exists = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    return !!maybeItem.just;\r\n};\r\nconst resetAll = (ns) => () => {\r\n    selectors.getAll(ns).forEach((item) => item.timer && item.timer.actions.abort());\r\n    actions.removeAll(ns);\r\n    return Promise.resolve();\r\n};\r\nconst getOverridingTransitionOptions = (item, options) => {\r\n    return {\r\n        ...item,\r\n        dialogicOptions: {\r\n            ...item.dialogicOptions,\r\n            ...options\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * `options` may contain specific transition options. This comes in handy when all items should hide in the same manner.\r\n * */\r\nconst hideAll = (ns) => (dialogicOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    const regularItems = allItems.filter((item) => !dialogicOptions.queued && !item.dialogicOptions.queued);\r\n    const queuedItems = allItems.filter((item) => dialogicOptions.queued || item.dialogicOptions.queued);\r\n    regularItems.forEach((item) => hideItem(getOverridingTransitionOptions(item, dialogicOptions)));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        hideItem(getOverridingTransitionOptions(current, dialogicOptions))\r\n            .then(() => actions.removeAll(ns));\r\n    }\r\n};\r\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\r\nconst transitionItem = (item, mode) => {\r\n    return transition(item.dialogicOptions, mode);\r\n};\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\");\r\n};\r\nconst showItem = async function (item) {\r\n    await (transitionItem(item, MODE.SHOW));\r\n    item.callbacks.didShow && await (item.callbacks.didShow(item));\r\n    if (item.dialogicOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.dialogicOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.callbacks.didHide && await (item.callbacks.didHide(item));\r\n    const copy = JSON.parse(JSON.stringify(item));\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.dialogicOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultDialogicOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued }),\r\n        ...(timeout !== undefined && { timeout }),\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultDialogicOptions,\r\n        // Commands\r\n        show: show(ns)(defaultDialogicOptions),\r\n        hide: hide(ns)(defaultDialogicOptions),\r\n        hideAll: hideAll(ns),\r\n        resetAll: resetAll(ns),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultDialogicOptions),\r\n        resume: resume(ns)(defaultDialogicOptions),\r\n        // State\r\n        exists: exists(ns)(defaultDialogicOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultDialogicOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultDialogicOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, performOnItem, resetAll, resume, selectors, setDomElement, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from \"svelte/store\";\nimport { states, selectors, getTimerProperty, exists as _isDisplayed } from \"dialogic\";\n\nexport const appState = {\n  ...writable(states),\n  ...selectors\n};\n\nstates.map(state => appState.set({\n  ...state,\n  ...selectors\n}));\n\nexport const getCount = ns => identityOptions => derived(\n\tappState,\n\t() => selectors.getCount(ns, identityOptions)\n);\n\nexport const isPaused = ns => defaultDialogicOptions => identityOptions => derived(\n\tappState,\n\t() => getTimerProperty(\"isPaused\")(ns)(defaultDialogicOptions)(identityOptions)\n);\n\nexport const exists = ns => defaultDialogicOptions => identityOptions => derived(\n\tappState,\n\t() => _isDisplayed(ns)(defaultDialogicOptions)(identityOptions)\n);\n","import { dialog as _dialog } from \"dialogic\";\nimport { getCount, isPaused, exists } from \"./store\"; // Access Svelte's store\n\nexport const dialog = {\n  ..._dialog,\n  getCount: identityOptions =>\n    getCount(_dialog.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_dialog.ns)(_dialog.defaultDialogicOptions)(identityOptions),\n};\n","import { notification as _notification } from \"dialogic\";\nimport { getCount, isPaused, exists } from \"./store\"; // Access Svelte's store\n\nexport const notification = {\n  ..._notification,\n  getCount: identityOptions =>\n    getCount(_notification.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(_notification.ns)(_notification.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(_notification.ns)(_notification.defaultDialogicOptions)(identityOptions),\n};\n","import { showItem, hideItem, selectors, setDomElement } from \"dialogic\";\n\nexport const handleDispatch = (ns) => (event, fn) => {\n  // Update dispatching item:\n  const maybeItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  // Find item to transition:\n  const maybeTransitioningItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\n\nexport const onInstanceMounted = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n  \nexport const onShowInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onHideInstance = (ns) => (event) =>\n  handleDispatch(ns)(event, hideItem);\n","<script>\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  // DOM bindings\n  let domElement;\n\n  export let identityOptions = undefined;\n  export let passThroughOptions = undefined;\n  export let dialogicOptions = undefined;\n\n  const className = dialogicOptions.className;\n\n  const dispatchTransition = (name) =>\n    dispatch(name, {\n      identityOptions,\n      domElement\n    });\n\n  const show = () => {\n    dispatchTransition(\"show\");\n  };\n\n  const hide = () => {\n    dispatchTransition(\"hide\");\n  };\n\n  onMount(() => {\n    dispatchTransition(\"mount\");\n  });\n\n</script>\n\n<div \n  class={className}\n  bind:this={domElement}\n>\n  <svelte:component this={dialogicOptions.component} {show} {hide} {...passThroughOptions} />\n</div>\n\n","\n<script>\n  import { appState } from \"./store\";\n  import { filterCandidates } from \"dialogic\";\n  import { onInstanceMounted, onShowInstance, onHideInstance } from \"./instanceEvents\";\n  import Instance from \"./Instance.svelte\";\n\n  export let identityOptions;\n  export let ns;\n\n  const nsOnInstanceMounted = onInstanceMounted(ns);\n  const nsOnShowInstance = onShowInstance(ns);\n  const nsOnHideInstance = onHideInstance(ns);\n  \n</script>\n\n{#each filterCandidates(ns, $appState.store, identityOptions) as { identityOptions, dialogicOptions, passThroughOptions, key }, index(key)}\n  <Instance\n    {identityOptions}\n    {dialogicOptions}\n    {passThroughOptions}\n    on:mount={nsOnInstanceMounted}\n    on:show={nsOnShowInstance}\n    on:hide={nsOnHideInstance}\n  />\n{/each}\n","<script>\n  import { onMount as svelteOnMount } from \"svelte\";\n  import Wrapper from \"./Wrapper.svelte\";\n\n  export let type;\n  export let ns = type.ns;\n  export let spawn = undefined;\n  export let id = undefined;\n  export let onMount = undefined;\n\n  const identityOptions = {\n    id: id || type.defaultId,\n    spawn: spawn || type.defaultSpawn,\n  };\n\n  svelteOnMount(() => {\n    if (typeof onMount === \"function\") {\n      onMount();\n    }\n  })\n</script>\n\n<Wrapper {identityOptions} {ns} />\n","<script>\n  import { dialog } from \"./dialog\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={dialog} />\n","<script>\n  import { notification } from \"./notification\";\n  import Dialogical from \"./Dialogical.svelte\";\n</script>\n\n<Dialogical {...$$props} type={notification} />\n","<div>\n  <h2>{$$props.title}</h2>\n  <button on:click={$$props.hide}>hide from instance</button>\n</div>\n","<script>\n\timport { onDestroy } from \"svelte\";\n\n\texport let getRemainingFn;\n\t\n\tlet displayValue = 0;\n\tlet reqId;\n\t\n  const update = () => {\n    const value = getRemainingFn();\n    displayValue = value === undefined\n      ? undefined\n      : Math.max(value, 0);\n    reqId = window.requestAnimationFrame(update);\n  };\n\treqId = window.requestAnimationFrame(update);\n\t\n\tonDestroy(() => {\n\t\twindow.cancelAnimationFrame(reqId);\n\t});\n</script>\n\n<div>\n  Remaining: {displayValue}\n</div>\n","<script>\n  import { Notification, notification, Dialog, dialog } from \"dialogic-svelte\";\n  import DefaultContent from \"./default/Content.svelte\";\n  import IntervalContent from \"./interval/Content.svelte\";\n  import Remaining from \"./remaining/Remaining.svelte\";\n\n  const dialogCount = dialog.getCount();\n  const timerDialogExists = dialog.exists({\n    id: \"timer\"\n  });\n\n  const notificationCount = notification.getCount({\n    spawn: \"NO\"\n  });\n\n  const notificationItemIsPaused = notification.isPaused({\n    spawn: \"NO\"\n  });\n  const notificationExists = notification.exists({\n    spawn: \"NO\"\n  });\n\n  const getRandomId = () => Math.round(1000 * Math.random()).toString();\n\n  const showInitial = ({ isOnMount } = {}) => dialog.show(\n  {\n    title: getRandomId(),\n    className: \"xxx-content\",\n    dialogic: {\n      component: DefaultContent,\n      styles: {\n        showStart: {\n          opacity: isOnMount ? 1 : 0,\n        },\n        showEnd: {\n          transitionDuration: isOnMount ? 0 : \"500ms\",\n          opacity: 1\n        },\n        hideEnd: {\n          transitionDuration: \"500ms\",\n          opacity: 0\n        }\n      },\n      className: \"xxx\",\n      spawn: \"initial\",\n    },\n  }\n);\n\n  $: showDialogs = true;\n  $: showNotifications = false;\n\n  const dialogOneProps = {\n    component: DefaultContent,\n    dialogic: {\n      styles: {\n        showEnd: {\n          transitionDuration: \"500ms\",\n        },\n        hideEnd: {\n          transitionDuration: \"500ms\",\n        },\n      },\n      className: \"xxx\",\n    },\n    className: \"xxx-content\",\n    title: \"Clock\",\n    id: getRandomId(),\n  };\n  const dialogSlowFadeProps = {\n    dialogic: {\n      component: DefaultContent,\n      className: \"xxx\",\n      styles: {\n        showEnd: {\n          transitionDelay: 0,\n          transitionDuration: \"1s\"\n        },\n        hideEnd: {\n          transitionDelay: 0,\n          transitionDuration: \"1s\"\n        },\n      }\n    },\n    className: \"xxx-content\",\n    title: \"Fade\",\n    id: getRandomId()\n  };\n\n  const dialogDelayProps = {\n  // transitionStyles: {\n  //   default: {\n  //     transitionDuration: \"750ms\",\n  //     transitionDelay: \"250ms\",\n  //   },\n  // },\n  className: \"xxx-content\",\n  dialogic: {\n    component: DefaultContent,\n    className: \"xxx-delay\",\n  },\n  title: \"Delay\",\n  id: getRandomId(),\n};\n\n  const dialogFourProps = {\n    dialogic: {\n      styles: domElement => {\n        const height = domElement.getBoundingClientRect().height;\n        return {\n          default: {\n            transition: \"all 300ms ease-in-out\",\n          },\n          showStart: {\n            opacity: 0,\n            transform: `translate3d(0, ${height}px, 0)`,\n          },\n          showEnd: {\n            opacity: 1,\n            transform: \"translate3d(0, 0px,  0)\",\n          },\n          hideEnd: {\n            transform: `translate3d(0, ${height}px, 0)`,\n            opacity: 0,\n          },\n        }\n      },\n      component: DefaultContent,\n    },\n    title: \"Transitions\",\n    id: getRandomId()\n  };\n\n  const hideAllOptions = {\n    styles: {\n      hideEnd: {\n        transitionDuration: \"500ms\",\n        transitionDelay: \"0ms\",\n        opacity: 0,\n      }\n    }\n  };\n</script>\n\n<style>\n  :global(.xxx) {\n    opacity: 0;\n    transition: opacity 200ms;\n  }\n  :global(.xxx-show-start) {\n    opacity: 0;\n  }\n  :global(.xxx-show-end) {\n    opacity: 1;\n  }\n  :global(.xxx-exit) {\n    opacity: 1;\n  }\n  :global(.xxx-hide-end) {\n    opacity: 0;\n  }\n\n  :global(.xxx-delay-show-start) {\n    opacity: 0;\n  }\n  :global(.xxx-delay-show-end) {\n    opacity: 1;\n    transition: opacity 750ms 250ms;\n  }\n  :global(.xxx-delay-exit) {\n    opacity: 1;\n  }\n  :global(.xxx-delay-hide-end) {\n    opacity: 0;\n    transition: opacity 750ms 250ms;\n  }\n\n  :global(.xxx-timings) {\n    transition-duration: 500ms;\n    transition-delay: 0;\n  }\n  :global(.xxx-timings-show-start) {\n    opacity: 0;\n    transition-duration: 500ms;\n    transition-delay: 0;\n  }\n  :global(.xxx-timings-show-end) {\n    opacity: 1;\n  }\n  :global(.xxx-timings-hide-end) {\n    opacity: 0;\n  }\n</style>\n\n<button on:click={() => notification.hideAll({ hideDelay: 0, hideDuration: .25 })}>Hide notifications</button>\n\n<button on:click={() => notification.resetAll().catch(() => {})}>Reset notifications</button>\n\n<button on:click={() => dialog.hideAll(hideAllOptions)}>Hide dialogs</button>\n\n<button on:click={() => dialog.resetAll().catch(() => {})}>Reset dialogs</button>\n\n<hr />\n\n<button on:click={() => showDialogs = !showDialogs}>Toggle dialogs</button>\n\n{#if showDialogs}\n\n<h2>Dialog</h2>\n\n<p>Dialog count = {$dialogCount} </p>\n\n<hr />\n\n<div>\n  <button\n    on:click={() => dialog.show({\n      title: \"Default\",\n      dialogic: {\n        component: DefaultContent,\n        className: \"xxx\",\n      },\n    })}>\n    Default\n  </button>\n  <button on:click={() => dialog.hide()}>Hide</button>\n</div>\n\n<div>\n\n  {#if $timerDialogExists}\n    <Remaining getRemainingFn={() => dialog.getRemaining({\n      id: \"timer\"\n    })} />\n  {/if}\n\n  <button\n    on:click={() => dialog.show(\n      {\n        dialogic: {\n          timeout: 2000,\n          component: DefaultContent,\n          id: \"timer\"\n        },\n        title: \"With timer\",\n      })}>\n    With timer\n  </button>\n  <button on:click={() => dialog.pause(\n      {\n        id: \"timer\"\n      }\n    )}>Pause</button>\n  <button on:click={() => dialog.resume(\n    {\n      id: \"timer\",\n      minimumDuration: 2000\n    }\n  )}>Resume</button>\n  <button on:click={() => dialog.hide({ id: \"timer\" }).catch(() => console.log(\"caught\"))}>Hide</button>\n</div>\n\n<div>\n  <button\n    on:click={() => dialog.show(\n      {\n        dialogic: {\n          didShow: item => console.log(\"didShow\", item),\n          didHide: item => console.log(\"didHide\", item),\n          styles: {\n            startEnd: {\n              transitionDuration: \"500ms\",\n            },\n            hideEnd: {\n              transitionDuration: \"250ms\",\n            },\n          },\n          component: DefaultContent,\n          className: \"xxx\",\n          id: \"withPromise\"\n        },\n        title: \"With Promise\"\n      }\n    ).then(item => console.log(\"dialog shown\", item))}>\n    Show with promises\n  </button>\n  <button on:click={() => dialog.hide(\n    {\n      id: \"withPromise\"\n    }).then(item => console.log(\"dialog hidden\", item))}>Hide</button>\n</div>\n\n<div>\n  <button\n    on:click={() => dialog.show({\n      ...dialogDelayProps,\n      dialogic: {\n        ...dialogDelayProps.dialogic,\n        id: dialogOneProps.id\n      },\n      title: dialogOneProps.title + \" \" + getRandomId()\n    })}>\n    Show delay\n  </button>\n  <button on:click={() => dialog.hide({ id: dialogOneProps.id })}>Hide</button>\n</div>\n<div>\n  <button\n    on:click={() => dialog.show({\n      ...dialogSlowFadeProps,\n      dialogic: {\n        ...dialogSlowFadeProps.dialogic,\n        id: dialogSlowFadeProps.id\n      }})}>\n    Show slow fade\n  </button>\n  <button on:click={() => dialog.hide({ id: dialogSlowFadeProps.id })}>Hide</button>\n</div>\n<div>\n  <button\n    on:click={() => dialog.show({\n      ...dialogFourProps,\n      dialogic: {\n        ...dialogFourProps.dialogic,\n        id: dialogFourProps.id\n      }\n    })}>\n    Show transition\n  </button>\n  <button on:click={() => dialog.hide({ id: dialogFourProps.id })}>Hide</button>\n</div>\n<div>\n  <button\n    on:click={() => dialog.show({\n      dialogic: {\n        component: DefaultContent,\n        spawn: \"special\"\n      },\n      title: \"Custom spawn\"\n    })}>\n    Show default in spawn\n  </button>\n  <button on:click={() => dialog.hide({ spawn: \"special\" })}>Hide</button>\n</div>\n\n<hr />\n\n<div>\n  <p>Dialog:</p>\n  <Dialog />\n</div>\n\n<div>\n  <p>Dialog with spawn:</p>\n  <Dialog spawn=\"special\" />\n</div>\n\n<hr />\nQueued dialog\n<div>\n  <button\n    on:click={() => dialog.show({\n      dialogic: {\n        component: DefaultContent,\n        spawn: \"Q\",\n        queued: true\n      },\n      title: \"Queued \" + Math.round(1000 * Math.random())\n    })}>\n    Queued\n  </button>\n  <button on:click={() => dialog.hide({ spawn: \"Q\" })}>Hide</button>\n</div>\n\n<div>\n  <p>Dialog queued:</p>\n  <Dialog spawn=\"Q\" />\n</div>\n\n<hr />\nInitially shown dialog\n<div>\n  <button\n    on:click={() => showInitial()}>\n    Initially shown\n  </button>\n  <button on:click={() => dialog.hide({ spawn: \"initial\" })}>Hide</button>\n</div>\n\n<div>\n  <Dialog spawn=\"initial\" onMount={\n    () => showInitial({ isOnMount: true })\n  } />\n</div>\n\n{/if}\n\n<hr />\n\n<button on:click={() => showNotifications = !showNotifications}>Toggle notifications</button>\n\n{#if showNotifications}\n\n<h2>Notification</h2>\n<p>Notification count: {$notificationCount} </p>\n<p>Notification exists: {$notificationExists} </p>\n<p>Is paused: {$notificationItemIsPaused} </p>\n\n<div>\n  <button\n    on:click={() => {\n      const title = \"N \" + getRandomId();\n      notification.show(\n        {\n          dialogic: {\n            didShow: item => console.log(\"didShow\", item, title),\n            didHide: item => console.log(\"didHide\", item, title),\n            component: DefaultContent,\n            className: \"xxx-timings\",\n            spawn: \"NO\"\n          },\n          className: \"xxx-timings-content\",\n          title\n        }\n      ).then(item => console.log(\"notification shown\", item, title))}\n    }\n    >\n    Queued\n  </button>\n  <button on:click={e => (\n    notification.hide(\n      {\n        spawn: \"NO\"\n      }\n    )).then(item => console.log(\"notification hidden from App\", item))}>Hide</button>\n  <button on:click={() => notification.pause(\n      {\n        spawn: \"NO\"\n      }\n    )}>Pause</button>\n  <button on:click={() => notification.resume(\n    {\n      spawn: \"NO\"\n    }\n  )}>Resume</button>\n</div>\n\n<Notification spawn=\"NO\" />\n\n<hr />\n\n{/if}\n\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","set_data","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","bound","context","Map","ready","value","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","getStyleValue","domElement","prop","window","getComputedStyle","defaultView","style","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","keys","toString","applyStylesForState","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","className","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","steps","nextStep","transition","mode","currentStep","setTimeout","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","isNaN","stream","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","prototype","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","toJSON","x","s1","s2","_unregisterChild","child","childIndex","defineProperty","get","every","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","Boolean","join","initialState","actions","state","timer","states","refresh","remaining","removeItem","replace","newItem","removeAll","newItems","selectors","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","timerId","isPaused","startTime","timeoutFn","promise","onDone","onAbort","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","filterFirstInQueue","nsItems","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","reduce","y","f","pipe","filterBySpawnOption","getMergedIdentityOptions","defaultDialogicOptions","show","dialogic","mergedIdentityOptions","passThroughOptions","copy","getPassThroughOptions","didShow","didHide","timeout","transitionState","maybeExistingItem","toggle","hideResult","hide","existingItem","replacingItem","getMaybeItem","performOnItem","maybeItem","hideItem","commandOptions","getTimerProperty","timerProp","getRemaining$1","exists","resetAll","getOverridingTransitionOptions","hideAll","allItems","regularItems","queuedItems","current","transitionItem","showItem","async","JSON","parse","stringify","dialogical","defaultId","defaultSpawn","dialog","notification","subscriber_queue","writable","subscribers","set","new_value","run_queue","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","appState","_isDisplayed","_dialog","_notification","handleDispatch","setDomElement","maybeTransitioningItem","onInstanceMounted","onShowInstance","onHideInstance","attribute","removeAttribute","setAttribute","dispatch","dispatchTransition","nsOnInstanceMounted","nsOnShowInstance","nsOnHideInstance","$appState","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","svelteOnMount","$$props","title","displayValue","reqId","getRemainingFn","requestAnimationFrame","cancelAnimationFrame","$dialogCount","$timerDialogExists","$notificationCount","$notificationExists","$notificationItemIsPaused","showDialogs","showNotifications","dialogCount","timerDialogExists","notificationCount","notificationItemIsPaused","notificationExists","getRandomId","round","random","showInitial","isOnMount","DefaultContent","opacity","dialogOneProps","dialogSlowFadeProps","transitionDelay","dialogDelayProps","dialogFourProps","height","getBoundingClientRect","default","transform","hideAllOptions"],"mappings":"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"}
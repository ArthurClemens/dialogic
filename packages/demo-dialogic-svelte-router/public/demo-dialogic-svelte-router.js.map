{"version":3,"file":"demo-dialogic-svelte-router.js","sources":["../node_modules/svelte/internal/index.mjs","../../dialogic/node_modules/mithril/stream/stream.js","../../dialogic/dist/dialogic.mjs","../node_modules/svelte/store/index.mjs","../../dialogic-svelte/dist/dialogic-svelte.js","../node_modules/svelte-spa-router/Router.svelte","../node_modules/regexparam/dist/regexparam.mjs","../src/CurrentPathBadge.svelte","../src/HomePage.svelte","../src/EditProfileDialog.svelte","../src/store.ts","../src/SaveConfirmation.svelte","../src/ProfilePage.svelte","../src/routes.ts","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/* eslint-disable */\n;(function() {\n\"use strict\"\n/* eslint-enable */\nStream.SKIP = {}\nStream.lift = lift\nStream.scan = scan\nStream.merge = merge\nStream.combine = combine\nStream.scanMerge = scanMerge\nStream[\"fantasy-land/of\"] = Stream\n\nvar warnedHalt = false\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true\n\t\treturn Stream.SKIP\n\t}\n})\n\nfunction Stream(value) {\n\tvar dependentStreams = []\n\tvar dependentFns = []\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing()\n\t\t\t\tstream._state = \"active\"\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)) })\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\"\n\tstream._parents = []\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\"\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing()\n\t\t})\n\t}\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value))\n\t\ttarget._parents.push(stream)\n\t\tdependentStreams.push(target)\n\t\tdependentFns.push(fn)\n\t\treturn target\n\t}\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t}\n\n\tvar end\n\tfunction createEnd() {\n\t\tend = Stream()\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream)})\n\t\t\t\tstream._state = \"ended\"\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0\n\t\t\t}\n\t\t\treturn value\n\t\t})\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value }\n\n\tstream[\"fantasy-land/map\"] = stream.map\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) }\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child)\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1)\n\t\t\tdependentFns.splice(childIndex, 1)\n\t\t}\n\t}\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t})\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t})\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream()\n\n\tvar changed = []\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s)\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])))\n\t\t\t\tchanged = []\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t})\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true) })\n\t\t\tendStream.end(true)\n\t\t}\n\t\treturn undefined\n\t})\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v)\n\t\tif (next !== Stream.SKIP) acc = next\n\t\treturn next\n\t})\n\tstream(acc)\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] })\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1]\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream())\n\t\t})\n\n\t\treturn seed\n\t}, streams)\n\n\tstream(seed)\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0]\n\tvar streams = Array.prototype.slice.call(arguments, 1)\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nif (typeof module !== \"undefined\") module[\"exports\"] = Stream\nelse if (typeof window.m === \"function\" && !(\"stream\" in window.m)) window.m.stream = Stream\nelse window.m = {stream : Stream}\n\n}());\n","import Stream from 'mithril/stream';\n\nconst pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\nconst getStyleValue = ({ domElement, prop, }) => {\n    const defaultView = document.defaultView;\n    if (defaultView) {\n        const style = defaultView.getComputedStyle(domElement);\n        if (style) {\n            return style.getPropertyValue(prop);\n        }\n    }\n};\n\nconst MODE = {\n    SHOW: 'show',\n    HIDE: 'hide',\n};\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(...transitionClassNames.showStart, ...transitionClassNames.showEnd, ...transitionClassNames.hideStart, ...transitionClassNames.hideEnd);\nconst applyTransitionStyles = (domElement, step, styles) => {\n    const transitionStyle = styles[step] || {};\n    Object.keys(transitionStyle).forEach((key) => {\n        const value = transitionStyle[key].toString();\n        domElement.style[key] = value;\n        // if (domElement.style[key] !== value) {\n        // \tconsole.warn(`Invalid style: ${key}: ${value} (${domElement.style[key]})`);\n        // }\n    });\n};\nconst applyNoDurationTransitionStyle = (domElement) => (domElement.style.transitionDuration = '0ms');\nconst getTransitionStyles = (domElement, styles) => (typeof styles === 'function' ? styles(domElement) : styles) || {};\nconst createClassList = (className, step) => className.split(/ /).map((n) => `${n}-${step}`);\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\n    if (props.styles) {\n        const styles = getTransitionStyles(domElement, props.styles);\n        applyTransitionStyles(domElement, 'default', styles);\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\n        applyTransitionStyles(domElement, step, styles);\n    }\n    if (props.className) {\n        const transitionClassNames = {\n            showStart: createClassList(props.className, 'show-start'),\n            showEnd: createClassList(props.className, 'show-end'),\n            hideStart: createClassList(props.className, 'hide-start'),\n            hideEnd: createClassList(props.className, 'hide-end'),\n        };\n        removeTransitionClassNames(domElement, transitionClassNames);\n        transitionClassNames &&\n            domElement.classList.add(...transitionClassNames[step]);\n    }\n    // reflow\n    domElement.scrollTop;\n};\nconst getDuration = (domElement) => {\n    const durationStyleValue = getStyleValue({\n        domElement,\n        prop: 'transition-duration',\n    });\n    const durationValue = durationStyleValue !== undefined\n        ? styleDurationToMs(durationStyleValue)\n        : 0;\n    const delayStyleValue = getStyleValue({\n        domElement,\n        prop: 'transition-delay',\n    });\n    const delayValue = delayStyleValue !== undefined ? styleDurationToMs(delayStyleValue) : 0;\n    return durationValue + delayValue;\n};\nconst steps = {\n    showStart: {\n        nextStep: 'showEnd',\n    },\n    showEnd: {\n        nextStep: undefined,\n    },\n    hideStart: {\n        nextStep: 'hideEnd',\n    },\n    hideEnd: {\n        nextStep: undefined,\n    },\n};\nconst transition = (props, mode) => {\n    const domElement = props.domElement;\n    if (!domElement) {\n        return Promise.resolve('no domElement');\n    }\n    clearTimeout(props.__transitionTimeoutId__);\n    let currentStep = mode === MODE.SHOW ? 'showStart' : 'hideStart';\n    return new Promise(resolve => {\n        applyStylesForState(domElement, props, currentStep, currentStep === 'showStart');\n        setTimeout(() => {\n            const nextStep = steps[currentStep].nextStep;\n            if (nextStep) {\n                currentStep = nextStep;\n                applyStylesForState(domElement, props, currentStep);\n                // addEventListener sometimes hangs this function because it never finishes\n                // Using setTimeout instead of addEventListener gives more consistent results\n                const duration = getDuration(domElement);\n                props.__transitionTimeoutId__ = setTimeout(resolve, duration);\n            }\n        }, 0);\n    });\n};\nconst styleDurationToMs = (durationStr) => {\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf('ms') === -1 ? 1000 : 1);\n    return isNaN(parsed) ? 0 : parsed;\n};\n\nconst findItem = (id, items) => {\n    return items.find(item => item.id === id);\n};\nconst itemIndex = (id, items) => {\n    const item = findItem(id, items);\n    return items.indexOf(item);\n};\nconst removeItem = (id, items) => {\n    const index = itemIndex(id, items);\n    if (index !== -1) {\n        items.splice(index, 1);\n    }\n    return items;\n};\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join('-');\nconst store = {\n    initialState: {\n        store: {},\n    },\n    actions: (update) => {\n        return {\n            /**\n             * Add an item to the end of the list.\n             */\n            add: (ns, item) => {\n                update((state) => {\n                    const items = state.store[ns] || [];\n                    state.store[ns] = [...items, item];\n                    if (item.timer) {\n                        // When the timer state updates, refresh the store so that UI can pick up the change\n                        item.timer.states.map(() => store.actions(update).refresh());\n                    }\n                    return state;\n                });\n            },\n            /**\n             * Removes the first item with a match on `id`.\n             */\n            remove: (ns, id) => {\n                update((state) => {\n                    const items = state.store[ns] || [];\n                    const remaining = removeItem(id, items);\n                    state.store[ns] = remaining;\n                    return state;\n                });\n            },\n            /**\n             * Replaces the first item with a match on `id` with a newItem.\n             */\n            replace: (ns, id, newItem) => {\n                update((state) => {\n                    const items = state.store[ns] || [];\n                    if (items) {\n                        const index = itemIndex(id, items);\n                        if (index !== -1) {\n                            items[index] = newItem;\n                            state.store[ns] = [...items];\n                        }\n                    }\n                    return state;\n                });\n            },\n            /**\n             * Removes all items within a namespace.\n             */\n            removeAll: (ns) => {\n                update((state) => {\n                    state.store[ns] = [];\n                    return state;\n                });\n            },\n            /**\n             * Replaces all items within a namespace.\n             */\n            store: (ns, newItems) => {\n                update((state) => {\n                    state.store[ns] = [...newItems];\n                    return state;\n                });\n            },\n            refresh: () => {\n                update((state) => {\n                    return {\n                        ...state,\n                    };\n                });\n            },\n        };\n    },\n    selectors: (states) => {\n        const fns = {\n            getStore: () => {\n                const state = states();\n                return state.store;\n            },\n            find: (ns, identityOptions) => {\n                const state = states();\n                const items = state.store[ns] || [];\n                const id = createId(identityOptions, ns);\n                const item = items.find((item) => item.id === id);\n                return item ? { just: item } : { nothing: undefined };\n            },\n            getAll: (ns, identityOptions) => {\n                const state = states();\n                const items = state.store[ns] || [];\n                const spawn = identityOptions !== undefined ? identityOptions.spawn : undefined;\n                const id = identityOptions !== undefined ? identityOptions.id : undefined;\n                const itemsBySpawn = spawn !== undefined\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\n                    : items;\n                const itemsById = id !== undefined\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\n                    : itemsBySpawn;\n                return itemsById;\n            },\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\n        };\n        return fns;\n    },\n};\nconst update = Stream();\nconst states = Stream.scan((state, patch) => patch(state), {\n    ...store.initialState,\n}, update);\nconst actions = {\n    ...store.actions(update),\n};\nconst selectors = {\n    ...store.selectors(states),\n};\n// states.map(state =>\n//   console.log(JSON.stringify(state, null, 2))\n// );\n\nconst initialState = {\n    callback: () => { },\n    isPaused: false,\n    onAbort: () => { },\n    onDone: () => { },\n    promise: undefined,\n    remaining: undefined,\n    startTime: undefined,\n    timeoutFn: () => { },\n    timerId: undefined,\n};\nconst appendStartTimer = (state, callback, duration, updateState) => {\n    const timeoutFn = () => {\n        callback();\n        state.onDone();\n        updateState();\n    };\n    return {\n        timeoutFn,\n        promise: new Promise(resolve => {\n            state.onDone = () => resolve();\n            state.onAbort = () => resolve();\n        }),\n        ...(state.isPaused\n            ? {}\n            : {\n                startTime: new Date().getTime(),\n                timerId: window.setTimeout(timeoutFn, duration),\n                remaining: duration,\n            }),\n    };\n};\nconst appendStopTimeout = (state) => {\n    window.clearTimeout(state.timerId);\n    return {\n        timerId: initialState.timerId,\n    };\n};\nconst appendStopTimer = (state) => {\n    return {\n        ...appendStopTimeout(state),\n    };\n};\nconst appendPauseTimer = (state) => {\n    return {\n        ...appendStopTimeout(state),\n        isPaused: true,\n        remaining: getRemaining(state),\n    };\n};\nconst appendResumeTimer = (state, minimumDuration) => {\n    window.clearTimeout(state.timerId);\n    const remaining = minimumDuration\n        ? Math.max(state.remaining || 0, minimumDuration)\n        : state.remaining;\n    return {\n        startTime: new Date().getTime(),\n        isPaused: false,\n        remaining,\n        timerId: window.setTimeout(state.timeoutFn, remaining),\n    };\n};\nconst getRemaining = (state) => state.remaining === 0 || state.remaining === undefined\n    ? state.remaining\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\nconst Timer = () => {\n    const timer = {\n        initialState,\n        actions: (update) => {\n            return {\n                start: (callback, duration) => {\n                    update((state) => {\n                        return {\n                            ...state,\n                            ...appendStopTimeout(state),\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\n                            ...(state.isPaused && appendPauseTimer(state)),\n                        };\n                    });\n                },\n                stop: () => {\n                    update((state) => {\n                        return {\n                            ...state,\n                            ...appendStopTimer(state),\n                            ...initialState,\n                        };\n                    });\n                },\n                pause: () => {\n                    update((state) => {\n                        return {\n                            ...state,\n                            ...(!state.isPaused && appendPauseTimer(state)),\n                        };\n                    });\n                },\n                resume: (minimumDuration) => {\n                    update((state) => {\n                        return {\n                            ...state,\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration)),\n                        };\n                    });\n                },\n                abort: () => {\n                    update((state) => {\n                        state.onAbort();\n                        return {\n                            ...state,\n                            ...appendStopTimeout(state),\n                        };\n                    });\n                },\n                done: () => {\n                    update((state) => {\n                        return initialState;\n                    });\n                },\n                refresh: () => {\n                    update((state) => {\n                        return {\n                            ...state,\n                        };\n                    });\n                },\n            };\n        },\n        selectors: (states) => {\n            return {\n                isPaused: () => {\n                    const state = states();\n                    return state.isPaused;\n                },\n                getRemaining: () => {\n                    const state = states();\n                    return state.isPaused ? state.remaining : getRemaining(state);\n                },\n                getResultPromise: () => {\n                    const state = states();\n                    return state.promise;\n                },\n            };\n        },\n    };\n    const update = Stream();\n    const states = Stream.scan((state, patch) => patch(state), {\n        ...timer.initialState,\n    }, update);\n    const actions = {\n        ...timer.actions(update),\n    };\n    const selectors = {\n        ...timer.selectors(states),\n    };\n    // states.map(state =>\n    //   console.log(JSON.stringify(state, null, 2))\n    // );\n    return {\n        states,\n        actions,\n        selectors,\n    };\n};\n\nlet uid = 0;\nconst getUid = () => (uid === Number.MAX_VALUE ? 0 : uid++);\nconst transitionStates = {\n    default: 0,\n    displaying: 1,\n    hiding: 2,\n};\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultDialogicOptions, identityOptions));\nconst filterBySpawn = (identityOptions) => (items) => identityOptions.spawn !== undefined\n    ? items.filter(item => item.identityOptions.spawn === identityOptions.spawn)\n    : items;\nconst filterById = (identityOptions) => (items) => identityOptions.id !== undefined\n    ? items.filter(item => item.identityOptions.id === identityOptions.id)\n    : items;\n/**\n * Gets a list of all non-queued items.\n * From the queued items only the first item is listed.\n * */\nconst filterFirstInQueue = (nsItems) => {\n    let queuedCount = 0;\n    return nsItems\n        .map(item => ({\n        item,\n        queueCount: item.dialogicOptions.queued ? queuedCount++ : 0,\n    }))\n        .filter(({ queueCount }) => queueCount === 0)\n        .map(({ item }) => item);\n};\nconst filterCandidates = (ns, items, identityOptions) => {\n    const nsItems = items[ns] || [];\n    if (nsItems.length == 0) {\n        return [];\n    }\n    return pipe(filterBySpawn(identityOptions), filterFirstInQueue)(nsItems);\n};\nconst getPassThroughOptions = options => {\n    const copy = {\n        ...options,\n    };\n    delete copy.dialogic;\n    return copy;\n};\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\n    id: identityOptions.id || defaultDialogicOptions.id,\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\n});\nconst handleOptions = (defaultDialogicOptions, options = {}) => {\n    const identityOptions = {\n        id: options.dialogic ? options.dialogic.id : undefined,\n        spawn: options.dialogic ? options.dialogic.spawn : undefined,\n    };\n    const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions || {}, identityOptions);\n    const dialogicOptions = {\n        ...defaultDialogicOptions,\n        ...options.dialogic,\n        __transitionTimeoutId__: 0,\n    };\n    const passThroughOptions = getPassThroughOptions(options);\n    return {\n        identityOptions: mergedIdentityOptions,\n        dialogicOptions,\n        passThroughOptions,\n    };\n};\nconst createInstance = (ns) => (defaultDialogicOptions) => (options = {}) => {\n    const { identityOptions, dialogicOptions, passThroughOptions, } = handleOptions(defaultDialogicOptions, options);\n    return new Promise(resolve => {\n        const callbacks = {\n            willShow: (item) => {\n                if (dialogicOptions.willShow) {\n                    dialogicOptions.willShow(item);\n                }\n                return resolve(item);\n            },\n            willHide: (item) => {\n                if (dialogicOptions.willHide) {\n                    dialogicOptions.willHide(item);\n                }\n                return resolve(item);\n            },\n            didShow: (item) => {\n                if (dialogicOptions.didShow) {\n                    dialogicOptions.didShow(item);\n                }\n                return resolve(item);\n            },\n            didHide: (item) => {\n                if (dialogicOptions.didHide) {\n                    dialogicOptions.didHide(item);\n                }\n                return resolve(item);\n            },\n        };\n        const item = {\n            ns,\n            identityOptions,\n            dialogicOptions,\n            callbacks,\n            passThroughOptions,\n            id: createId(identityOptions, ns),\n            timer: dialogicOptions.timeout ? Timer() : undefined,\n            key: getUid().toString(),\n            transitionState: transitionStates.default,\n        };\n        const maybeExistingItem = selectors.find(ns, identityOptions);\n        if (maybeExistingItem.just && dialogicOptions.toggle) {\n            const hideResult = hide(ns)(defaultDialogicOptions)(options);\n            return resolve(hideResult);\n        }\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\n            const existingItem = maybeExistingItem.just;\n            // Preserve dialogicOptions\n            const dialogicOptions = existingItem.dialogicOptions;\n            const replacingItem = {\n                ...item,\n                key: existingItem.key,\n                transitionState: existingItem.transitionState,\n                dialogicOptions,\n            };\n            actions.replace(ns, existingItem.id, replacingItem);\n        }\n        else {\n            actions.add(ns, item);\n            // This will instantiate and draw the instance\n            // The instance will call `showDialog` in `onMount`\n        }\n        resolve(item);\n    });\n};\nconst show = createInstance;\nconst hide = (ns) => (defaultDialogicOptions) => (options) => {\n    const { identityOptions, dialogicOptions, passThroughOptions, } = handleOptions(defaultDialogicOptions, options);\n    const maybeExistingItem = selectors.find(ns, identityOptions);\n    if (maybeExistingItem.just) {\n        const existingItem = maybeExistingItem.just;\n        const item = {\n            ...existingItem,\n            dialogicOptions: {\n                ...existingItem.dialogicOptions,\n                ...dialogicOptions,\n            },\n            passThroughOptions: {\n                ...existingItem.passThroughOptions,\n                passThroughOptions,\n            },\n        };\n        actions.replace(ns, existingItem.id, item);\n        if (item.transitionState !== transitionStates.hiding) {\n            return hideItem(item);\n        }\n        else {\n            return Promise.resolve(item);\n        }\n    }\n    return Promise.resolve();\n};\nconst pause = (ns) => (defaultDialogicOptions) => (identityOptions) => {\n    const items = getValidItems(ns, identityOptions).filter(item => !!item.timer);\n    items.forEach((item) => item.timer && item.timer.actions.pause());\n    return Promise.all(items);\n};\nconst resume = (ns) => (defaultDialogicOptions) => (commandOptions) => {\n    const options = commandOptions || {};\n    const identityOptions = {\n        id: options.id,\n        spawn: options.spawn,\n    };\n    const items = getValidItems(ns, identityOptions).filter(item => !!item.timer);\n    items.forEach((item) => item.timer && item.timer.actions.resume(options.minimumDuration));\n    return Promise.all(items);\n};\nconst getTimerProperty = (timerProp, defaultValue) => (ns) => (defaultDialogicOptions) => (identityOptions) => {\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\n    if (maybeItem.just) {\n        if (maybeItem.just && maybeItem.just.timer) {\n            return maybeItem.just.timer.selectors[timerProp]();\n        }\n        else {\n            return defaultValue;\n        }\n    }\n    else {\n        return defaultValue;\n    }\n};\nconst isPaused = getTimerProperty('isPaused', false);\nconst getRemaining$1 = getTimerProperty('getRemaining', undefined);\nconst exists = (ns) => (defaultDialogicOptions) => (identityOptions) => !!getValidItems(ns, identityOptions).length;\nconst getValidItems = (ns, identityOptions) => {\n    const allItems = selectors.getAll(ns);\n    let validItems;\n    if (identityOptions) {\n        validItems = pipe(filterBySpawn(identityOptions), filterById(identityOptions))(allItems);\n    }\n    else {\n        validItems = allItems;\n    }\n    return validItems;\n};\nconst resetAll = (ns) => (defaultDialogicOptions) => (identityOptions) => {\n    const validItems = getValidItems(ns, identityOptions);\n    const items = [];\n    validItems.forEach((item) => {\n        item.timer && item.timer.actions.abort();\n        items.push(item);\n    });\n    if (identityOptions) {\n        items.forEach((item) => {\n            actions.remove(ns, item.id);\n        });\n    }\n    else {\n        actions.removeAll(ns);\n    }\n    return Promise.resolve(items);\n};\nconst getOverridingTransitionOptions = (item, dialogicOptions) => {\n    return {\n        ...item,\n        dialogicOptions: {\n            ...item.dialogicOptions,\n            ...dialogicOptions,\n        },\n    };\n};\n/**\n * Triggers a `hideItem` for each item in the store.\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\n * Optional `dialogicOptions` may be passed with specific transition options. This comes in handy when all items should hide in the same way.\n */\nconst hideAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\n    const options = dialogicOptions || {};\n    const identityOptions = {\n        id: options.id,\n        spawn: options.spawn,\n    };\n    const validItems = getValidItems(ns, identityOptions);\n    const regularItems = validItems.filter((item) => !options.queued && !item.dialogicOptions.queued);\n    const queuedItems = validItems.filter((item) => options.queued || item.dialogicOptions.queued);\n    const items = [];\n    regularItems.forEach((item) => items.push(hideItem(getOverridingTransitionOptions(item, options))));\n    if (queuedItems.length > 0) {\n        const [current] = queuedItems;\n        // Make sure that any remaining items don't suddenly appear\n        actions.store(ns, [current]);\n        // Transition the current item\n        items.push(hideItem(getOverridingTransitionOptions(current, options)));\n    }\n    return Promise.all(items);\n};\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\nconst transitionItem = (item, mode) => transition(item.dialogicOptions, mode);\nconst deferredHideItem = async function (item, timer, timeout) {\n    timer.actions.start(() => hideItem(item), timeout);\n    return getTimerProperty('getResultPromise', undefined);\n};\nconst showItem = async function (item) {\n    if (item.callbacks.willShow) {\n        item.callbacks.willShow(item);\n    }\n    if (item.transitionState !== transitionStates.displaying) {\n        item.transitionState = transitionStates.displaying;\n        await transitionItem(item, MODE.SHOW);\n    }\n    if (item.callbacks.didShow) {\n        item.callbacks.didShow(item);\n    }\n    if (item.dialogicOptions.timeout && item.timer) {\n        await deferredHideItem(item, item.timer, item.dialogicOptions.timeout);\n    }\n    return Promise.resolve(item);\n};\nconst hideItem = async function (item) {\n    item.transitionState = transitionStates.hiding;\n    // Stop any running timer\n    if (item.timer) {\n        item.timer.actions.stop();\n    }\n    if (item.callbacks.willHide) {\n        item.callbacks.willHide(item);\n    }\n    await transitionItem(item, MODE.HIDE);\n    if (item.callbacks.didHide) {\n        item.callbacks.didHide(item);\n    }\n    const copy = {\n        ...item,\n    };\n    actions.remove(item.ns, item.id);\n    return Promise.resolve(copy);\n};\nconst setDomElement = (domElement, item) => {\n    item.dialogicOptions.domElement = domElement;\n};\n\nconst dialogical = ({ ns, queued, timeout, }) => {\n    const defaultId = `default_${ns}`;\n    const defaultSpawn = `default_${ns}`;\n    const defaultDialogicOptions = {\n        id: defaultId,\n        spawn: defaultSpawn,\n        ...(queued && { queued }),\n        ...(timeout !== undefined && { timeout }),\n    };\n    return {\n        // Identification\n        ns,\n        defaultId,\n        defaultSpawn,\n        // Configuration\n        defaultDialogicOptions,\n        // Commands\n        show: show(ns)(defaultDialogicOptions),\n        hide: hide(ns)(defaultDialogicOptions),\n        hideAll: hideAll(ns)(defaultDialogicOptions),\n        resetAll: resetAll(ns)(defaultDialogicOptions),\n        // Timer commands\n        pause: pause(ns)(defaultDialogicOptions),\n        resume: resume(ns)(defaultDialogicOptions),\n        // State\n        exists: exists(ns)(defaultDialogicOptions),\n        getCount: getCount(ns),\n        // Timer state\n        isPaused: isPaused(ns)(defaultDialogicOptions),\n        getRemaining: getRemaining$1(ns)(defaultDialogicOptions),\n    };\n};\n\nconst dialog = dialogical({ ns: 'dialog' });\n\nconst notification = dialogical({\n    ns: 'notification',\n    queued: true,\n    timeout: 3000,\n});\n\n/**\n * Utility script that uses an animation frame to pass the current remaining value\n * (which is utilized when setting `timeout`).\n */\nconst remaining = (props) => {\n    let displayValue = undefined;\n    let reqId;\n    let isCanceled = false;\n    const identity = {\n        id: props.id,\n        spawn: props.spawn,\n    };\n    const update = () => {\n        const remaining = props.instance.getRemaining(identity);\n        if (displayValue !== remaining) {\n            displayValue =\n                remaining === undefined\n                    ? remaining\n                    : props.roundToSeconds\n                        ? Math.round(Math.max(remaining, 0) / 1000)\n                        : Math.max(remaining, 0);\n        }\n        props.callback(displayValue);\n        if (!props.instance.exists(identity)) {\n            window.cancelAnimationFrame(reqId);\n            isCanceled = true;\n        }\n        else if (!isCanceled) {\n            reqId = window.requestAnimationFrame(update);\n        }\n    };\n    reqId = window.requestAnimationFrame(update);\n};\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, remaining, resetAll, resume, selectors, setDomElement, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { states, selectors, isPaused as isPaused$1, exists as exists$1, dialog as dialog$1, notification as notification$1, setDomElement, showItem, hideItem, filterCandidates } from 'dialogic';\nimport { writable, derived } from 'svelte/store';\nimport { SvelteComponent, init, safe_not_equal, element, create_component, attr, insert, mount_component, get_spread_update, get_spread_object, group_outros, transition_out, destroy_component, check_outros, transition_in, detach, assign, binding_callbacks, empty, update_keyed_each, outro_and_destroy_block, component_subscribe, exclude_internal_props, subscribe, noop } from 'svelte/internal';\nimport { createEventDispatcher, onMount } from 'svelte';\n\nconst appState = {\n  ...writable(states),\n  ...selectors,\n};\nstates.map(state =>\n  appState.set({\n    ...state,\n    ...selectors,\n  }),\n);\nconst getCount = ns => identityOptions =>\n  derived(appState, () => selectors.getCount(ns, identityOptions));\nconst isPaused = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    isPaused$1(ns)(defaultDialogicOptions)(identityOptions),\n  );\nconst exists = ns => defaultDialogicOptions => identityOptions =>\n  derived(appState, () =>\n    exists$1(ns)(defaultDialogicOptions)(identityOptions),\n  );\n\nconst dialog = {\n  ...dialog$1,\n  getCount: identityOptions => getCount(dialog$1.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(dialog$1.ns)(dialog$1.defaultDialogicOptions)(identityOptions),\n  exists: identityOptions =>\n    exists(dialog$1.ns)(dialog$1.defaultDialogicOptions)(identityOptions),\n};\n\nconst notification = {\n  ...notification$1,\n  getCount: identityOptions => getCount(notification$1.ns)(identityOptions),\n  isPaused: identityOptions =>\n    isPaused(notification$1.ns)(notification$1.defaultDialogicOptions)(\n      identityOptions,\n    ),\n  exists: identityOptions =>\n    exists(notification$1.ns)(notification$1.defaultDialogicOptions)(\n      identityOptions,\n    ),\n};\n\nconst handleDispatch = ns => (event, fn) => {\n  const maybeItem = selectors.find(ns, event.detail.identityOptions);\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  const maybeTransitioningItem = selectors.find(\n    ns,\n    event.detail.identityOptions,\n  );\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\nconst onInstanceMounted = ns => event =>\n  handleDispatch(ns)(event, showItem);\nconst onShowInstance = ns => event =>\n  handleDispatch(ns)(event, showItem);\nconst onHideInstance = ns => event =>\n  handleDispatch(ns)(event, hideItem);\n\n/* src/Instance.svelte generated by Svelte v3.31.0 */\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet switch_instance;\n\tlet current;\n\n\tconst switch_instance_spread_levels = [\n\t\t{ show: /*show*/ ctx[4] },\n\t\t{ hide: /*hide*/ ctx[5] },\n\t\t/*passThroughOptions*/ ctx[0]\n\t];\n\n\tvar switch_value = /*dialogicOptions*/ ctx[1].component;\n\n\tfunction switch_props(ctx) {\n\t\tlet switch_instance_props = {};\n\n\t\tfor (let i = 0; i < switch_instance_spread_levels.length; i += 1) {\n\t\t\tswitch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);\n\t\t}\n\n\t\treturn { props: switch_instance_props };\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props());\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tattr(div, \"class\", /*className*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, div, null);\n\t\t\t}\n\n\t\t\t/*div_binding*/ ctx[7](div);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst switch_instance_changes = (dirty & /*show, hide, passThroughOptions*/ 49)\n\t\t\t? get_spread_update(switch_instance_spread_levels, [\n\t\t\t\t\tdirty & /*show*/ 16 && { show: /*show*/ ctx[4] },\n\t\t\t\t\tdirty & /*hide*/ 32 && { hide: /*hide*/ ctx[5] },\n\t\t\t\t\tdirty & /*passThroughOptions*/ 1 && get_spread_object(/*passThroughOptions*/ ctx[0])\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tif (switch_value !== (switch_value = /*dialogicOptions*/ ctx[1].component)) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props());\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, div, null);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (switch_instance) destroy_component(switch_instance);\n\t\t\t/*div_binding*/ ctx[7](null);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tconst dispatch = createEventDispatcher();\n\n\t// DOM bindings\n\tlet domElement;\n\n\tlet { identityOptions } = $$props;\n\tlet { passThroughOptions } = $$props;\n\tlet { dialogicOptions } = $$props;\n\tconst className = dialogicOptions ? dialogicOptions.className : \"\";\n\tconst dispatchTransition = name => dispatch(name, { identityOptions, domElement });\n\n\tconst show = () => {\n\t\tdispatchTransition(\"show\");\n\t};\n\n\tconst hide = () => {\n\t\tdispatchTransition(\"hide\");\n\t};\n\n\tonMount(() => {\n\t\tdispatchTransition(\"mount\");\n\t});\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? \"unshift\" : \"push\"](() => {\n\t\t\tdomElement = $$value;\n\t\t\t$$invalidate(2, domElement);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"identityOptions\" in $$props) $$invalidate(6, identityOptions = $$props.identityOptions);\n\t\tif (\"passThroughOptions\" in $$props) $$invalidate(0, passThroughOptions = $$props.passThroughOptions);\n\t\tif (\"dialogicOptions\" in $$props) $$invalidate(1, dialogicOptions = $$props.dialogicOptions);\n\t};\n\n\treturn [\n\t\tpassThroughOptions,\n\t\tdialogicOptions,\n\t\tdomElement,\n\t\tclassName,\n\t\tshow,\n\t\thide,\n\t\tidentityOptions,\n\t\tdiv_binding\n\t];\n}\n\nclass Instance extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {\n\t\t\tidentityOptions: 6,\n\t\t\tpassThroughOptions: 0,\n\t\t\tdialogicOptions: 1\n\t\t});\n\t}\n}\n\n/* src/Wrapper.svelte generated by Svelte v3.31.0 */\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[1] = list[i].identityOptions;\n\tchild_ctx[6] = list[i].dialogicOptions;\n\tchild_ctx[7] = list[i].passThroughOptions;\n\tchild_ctx[8] = list[i].key;\n\tchild_ctx[10] = i;\n\treturn child_ctx;\n}\n\n// (17:0) {#each filterCandidates(ns, $appState.store, identityOptions) as { identityOptions, dialogicOptions, passThroughOptions, key }\nfunction create_each_block(key_1, ctx) {\n\tlet first;\n\tlet instance;\n\tlet current;\n\n\tinstance = new Instance({\n\t\t\tprops: {\n\t\t\t\tidentityOptions: /*identityOptions*/ ctx[1],\n\t\t\t\tdialogicOptions: /*dialogicOptions*/ ctx[6],\n\t\t\t\tpassThroughOptions: /*passThroughOptions*/ ctx[7]\n\t\t\t}\n\t\t});\n\n\tinstance.$on(\"mount\", /*nsOnInstanceMounted*/ ctx[3]);\n\tinstance.$on(\"show\", /*nsOnShowInstance*/ ctx[4]);\n\tinstance.$on(\"hide\", /*nsOnHideInstance*/ ctx[5]);\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tfirst = empty();\n\t\t\tcreate_component(instance.$$.fragment);\n\t\t\tthis.first = first;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, first, anchor);\n\t\t\tmount_component(instance, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst instance_changes = {};\n\t\t\tif (dirty & /*ns, $appState, identityOptions*/ 7) instance_changes.identityOptions = /*identityOptions*/ ctx[1];\n\t\t\tif (dirty & /*ns, $appState, identityOptions*/ 7) instance_changes.dialogicOptions = /*dialogicOptions*/ ctx[6];\n\t\t\tif (dirty & /*ns, $appState, identityOptions*/ 7) instance_changes.passThroughOptions = /*passThroughOptions*/ ctx[7];\n\t\t\tinstance.$set(instance_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(first);\n\t\t\tdestroy_component(instance, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$1(ctx) {\n\tlet each_blocks = [];\n\tlet each_1_lookup = new Map();\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = filterCandidates(/*ns*/ ctx[0], /*$appState*/ ctx[2].store, /*identityOptions*/ ctx[1]);\n\tconst get_key = ctx => /*key*/ ctx[8];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\tlet child_ctx = get_each_context(ctx, each_value, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*filterCandidates, ns, $appState, identityOptions, nsOnInstanceMounted, nsOnShowInstance, nsOnHideInstance*/ 63) {\n\t\t\t\tconst each_value = filterCandidates(/*ns*/ ctx[0], /*$appState*/ ctx[2].store, /*identityOptions*/ ctx[1]);\n\t\t\t\tgroup_outros();\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d(detaching);\n\t\t\t}\n\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\nfunction instance_1($$self, $$props, $$invalidate) {\n\tlet $appState;\n\tcomponent_subscribe($$self, appState, $$value => $$invalidate(2, $appState = $$value));\n\tlet { identityOptions } = $$props;\n\tlet { ns } = $$props;\n\tconst nsOnInstanceMounted = onInstanceMounted(ns);\n\tconst nsOnShowInstance = onShowInstance(ns);\n\tconst nsOnHideInstance = onHideInstance(ns);\n\n\t$$self.$$set = $$props => {\n\t\tif (\"identityOptions\" in $$props) $$invalidate(1, identityOptions = $$props.identityOptions);\n\t\tif (\"ns\" in $$props) $$invalidate(0, ns = $$props.ns);\n\t};\n\n\treturn [\n\t\tns,\n\t\tidentityOptions,\n\t\t$appState,\n\t\tnsOnInstanceMounted,\n\t\tnsOnShowInstance,\n\t\tnsOnHideInstance\n\t];\n}\n\nclass Wrapper extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance_1, create_fragment$1, safe_not_equal, { identityOptions: 1, ns: 0 });\n\t}\n}\n\n/* src/Dialogical.svelte generated by Svelte v3.31.0 */\n\nfunction create_fragment$2(ctx) {\n\tlet wrapper;\n\tlet current;\n\n\twrapper = new Wrapper({\n\t\t\tprops: {\n\t\t\t\tidentityOptions: /*identityOptions*/ ctx[1],\n\t\t\t\tns: /*ns*/ ctx[0]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(wrapper.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(wrapper, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst wrapper_changes = {};\n\t\t\tif (dirty & /*ns*/ 1) wrapper_changes.ns = /*ns*/ ctx[0];\n\t\t\twrapper.$set(wrapper_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(wrapper.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(wrapper.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(wrapper, detaching);\n\t\t}\n\t};\n}\n\nfunction instance_1$1($$self, $$props, $$invalidate) {\n\tlet { instance } = $$props;\n\tlet { ns = instance.ns } = $$props;\n\tlet { spawn = undefined } = $$props;\n\tlet { id = undefined } = $$props;\n\tlet { onMount: onMount$1 = undefined } = $$props;\n\n\tconst identityOptions = {\n\t\tid: id || instance.defaultId,\n\t\tspawn: spawn || instance.defaultSpawn\n\t};\n\n\tonMount(() => {\n\t\tif (typeof onMount$1 === \"function\") {\n\t\t\tonMount$1();\n\t\t}\n\t});\n\n\t$$self.$$set = $$props => {\n\t\tif (\"instance\" in $$props) $$invalidate(2, instance = $$props.instance);\n\t\tif (\"ns\" in $$props) $$invalidate(0, ns = $$props.ns);\n\t\tif (\"spawn\" in $$props) $$invalidate(3, spawn = $$props.spawn);\n\t\tif (\"id\" in $$props) $$invalidate(4, id = $$props.id);\n\t\tif (\"onMount\" in $$props) $$invalidate(5, onMount$1 = $$props.onMount);\n\t};\n\n\treturn [ns, identityOptions, instance, spawn, id, onMount$1];\n}\n\nclass Dialogical extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance_1$1, create_fragment$2, safe_not_equal, {\n\t\t\tinstance: 2,\n\t\t\tns: 0,\n\t\t\tspawn: 3,\n\t\t\tid: 4,\n\t\t\tonMount: 5\n\t\t});\n\t}\n}\n\n/* src/Dialog.svelte generated by Svelte v3.31.0 */\n\nfunction create_fragment$3(ctx) {\n\tlet dialogical;\n\tlet current;\n\tconst dialogical_spread_levels = [/*$$props*/ ctx[0], { instance: dialog }];\n\tlet dialogical_props = {};\n\n\tfor (let i = 0; i < dialogical_spread_levels.length; i += 1) {\n\t\tdialogical_props = assign(dialogical_props, dialogical_spread_levels[i]);\n\t}\n\n\tdialogical = new Dialogical({ props: dialogical_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(dialogical.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(dialogical, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst dialogical_changes = (dirty & /*$$props, dialog*/ 1)\n\t\t\t? get_spread_update(dialogical_spread_levels, [\n\t\t\t\t\tdirty & /*$$props*/ 1 && get_spread_object(/*$$props*/ ctx[0]),\n\t\t\t\t\tdirty & /*dialog*/ 0 && { instance: dialog }\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tdialogical.$set(dialogical_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(dialogical.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(dialogical.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(dialogical, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass Dialog extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$3, safe_not_equal, {});\n\t}\n}\n\n/* src/Notification.svelte generated by Svelte v3.31.0 */\n\nfunction create_fragment$4(ctx) {\n\tlet dialogical;\n\tlet current;\n\tconst dialogical_spread_levels = [/*$$props*/ ctx[0], { instance: notification }];\n\tlet dialogical_props = {};\n\n\tfor (let i = 0; i < dialogical_spread_levels.length; i += 1) {\n\t\tdialogical_props = assign(dialogical_props, dialogical_spread_levels[i]);\n\t}\n\n\tdialogical = new Dialogical({ props: dialogical_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(dialogical.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(dialogical, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst dialogical_changes = (dirty & /*$$props, notification*/ 1)\n\t\t\t? get_spread_update(dialogical_spread_levels, [\n\t\t\t\t\tdirty & /*$$props*/ 1 && get_spread_object(/*$$props*/ ctx[0]),\n\t\t\t\t\tdirty & /*notification*/ 0 && { instance: notification }\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tdialogical.$set(dialogical_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(dialogical.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(dialogical.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(dialogical, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass Notification extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$2, create_fragment$4, safe_not_equal, {});\n\t}\n}\n\n/* src/UseDialogic.svelte generated by Svelte v3.31.0 */\nlet useDialogicCounter = 0;\nconst useEffect = subscribe => ({ subscribe });\n\nfunction instance_1$2($$self, $$props, $$invalidate) {\n\tlet $effect,\n\t\t$$unsubscribe_effect = noop,\n\t\t$$subscribe_effect = () => ($$unsubscribe_effect(), $$unsubscribe_effect = subscribe(effect, $$value => $$invalidate(7, $effect = $$value)), effect);\n\n\t$$self.$$.on_destroy.push(() => $$unsubscribe_effect());\n\tconst id = useDialogicCounter++;\n\tlet { props } = $$props;\n\tlet { isShow = undefined } = $$props;\n\tlet { isHide = undefined } = $$props;\n\tlet { isIgnore = undefined } = $$props;\n\tlet { deps } = $$props;\n\tlet { instance } = $$props;\n\n\tconst showInstance = () => {\n\t\tinstance.show(augProps);\n\t};\n\n\tconst hideInstance = () => {\n\t\tinstance.hide(augProps);\n\t};\n\n\tlet effect;\n\n\tonMount(() => {\n\t\treturn () => {\n\t\t\thideInstance();\n\t\t};\n\t});\n\n\t$$self.$$set = $$props => {\n\t\tif (\"props\" in $$props) $$invalidate(1, props = $$props.props);\n\t\tif (\"isShow\" in $$props) $$invalidate(2, isShow = $$props.isShow);\n\t\tif (\"isHide\" in $$props) $$invalidate(3, isHide = $$props.isHide);\n\t\tif (\"isIgnore\" in $$props) $$invalidate(4, isIgnore = $$props.isIgnore);\n\t\tif (\"deps\" in $$props) $$invalidate(5, deps = $$props.deps);\n\t\tif (\"instance\" in $$props) $$invalidate(6, instance = $$props.instance);\n\t};\n\n\tlet augProps;\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*props*/ 2) {\n\t\t\t// Make augProps reactive\n\t\t\t augProps = {\n\t\t\t\t...props,\n\t\t\t\t...props.dialogic\n\t\t\t\t? {\n\t\t\t\t\t\tdialogic: {\n\t\t\t\t\t\t\t...props.dialogic,\n\t\t\t\t\t\t\tid: props.dialogic.id || id\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t: { dialogic: { id } }\n\t\t\t};\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*deps, isIgnore, isShow, isHide*/ 60) {\n\t\t\t $$subscribe_effect($$invalidate(0, effect = useEffect(() => {\n\n\t\t\t\tif (!isIgnore) {\n\t\t\t\t\tif (isShow !== undefined) {\n\t\t\t\t\t\tif (isShow) {\n\t\t\t\t\t\t\tshowInstance();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thideInstance();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isHide !== undefined) {\n\t\t\t\t\t\tif (isHide) {\n\t\t\t\t\t\t\thideInstance();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn () => {\n\t\t\t\t\t\n\t\t\t\t}; // required\n\t\t\t})));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*$effect*/ 128) ;\n\t};\n\n\treturn [effect, props, isShow, isHide, isIgnore, deps, instance, $effect];\n}\n\nclass UseDialogic extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance_1$2, null, safe_not_equal, {\n\t\t\tprops: 1,\n\t\t\tisShow: 2,\n\t\t\tisHide: 3,\n\t\t\tisIgnore: 4,\n\t\t\tdeps: 5,\n\t\t\tinstance: 6\n\t\t});\n\t}\n}\n\n/* src/UseDialog.svelte generated by Svelte v3.31.0 */\n\nfunction create_fragment$5(ctx) {\n\tlet usedialogic;\n\tlet current;\n\tconst usedialogic_spread_levels = [{ instance: dialog$1 }, /*$$props*/ ctx[0]];\n\tlet usedialogic_props = {};\n\n\tfor (let i = 0; i < usedialogic_spread_levels.length; i += 1) {\n\t\tusedialogic_props = assign(usedialogic_props, usedialogic_spread_levels[i]);\n\t}\n\n\tusedialogic = new UseDialogic({ props: usedialogic_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(usedialogic.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(usedialogic, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst usedialogic_changes = (dirty & /*dialog, $$props*/ 1)\n\t\t\t? get_spread_update(usedialogic_spread_levels, [\n\t\t\t\t\tdirty & /*dialog*/ 0 && { instance: dialog$1 },\n\t\t\t\t\tdirty & /*$$props*/ 1 && get_spread_object(/*$$props*/ ctx[0])\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tusedialogic.$set(usedialogic_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(usedialogic.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(usedialogic.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(usedialogic, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass UseDialog extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$3, create_fragment$5, safe_not_equal, {});\n\t}\n}\n\nexport { Dialog, Dialogical, Notification, UseDialog, UseDialogic, dialog, notification };\n//# sourceMappingURL=dialogic-svelte.js.map\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script>\n  import { location } from 'svelte-spa-router';\n</script>\n\n<div class=\"control path-control\">\n  <span class=\"tag\" data-test-id=\"current-path\">{$location}</span>\n</div>\n","<script>\n  import CurrentPathBadge from './CurrentPathBadge.svelte';\n  import { link } from 'svelte-spa-router';\n</script>\n\n<div data-test-id=\"home-page\">\n  <h1 class=\"title\">Home</h1>\n  <CurrentPathBadge />\n  <p class=\"intro\">\n    This demo shows\n    <code>UseDialog</code>\n    that allows for a declarative way of controlling dialogs. The Profile dialog\n    responds to the route, and is automatically hidden when using the browser's\n    back button.\n  </p>\n  <div class=\"buttons\">\n    <a\n      class=\"button is-link\"\n      href={'/profile'}\n      use:link\n      data-test-id=\"btn-profile\">\n      Go to Profile\n    </a>\n  </div>\n</div>\n","<script>\n  import { link } from 'svelte-spa-router';\n\n  export let title;\n  export let email;\n  export let onSave;\n  export let onCancel;\n  export let increment;\n\n  let newEmail = email;\n</script>\n\n<div class=\"modal is-active\" data-test-id=\"edit-profile-dialog\">\n  <div class=\"modal-background\" />\n  <form\n    class=\"modal-card\"\n    on:submit={e => {\n      e.preventDefault();\n      onSave(newEmail);\n    }}>\n    <header class=\"modal-card-head\">\n      <p class=\"modal-card-title\" data-test-id=\"title\">{title}</p>\n      <button class=\"delete\" data-test-id=\"btn-close\" on:click={onCancel} />\n    </header>\n    <section class=\"modal-card-body\">\n      <div class=\"field\">\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            data-test-id=\"input-email\"\n            bind:value={newEmail} />\n        </div>\n      </div>\n    </section>\n    <footer class=\"modal-card-foot\">\n      <div class=\"footer-buttons\">\n        <button\n          type=\"submit\"\n          class=\"button is-link\"\n          data-test-id=\"btn-save\"\n          on:click={e => {\n            e.preventDefault();\n            onSave(newEmail);\n          }}>\n          Save changes\n        </button>\n        <a\n          class=\"button is-link is-light is-outlined\"\n          href=\"/\"\n          use:link\n          data-test-id=\"btn-home\">\n          Go to Home\n        </a>\n        <button\n          type=\"button\"\n          class=\"button is-link is-light is-outlined\"\n          data-test-id=\"btn-add-count\"\n          on:click={increment}>\n          Dynamic title count\n        </button>\n        <button\n          type=\"button\"\n          class=\"button is-danger is-light is-outlined\"\n          data-test-id=\"btn-cancel\"\n          on:click={onCancel}>\n          Cancel\n        </button>\n      </div>\n    </footer>\n  </form>\n</div>\n","import { writable } from 'svelte/store';\n\nexport const email = writable('allan@company.com');\nexport const counter = writable(0);\nexport const increment = () => counter.update(n => n + 1);\n","<script context=\"module\">\n  export const createSaveConfirmationProps = SaveConfirmationComponent => ({\n    dialogic: {\n      component: SaveConfirmationComponent,\n      className: 'demo-notification',\n      styles: domElement => {\n        const height = domElement.getBoundingClientRect().height;\n\n        return {\n          default: {\n            transition: 'all 350ms ease-in-out',\n          },\n          showStart: {\n            transform: `translate3d(0, ${height}px, 0)`,\n          },\n          showEnd: {\n            transform: 'translate3d(0, 0px,  0)',\n            transitionDelay: '500ms',\n          },\n          hideEnd: {\n            transitionDuration: '450ms',\n            transform: `translate3d(0, ${height}px, 0)`,\n          },\n        };\n      },\n    },\n    content: 'E-mail address updated',\n  });\n</script>\n\n<script>\n  export let content;\n</script>\n\n<div class=\"notification-content\" data-test-id=\"notification\">{content}</div>\n","<script>\n  import CurrentPathBadge from './CurrentPathBadge.svelte';\n  import EditProfileDialog from './EditProfileDialog.svelte';\n  import { UseDialog, notification } from 'dialogic-svelte';\n  import { link } from 'svelte-spa-router';\n  import { location, push } from 'svelte-spa-router';\n  import { email, counter, increment } from './store';\n  import SaveConfirmation, {\n    createSaveConfirmationProps,\n  } from './SaveConfirmation.svelte';\n\n  /* Location */\n  const dialogPath = '/profile/edit';\n  const dialogReturnPath = '/profile';\n  $: isMatchDialogPath = $location === dialogPath;\n\n  // UseDialog props\n  // Make props reactive so that the title gets updated with changes to counter\n  $: useDialogProps = {\n    dialogic: {\n      component: EditProfileDialog,\n      className: 'dialog',\n    },\n    title: `Update your e-mail ${$counter}`,\n    email: $email,\n    onSave: newEmail => {\n      if (newEmail !== $email) {\n        email.set(newEmail);\n        notification.show(createSaveConfirmationProps(SaveConfirmation));\n      }\n      push(dialogReturnPath);\n    },\n    onCancel: () => {\n      push(dialogReturnPath); // we could also pass dialogReturnPath to the dialog to use it as a link href\n    },\n    increment,\n  };\n</script>\n\n<div data-test-id=\"profile-page\">\n  <h1 class=\"title\">Profile</h1>\n  <CurrentPathBadge />\n\n  <div class=\"profile-tile\">\n    <div><strong>Email</strong></div>\n    <div data-test-id=\"current-email\">{$email}</div>\n    <a\n      class=\"button is-link\"\n      href={dialogPath}\n      use:link\n      data-test-id=\"btn-edit-profile\">\n      Edit\n    </a>\n  </div>\n\n  <div class=\"buttons\">\n    <a\n      class=\"button is-link is-light is-outlined\"\n      href={'/'}\n      use:link\n      data-test-id=\"btn-home\">\n      Go to Home\n    </a>\n  </div>\n  <UseDialog\n    props={useDialogProps}\n    isShow={isMatchDialogPath}\n    deps={[$counter]} />\n</div>\n","import HomePage from './HomePage.svelte';\nimport ProfilePage from './ProfilePage.svelte';\n\nexport default {\n  '/': HomePage,\n  '/profile/:edit?': ProfilePage,\n};\n","import App from './App.svelte';\n\nimport \"./styles.css\";\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","exclude_internal_props","props","result","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","Set","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","get_spread_object","spread_props","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","Stream","SKIP","lift","arguments","streams","prototype","merge","apply","scan","acc","origin","stream","v","next","combine","scanMerge","tuples","seed","tuple","changed","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","createEnd","_parents","_unregisterChild","constructor","_map","ignoreInitial","toJSON","x","s1","s2","child","childIndex","defineProperty","get","every","concat","mappers","endStream","mapper","console","log","module","pipe","Boolean","reduce","y","f","getStyleValue","domElement","prop","defaultView","style","getComputedStyle","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","toString","createClassList","className","split","applyStylesForState","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","scrollTop","steps","nextStep","transition","mode","clearTimeout","__transitionTimeoutId__","currentStep","setTimeout","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","isNaN","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","join","initialState","actions","state","timer","states","refresh","remaining","removeItem","replace","newItem","removeAll","newItems","selectors","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","isPaused","onAbort","onDone","promise","startTime","timeoutFn","timerId","appendStartTimer","updateState","Date","getTime","window","appendStopTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","transitionStates","filterBySpawn","filterFirstInQueue","nsItems","queuedCount","queueCount","dialogicOptions","queued","filterCandidates","getMergedIdentityOptions","defaultDialogicOptions","handleOptions","dialogic","passThroughOptions","copy","getPassThroughOptions","show","willShow","willHide","didShow","didHide","timeout","Number","MAX_VALUE","transitionState","maybeExistingItem","toggle","hideResult","hide","existingItem","replacingItem","hideItem","getValidItems","all","commandOptions","getTimerProperty","timerProp","defaultValue","maybeItem","getMaybeItem","getRemaining$1","exists","allItems","validItems","filterById","resetAll","getOverridingTransitionOptions","hideAll","regularItems","queuedItems","current","transitionItem","showItem","async","deferredHideItem","dialogical","defaultId","defaultSpawn","dialog","notification","subscriber_queue","readable","writable","subscribers","set","new_value","run_queue","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","appState","isPaused$1","exists$1","dialog$1","notification$1","handleDispatch","maybeTransitioningItem","div","switch_instance","switch_instance_spread_levels","switch_value","switch_props","switch_instance_props","switch_instance_changes","old_component","$set","$$self","$$invalidate","dispatch","dispatchTransition","$$value","Instance","super","get_each_context","list","child_ctx","create_each_block","key_1","first","$on","instance_changes","create_fragment$1","each_1_anchor","each_blocks","each_1_lookup","each_value","get_key","old_blocks","dynamic","get_context","old_indexes","new_blocks","new_lookup","deltas","abs","will_move","did_move","new_block","old_block","new_key","old_key","update_keyed_each","instance_1","$appState","nsOnInstanceMounted","onInstanceMounted","nsOnShowInstance","onShowInstance","nsOnHideInstance","onHideInstance","Wrapper","create_fragment$2","wrapper","wrapper_changes","instance_1$1","onMount$1","Dialogical","create_fragment$3","dialogical_spread_levels","dialogical_props","dialogical_changes","instance$1","$$new_props","Dialog","create_fragment$4","instance$2","Notification","useDialogicCounter","instance_1$2","$effect","$$unsubscribe_effect","isShow","isHide","isIgnore","deps","hideInstance","augProps","effect","useEffect","UseDialogic","create_fragment$5","usedialogic","usedialogic_spread_levels","usedialogic_props","usedialogic_changes","instance$3","UseDialog","getLocation","hashPosition","location","href","substr","qsPosition","querystring","loc","$loc","charAt","history","replaceState","scrollX","scrollY","hash","link","hrefVar","tagName","toLowerCase","updateLink","updated","scrollstateHistoryHandler","preventDefault","currentTarget","routes","prefix","restoreScrollState","RouteItem","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","shift","substring","regexparam","conditions","userData","_pattern","_keys","startsWith","match","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatchNextTick","previousScrollState","scrollTo","lastLoc","componentObj","newLoc","checkConditions","loading","loadingParams","loaded","default","scrollRestoration","title","email","onSave","onCancel","increment","newEmail","counter","content","dialogPath","dialogReturnPath","isMatchDialogPath","$location","useDialogProps","EditProfileDialog","$counter","$email","SaveConfirmation","height","getBoundingClientRect","transform","transitionDelay","/","/profile/:edit?","body"],"mappings":"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"}
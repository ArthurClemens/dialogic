{"version":3,"file":"dialogic-react.js","sources":["../src/instanceEvents.ts","../src/Instance.tsx","../src/Wrapper.tsx","../src/useDialogicState.tsx","../src/Dialogical.tsx","../src/useDialogic.tsx","../src/useRemaining.ts","../src/index.ts"],"sourcesContent":["import {\n  showItem,\n  hideItem,\n  selectors,\n  setDomElement,\n  Dialogic,\n} from 'dialogic';\n\nexport const handleDispatch = (ns: string) => (\n  event: Dialogic.InstanceEvent,\n  fn: Dialogic.InitiateItemTransitionFn,\n) => {\n  // Update dispatching item:\n  const maybeItem: Dialogic.MaybeItem<unknown> = selectors.find(\n    ns,\n    event.detail.identityOptions,\n  );\n  if (maybeItem.just) {\n    setDomElement(event.detail.domElement, maybeItem.just);\n  }\n  // Find item to transition:\n  const maybeTransitioningItem: Dialogic.MaybeItem<unknown> = selectors.find(\n    ns,\n    event.detail.identityOptions,\n  );\n  if (maybeTransitioningItem.just) {\n    fn(maybeTransitioningItem.just);\n  }\n};\n\nexport const onInstanceMounted = (ns: string) => (\n  event: Dialogic.InstanceEvent,\n) => handleDispatch(ns)(event, showItem);\n\nexport const onShowInstance = (ns: string) => (event: Dialogic.InstanceEvent) =>\n  handleDispatch(ns)(event, showItem);\n\nexport const onHideInstance = (ns: string) => (event: Dialogic.InstanceEvent) =>\n  handleDispatch(ns)(event, hideItem);\n","import React, { FunctionComponent, useCallback, useRef } from 'react';\nimport { Dialogic } from 'dialogic';\n\ninterface Instance\n  extends Dialogic.DialogicalInstanceOptions<Dialogic.PassThroughOptions> {}\n\nexport const Instance: FunctionComponent<Dialogic.DialogicalInstanceOptions<\n  Dialogic.PassThroughOptions\n>> = props => {\n  const domElementRef = useRef();\n  const className = props.dialogicOptions.className;\n  const Component = props.dialogicOptions.component as FunctionComponent<\n    Dialogic.PassThroughOptions\n  >;\n  if (!Component) {\n    throw 'Component missing in dialogic options.';\n  }\n\n  const domElementCb = useCallback(node => {\n    if (node !== null) {\n      domElementRef.current = node;\n      onMount();\n    }\n  }, []);\n\n  const dispatchTransition = (\n    dispatchFn: Dialogic.DialogicalInstanceDispatchFn,\n  ) => {\n    const domElement = domElementRef.current;\n    if (domElement === undefined) {\n      return;\n    }\n    dispatchFn({\n      detail: {\n        identityOptions: props.identityOptions,\n        domElement,\n      },\n    });\n  };\n\n  const onMount = () => {\n    dispatchTransition(props.onMount);\n  };\n\n  const show = () => {\n    dispatchTransition(props.onShow);\n  };\n\n  const hide = () => {\n    dispatchTransition(props.onHide);\n  };\n\n  return (\n    <div ref={domElementCb} className={className}>\n      <Component {...props.passThroughOptions} show={show} hide={hide} />\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { filterCandidates, selectors, Dialogic } from 'dialogic';\nimport {\n  onInstanceMounted,\n  onShowInstance,\n  onHideInstance,\n} from './instanceEvents';\nimport { Instance } from './Instance';\n\ninterface WrapperProps extends Dialogic.DialogicalWrapperOptions {}\n\nexport const Wrapper: FunctionComponent<WrapperProps> = props => {\n  const nsOnInstanceMounted = onInstanceMounted(props.ns);\n  const nsOnShowInstance = onShowInstance(props.ns);\n  const nsOnHideInstance = onHideInstance(props.ns);\n\n  const identityOptions: Dialogic.IdentityOptions =\n    props.identityOptions || ({} as Dialogic.IdentityOptions);\n  const filtered = filterCandidates(\n    props.ns,\n    selectors.getStore(),\n    identityOptions,\n  );\n\n  return (\n    <>\n      {filtered.map(item => (\n        <Instance\n          key={item.key}\n          identityOptions={item.identityOptions}\n          dialogicOptions={\n            item.dialogicOptions as Dialogic.DialogicOptions<\n              Dialogic.PassThroughOptions\n            >\n          }\n          passThroughOptions={\n            item.passThroughOptions as Dialogic.PassThroughOptions\n          }\n          onMount={nsOnInstanceMounted}\n          onShow={nsOnShowInstance}\n          onHide={nsOnHideInstance}\n        />\n      ))}\n    </>\n  );\n};\n","import { states, Dialogic } from 'dialogic';\nimport { useStream } from 'use-stream';\nimport { UseDialogicState } from '../index.d';\n\ntype TModel = {\n  _: Dialogic.States;\n};\n\nexport const useDialogicState: UseDialogicState = () => {\n  // Subscribe to changes\n  useStream<TModel>({\n    model: () => ({\n      _: states,\n    }),\n    defer: true,\n  });\n};\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { Dialogic } from 'dialogic';\nimport { Wrapper } from './Wrapper';\nimport { useDialogicState } from './useDialogicState';\n\ntype DialogicalFn = (\n  type: Dialogic.DialogicInstance,\n) => FunctionComponent<Dialogic.ComponentOptions>;\n\nexport const Dialogical: DialogicalFn = instance => props => {\n  useDialogicState();\n\n  const identityOptions = {\n    id: props.id || instance.defaultId,\n    spawn: props.spawn || instance.defaultSpawn,\n  };\n\n  // Mount\n  useEffect(() => {\n    if (typeof props.onMount === 'function') {\n      props.onMount();\n    }\n  }, []);\n\n  return <Wrapper identityOptions={identityOptions} ns={instance.ns} />;\n};\n","import { useEffect, useState } from 'react';\nimport { dialog, notification } from 'dialogic';\nimport React, { PropsWithChildren } from 'react';\nimport {\n  UseDialogicProps,\n  UseDialogicInstanceProps,\n  sharedUseDialogic,\n  sharedUseDialog,\n  sharedUseNotification,\n} from 'dialogic-hooks';\n\nexport const useDialogic = sharedUseDialogic({ useEffect, useState });\nexport const useDialog = sharedUseDialog({ useEffect, useState, dialog });\nexport const useNotification = sharedUseNotification({\n  useEffect,\n  useState,\n  notification,\n});\n\n/**\n * Helper component that wraps `useDialogic` to use with JSX syntax.\n */\nexport const UseDialogic = <T,>(\n  props: PropsWithChildren<UseDialogicInstanceProps<T>>,\n) => {\n  useDialogic<T>(props);\n  return null;\n};\n\nexport const UseDialog = <T,>(\n  props: PropsWithChildren<UseDialogicProps<T>>,\n) => <UseDialogic {...props} instance={dialog} />;\n\nexport const UseNotification = <T,>(\n  props: PropsWithChildren<UseDialogicProps<T>>,\n) => <UseDialogic {...props} instance={notification} />;\n","import { useState, useMemo } from 'react';\n\nimport { sharedUseRemaining } from 'dialogic-hooks';\n\nexport const useRemaining = sharedUseRemaining({ useState, useMemo });\n","import { dialog, notification } from 'dialogic';\nimport { Dialogical } from './Dialogical';\n\nconst Dialog = Dialogical(dialog);\nconst Notification = Dialogical(notification);\n\nexport { Dialogical, dialog, Dialog, notification, Notification };\n\nexport * from './useDialogic';\nexport * from './useRemaining';\nexport * from './useDialogicState';\n"],"names":["handleDispatch","ns","event","fn","maybeItem","selectors","find","detail","identityOptions","just","setDomElement","domElement","maybeTransitioningItem","Instance","props","domElementRef","useRef","className","dialogicOptions","Component","component","domElementCb","useCallback","node","current","onMount","dispatchTransition","dispatchFn","undefined","React","ref","passThroughOptions","show","onShow","hide","onHide","Wrapper","nsOnInstanceMounted","showItem","nsOnShowInstance","onShowInstance","nsOnHideInstance","hideItem","onHideInstance","filtered","filterCandidates","getStore","map","item","key","useDialogicState","useStream","model","_","states","defer","Dialogical","instance","id","defaultId","spawn","defaultSpawn","useEffect","useDialogic","sharedUseDialogic","useState","useDialog","sharedUseDialog","dialog","useNotification","sharedUseNotification","notification","UseDialogic","useRemaining","sharedUseRemaining","useMemo","Dialog","Notification"],"mappings":"qgBAQO,MAAMA,EAAkBC,GAAe,CAC5CC,EACAC,KAGA,MAAMC,EAAyCC,YAAUC,KACvDL,EACAC,EAAMK,OAAOC,iBAEXJ,EAAUK,MACZC,gBAAcR,EAAMK,OAAOI,WAAYP,EAAUK,MAGnD,MAAMG,EAAsDP,YAAUC,KACpEL,EACAC,EAAMK,OAAOC,iBAEXI,EAAuBH,MACzBN,EAAGS,EAAuBH,OCpBjBI,EAERC,IACH,MAAMC,EAAgBC,WAChBC,EAAYH,EAAMI,gBAAgBD,UAClCE,EAAYL,EAAMI,gBAAgBE,UAGxC,IAAKD,EACH,KAAM,yCAGR,MAAME,EAAeC,cAAYC,IAClB,OAATA,IACFR,EAAcS,QAAUD,EACxBE,MAED,IAEGC,EACJC,IAEA,MAAMhB,EAAaI,EAAcS,aACdI,IAAfjB,GAGJgB,EAAW,CACTpB,OAAQ,CACNC,gBAAiBM,EAAMN,gBACvBG,WAAAA,MAKAc,EAAU,KACdC,EAAmBZ,EAAMW,UAW3B,OACEI,+BAAKC,IAAKT,EAAcJ,UAAWA,GACjCY,wBAACV,mBAAcL,EAAMiB,oBAAoBC,KAVhC,KACXN,EAAmBZ,EAAMmB,SAS8BC,KAN5C,KACXR,EAAmBZ,EAAMqB,cCtChBC,EAA2CtB,IACtD,MAAMuB,GFkB0BpC,EElBca,EAAMb,GFmBpDC,GACGF,EAAeC,EAAfD,CAAmBE,EAAOoC,aAFE,IAACrC,EEjBhC,MAAMsC,EFqBsB,CAACtC,GAAgBC,GAC7CF,EAAeC,EAAfD,CAAmBE,EAAOoC,YEtBDE,CAAe1B,EAAMb,IACxCwC,EFuBsB,CAACxC,GAAgBC,GAC7CF,EAAeC,EAAfD,CAAmBE,EAAOwC,YExBDC,CAAe7B,EAAMb,IAExCO,EACJM,EAAMN,iBAAoB,GACtBoC,EAAWC,mBACf/B,EAAMb,GACNI,YAAUyC,WACVtC,GAGF,OACEqB,gDACGe,EAASG,IAAIC,GACZnB,wBAAChB,GACCoC,IAAKD,EAAKC,IACVzC,gBAAiBwC,EAAKxC,gBACtBU,gBACE8B,EAAK9B,gBAIPa,mBACEiB,EAAKjB,mBAEPN,QAASY,EACTJ,OAAQM,EACRJ,OAAQM,OChCLS,EAAqC,KAEhDC,YAAkB,CAChBC,MAAO,MACLC,EAAGC,WAELC,OAAO,KCLEC,EAA2BC,GAAY3C,IAClDoC,IAEA,MAAM1C,EAAkB,CACtBkD,GAAI5C,EAAM4C,IAAMD,EAASE,UACzBC,MAAO9C,EAAM8C,OAASH,EAASI,cAUjC,OANAC,YAAU,KACqB,mBAAlBhD,EAAMW,SACfX,EAAMW,WAEP,IAEII,wBAACO,GAAQ5B,gBAAiBA,EAAiBP,GAAIwD,EAASxD,MCbpD8D,EAAcC,oBAAkB,WAAEF,qBAAWG,aAC7CC,EAAYC,kBAAgB,WAAEL,qBAAWG,kBAAUG,WACnDC,EAAkBC,wBAAsB,WACnDR,qBACAG,wBACAM,iBAMWC,EACX1D,IAEAiD,EAAejD,GACR,MCtBI2D,EAAeC,qBAAmB,UAAET,mBAAUU,YCDrDC,EAASpB,EAAWY,UACpBS,EAAerB,EAAWe,uPF0B9BzD,GACGe,wBAAC2C,mBAAgB1D,GAAO2C,SAAUW,8CAGrCtD,GACGe,wBAAC2C,mBAAgB1D,GAAO2C,SAAUc"}
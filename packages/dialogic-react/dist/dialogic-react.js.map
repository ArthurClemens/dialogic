{"version":3,"file":"dialogic-react.js","sources":["../../dialogic/dist/dialogic.mjs"],"sourcesContent":["const pipe = (...fns) => (x) => fns.filter(Boolean).reduce((y, f) => f(y), x);\r\nconst getStyleValue = ({ domElement, prop }) => {\r\n    if (window.getComputedStyle) {\r\n        const defaultView = document.defaultView;\r\n        if (defaultView) {\r\n            const style = defaultView.getComputedStyle(domElement);\r\n            if (style) {\r\n                return style.getPropertyValue(prop);\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\n\nconst MODE = {\r\n    SHOW: \"show\",\r\n    HIDE: \"hide\"\r\n};\r\nconst removeTransitionClassNames = (domElement, transitionClassNames) => domElement.classList.remove(...transitionClassNames.showStart, ...transitionClassNames.showEnd, ...transitionClassNames.hideStart, ...transitionClassNames.hideEnd);\r\nconst applyTransitionStyles = (domElement, step, styles) => {\r\n    const transitionStyle = styles[step] || {};\r\n    Object.keys(transitionStyle).forEach((key) => {\r\n        const value = transitionStyle[key].toString();\r\n        domElement.style[key] = value;\r\n        // if (domElement.style[key] !== value) {\r\n        // \tconsole.warn(`Invalid style: ${key}: ${value} (${domElement.style[key]})`);\r\n        // }\r\n    });\r\n};\r\nconst applyNoDurationTransitionStyle = (domElement) => domElement.style.transitionDuration = \"0ms\";\r\nconst getTransitionStyles = (domElement, styles) => (typeof styles === \"function\"\r\n    ? styles(domElement)\r\n    : styles) || {};\r\nconst createClassList = (className, step) => className.split(/ /).map((n) => `${n}-${step}`);\r\nconst applyStylesForState = (domElement, props, step, isEnterStep) => {\r\n    if (props.styles) {\r\n        const styles = getTransitionStyles(domElement, props.styles);\r\n        applyTransitionStyles(domElement, \"default\", styles);\r\n        isEnterStep && applyNoDurationTransitionStyle(domElement);\r\n        applyTransitionStyles(domElement, step, styles);\r\n    }\r\n    if (props.className) {\r\n        const transitionClassNames = {\r\n            showStart: createClassList(props.className, \"show-start\"),\r\n            showEnd: createClassList(props.className, \"show-end\"),\r\n            hideStart: createClassList(props.className, \"hide-start\"),\r\n            hideEnd: createClassList(props.className, \"hide-end\"),\r\n        };\r\n        removeTransitionClassNames(domElement, transitionClassNames);\r\n        transitionClassNames && domElement.classList.add(...transitionClassNames[step]);\r\n    }\r\n    // reflow\r\n    domElement.scrollTop;\r\n};\r\nconst getDuration = (domElement) => {\r\n    const durationStyleValue = getStyleValue({ domElement, prop: \"transition-duration\" });\r\n    const durationValue = durationStyleValue !== undefined\r\n        ? styleDurationToMs(durationStyleValue)\r\n        : 0;\r\n    const delayStyleValue = getStyleValue({ domElement, prop: \"transition-delay\" });\r\n    const delayValue = delayStyleValue !== undefined\r\n        ? styleDurationToMs(delayStyleValue)\r\n        : 0;\r\n    return durationValue + delayValue;\r\n};\r\nconst steps = {\r\n    showStart: {\r\n        nextStep: \"showEnd\"\r\n    },\r\n    showEnd: {\r\n        nextStep: undefined\r\n    },\r\n    hideStart: {\r\n        nextStep: \"hideEnd\"\r\n    },\r\n    hideEnd: {\r\n        nextStep: undefined\r\n    },\r\n};\r\nconst transition = (props, mode) => {\r\n    const domElement = props.domElement;\r\n    if (!domElement) {\r\n        return Promise.resolve(\"no domElement\");\r\n    }\r\n    let currentStep = mode === MODE.SHOW\r\n        ? \"showStart\"\r\n        : \"hideStart\";\r\n    return new Promise(resolve => {\r\n        applyStylesForState(domElement, props, currentStep, currentStep === \"showStart\");\r\n        setTimeout(() => {\r\n            const nextStep = steps[currentStep].nextStep;\r\n            if (nextStep) {\r\n                currentStep = nextStep;\r\n                applyStylesForState(domElement, props, currentStep);\r\n                // addEventListener sometimes hangs this function because it never finishes\r\n                // Using setTimeout instead of addEventListener gives more consistent results\r\n                const duration = getDuration(domElement);\r\n                setTimeout(resolve, duration);\r\n            }\r\n        }, 0);\r\n    });\r\n};\r\nconst styleDurationToMs = (durationStr) => {\r\n    const parsed = parseFloat(durationStr) * (durationStr.indexOf(\"ms\") === -1 ? 1000 : 1);\r\n    return isNaN(parsed)\r\n        ? 0\r\n        : parsed;\r\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar stream = createCommonjsModule(function (module) {\n(function() {\n/* eslint-enable */\nStream.SKIP = {};\nStream.lift = lift;\nStream.scan = scan;\nStream.merge = merge;\nStream.combine = combine;\nStream.scanMerge = scanMerge;\nStream[\"fantasy-land/of\"] = Stream;\n\nvar warnedHalt = false;\nObject.defineProperty(Stream, \"HALT\", {\n\tget: function() {\n\t\twarnedHalt || console.log(\"HALT is deprecated and has been renamed to SKIP\");\n\t\twarnedHalt = true;\n\t\treturn Stream.SKIP\n\t}\n});\n\nfunction Stream(value) {\n\tvar dependentStreams = [];\n\tvar dependentFns = [];\n\n\tfunction stream(v) {\n\t\tif (arguments.length && v !== Stream.SKIP) {\n\t\t\tvalue = v;\n\t\t\tif (open(stream)) {\n\t\t\t\tstream._changing();\n\t\t\t\tstream._state = \"active\";\n\t\t\t\tdependentStreams.forEach(function(s, i) { s(dependentFns[i](value)); });\n\t\t\t}\n\t\t}\n\n\t\treturn value\n\t}\n\n\tstream.constructor = Stream;\n\tstream._state = arguments.length && value !== Stream.SKIP ? \"active\" : \"pending\";\n\tstream._parents = [];\n\n\tstream._changing = function() {\n\t\tif (open(stream)) stream._state = \"changing\";\n\t\tdependentStreams.forEach(function(s) {\n\t\t\ts._changing();\n\t\t});\n\t};\n\n\tstream._map = function(fn, ignoreInitial) {\n\t\tvar target = ignoreInitial ? Stream() : Stream(fn(value));\n\t\ttarget._parents.push(stream);\n\t\tdependentStreams.push(target);\n\t\tdependentFns.push(fn);\n\t\treturn target\n\t};\n\n\tstream.map = function(fn) {\n\t\treturn stream._map(fn, stream._state !== \"active\")\n\t};\n\n\tvar end;\n\tfunction createEnd() {\n\t\tend = Stream();\n\t\tend.map(function(value) {\n\t\t\tif (value === true) {\n\t\t\t\tstream._parents.forEach(function (p) {p._unregisterChild(stream);});\n\t\t\t\tstream._state = \"ended\";\n\t\t\t\tstream._parents.length = dependentStreams.length = dependentFns.length = 0;\n\t\t\t}\n\t\t\treturn value\n\t\t});\n\t\treturn end\n\t}\n\n\tstream.toJSON = function() { return value != null && typeof value.toJSON === \"function\" ? value.toJSON() : value };\n\n\tstream[\"fantasy-land/map\"] = stream.map;\n\tstream[\"fantasy-land/ap\"] = function(x) { return combine(function(s1, s2) { return s1()(s2()) }, [x, stream]) };\n\n\tstream._unregisterChild = function(child) {\n\t\tvar childIndex = dependentStreams.indexOf(child);\n\t\tif (childIndex !== -1) {\n\t\t\tdependentStreams.splice(childIndex, 1);\n\t\t\tdependentFns.splice(childIndex, 1);\n\t\t}\n\t};\n\n\tObject.defineProperty(stream, \"end\", {\n\t\tget: function() { return end || createEnd() }\n\t});\n\n\treturn stream\n}\n\nfunction combine(fn, streams) {\n\tvar ready = streams.every(function(s) {\n\t\tif (s.constructor !== Stream)\n\t\t\tthrow new Error(\"Ensure that each item passed to stream.combine/stream.merge/lift is a stream\")\n\t\treturn s._state === \"active\"\n\t});\n\tvar stream = ready\n\t\t? Stream(fn.apply(null, streams.concat([streams])))\n\t\t: Stream();\n\n\tvar changed = [];\n\n\tvar mappers = streams.map(function(s) {\n\t\treturn s._map(function(value) {\n\t\t\tchanged.push(s);\n\t\t\tif (ready || streams.every(function(s) { return s._state !== \"pending\" })) {\n\t\t\t\tready = true;\n\t\t\t\tstream(fn.apply(null, streams.concat([changed])));\n\t\t\t\tchanged = [];\n\t\t\t}\n\t\t\treturn value\n\t\t}, true)\n\t});\n\n\tvar endStream = stream.end.map(function(value) {\n\t\tif (value === true) {\n\t\t\tmappers.forEach(function(mapper) { mapper.end(true); });\n\t\t\tendStream.end(true);\n\t\t}\n\t\treturn undefined\n\t});\n\n\treturn stream\n}\n\nfunction merge(streams) {\n\treturn combine(function() { return streams.map(function(s) { return s() }) }, streams)\n}\n\nfunction scan(fn, acc, origin) {\n\tvar stream = origin.map(function(v) {\n\t\tvar next = fn(acc, v);\n\t\tif (next !== Stream.SKIP) acc = next;\n\t\treturn next\n\t});\n\tstream(acc);\n\treturn stream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) { return tuple[0] });\n\n\tvar stream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1];\n\t\tstreams.forEach(function(stream, i) {\n\t\t\tif (changed.indexOf(stream) > -1)\n\t\t\t\tseed = tuples[i][1](seed, stream());\n\t\t});\n\n\t\treturn seed\n\t}, streams);\n\n\tstream(seed);\n\n\treturn stream\n}\n\nfunction lift() {\n\tvar fn = arguments[0];\n\tvar streams = Array.prototype.slice.call(arguments, 1);\n\treturn merge(streams).map(function(streams) {\n\t\treturn fn.apply(undefined, streams)\n\t})\n}\n\nfunction open(s) {\n\treturn s._state === \"pending\" || s._state === \"active\" || s._state === \"changing\"\n}\n\nmodule[\"exports\"] = Stream;\n\n}());\n});\n\nconst findItem = (id, items) => {\r\n    return items.find(item => item.id === id);\r\n};\r\nconst itemIndex = (id, items) => {\r\n    const item = findItem(id, items);\r\n    return items.indexOf(item);\r\n};\r\nconst removeItem = (id, items) => {\r\n    const index = itemIndex(id, items);\r\n    if (index !== -1) {\r\n        items.splice(index, 1);\r\n    }\r\n    return items;\r\n};\r\nconst createId = (identityOptions, ns) => [ns, identityOptions.id, identityOptions.spawn].filter(Boolean).join(\"-\");\r\nconst store = {\r\n    initialState: {\r\n        store: {},\r\n    },\r\n    actions: (update) => {\r\n        return {\r\n            /**\r\n             * Add an item to the end of the list.\r\n             */\r\n            add: (ns, item) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    state.store[ns] = [...items, item];\r\n                    if (item.timer) {\r\n                        // When the timer state updates, refresh the store so that UI can pick up the change\r\n                        item.timer.states.map(() => store.actions(update).refresh());\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes the first item with a match on `id`.\r\n             */\r\n            remove: (ns, id) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    const remaining = removeItem(id, items);\r\n                    state.store[ns] = remaining;\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces the first item with a match on `id` with a newItem.\r\n             */\r\n            replace: (ns, id, newItem) => {\r\n                update((state) => {\r\n                    const items = state.store[ns] || [];\r\n                    if (items) {\r\n                        const index = itemIndex(id, items);\r\n                        if (index !== -1) {\r\n                            items[index] = newItem;\r\n                            state.store[ns] = [...items];\r\n                        }\r\n                    }\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Removes all items within a namespace.\r\n             */\r\n            removeAll: (ns) => {\r\n                update((state) => {\r\n                    state.store[ns] = [];\r\n                    return state;\r\n                });\r\n            },\r\n            /**\r\n             * Replaces all items within a namespace.\r\n             */\r\n            store: (ns, newItems) => {\r\n                update((state) => {\r\n                    state.store[ns] = [...newItems];\r\n                    return state;\r\n                });\r\n            },\r\n            refresh: () => {\r\n                update((state) => {\r\n                    return {\r\n                        ...state,\r\n                    };\r\n                });\r\n            },\r\n        };\r\n    },\r\n    selectors: (states) => {\r\n        const fns = {\r\n            getStore: () => {\r\n                const state = states();\r\n                return state.store;\r\n            },\r\n            find: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const id = createId(identityOptions, ns);\r\n                const item = items.find((item) => item.id === id);\r\n                return item\r\n                    ? { just: item }\r\n                    : { nothing: undefined };\r\n            },\r\n            getAll: (ns, identityOptions) => {\r\n                const state = states();\r\n                const items = state.store[ns] || [];\r\n                const spawn = identityOptions !== undefined\r\n                    ? identityOptions.spawn\r\n                    : undefined;\r\n                const id = identityOptions !== undefined\r\n                    ? identityOptions.id\r\n                    : undefined;\r\n                const itemsBySpawn = spawn !== undefined\r\n                    ? items.filter(item => item.identityOptions.spawn === spawn)\r\n                    : items;\r\n                const itemsById = id !== undefined\r\n                    ? itemsBySpawn.filter(item => item.identityOptions.id === id)\r\n                    : itemsBySpawn;\r\n                return itemsById;\r\n            },\r\n            getCount: (ns, identityOptions) => fns.getAll(ns, identityOptions).length,\r\n        };\r\n        return fns;\r\n    },\r\n};\r\nconst update = stream();\r\nconst states = stream.scan((state, patch) => patch(state), {\r\n    ...store.initialState,\r\n}, update);\r\nconst actions = {\r\n    ...store.actions(update),\r\n};\r\nconst selectors = {\r\n    ...store.selectors(states),\r\n};\r\n// states.map(state => \r\n//   console.log(JSON.stringify(state, null, 2))\r\n// );\n\nconst initialState = {\r\n    callback: () => { },\r\n    isPaused: false,\r\n    onAbort: () => { },\r\n    onDone: () => { },\r\n    promise: undefined,\r\n    remaining: undefined,\r\n    startTime: undefined,\r\n    timeoutFn: () => { },\r\n    timerId: undefined,\r\n};\r\nconst appendStartTimer = (state, callback, duration, updateState) => {\r\n    const timeoutFn = () => {\r\n        callback();\r\n        state.onDone();\r\n        updateState();\r\n    };\r\n    return {\r\n        timeoutFn,\r\n        promise: new Promise((resolve, reject) => {\r\n            state.onDone = () => resolve();\r\n            state.onAbort = () => resolve();\r\n        }),\r\n        ...(state.isPaused\r\n            ? {}\r\n            : {\r\n                startTime: new Date().getTime(),\r\n                timerId: window.setTimeout(timeoutFn, duration),\r\n                remaining: duration,\r\n            })\r\n    };\r\n};\r\nconst appendStopTimeout = (state) => {\r\n    window.clearTimeout(state.timerId);\r\n    return {\r\n        timerId: initialState.timerId\r\n    };\r\n};\r\nconst appendStopTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n    };\r\n};\r\nconst appendPauseTimer = (state) => {\r\n    return {\r\n        ...appendStopTimeout(state),\r\n        isPaused: true,\r\n        remaining: getRemaining(state)\r\n    };\r\n};\r\nconst appendResumeTimer = (state, minimumDuration) => {\r\n    window.clearTimeout(state.timerId);\r\n    const remaining = minimumDuration\r\n        ? Math.max(state.remaining || 0, minimumDuration)\r\n        : state.remaining;\r\n    return {\r\n        startTime: new Date().getTime(),\r\n        isPaused: false,\r\n        remaining,\r\n        timerId: window.setTimeout(state.timeoutFn, remaining),\r\n    };\r\n};\r\nconst getRemaining = (state) => (state.remaining === 0 || state.remaining === undefined)\r\n    ? state.remaining\r\n    : state.remaining - (new Date().getTime() - (state.startTime || 0));\r\nconst Timer = () => {\r\n    const timer = {\r\n        initialState,\r\n        actions: (update) => {\r\n            return {\r\n                start: (callback, duration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                            ...appendStartTimer(state, callback, duration, () => timer.actions(update).done()),\r\n                            ...(state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimer(state),\r\n                            ...initialState\r\n                        };\r\n                    });\r\n                },\r\n                pause: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(!state.isPaused && appendPauseTimer(state)),\r\n                        };\r\n                    });\r\n                },\r\n                resume: (minimumDuration) => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                            ...(state.isPaused && appendResumeTimer(state, minimumDuration))\r\n                        };\r\n                    });\r\n                },\r\n                abort: () => {\r\n                    update((state) => {\r\n                        state.onAbort();\r\n                        return {\r\n                            ...state,\r\n                            ...appendStopTimeout(state),\r\n                        };\r\n                    });\r\n                },\r\n                done: () => {\r\n                    update((state) => {\r\n                        return initialState;\r\n                    });\r\n                },\r\n                refresh: () => {\r\n                    update((state) => {\r\n                        return {\r\n                            ...state,\r\n                        };\r\n                    });\r\n                },\r\n            };\r\n        },\r\n        selectors: (states) => {\r\n            return {\r\n                isPaused: () => {\r\n                    const state = states();\r\n                    return state.isPaused;\r\n                },\r\n                getRemaining: () => {\r\n                    const state = states();\r\n                    return state.isPaused\r\n                        ? state.remaining\r\n                        : getRemaining(state);\r\n                },\r\n                getResultPromise: () => {\r\n                    const state = states();\r\n                    return state.promise;\r\n                },\r\n            };\r\n        },\r\n    };\r\n    const update = stream();\r\n    const states = stream.scan((state, patch) => patch(state), {\r\n        ...timer.initialState,\r\n    }, update);\r\n    const actions = {\r\n        ...timer.actions(update),\r\n    };\r\n    const selectors = {\r\n        ...timer.selectors(states),\r\n    };\r\n    // states.map(state => \r\n    //   console.log(JSON.stringify(state, null, 2))\r\n    // );\r\n    return {\r\n        states,\r\n        actions,\r\n        selectors,\r\n    };\r\n};\n\nlet uid = 0;\r\nconst getUid = () => uid === Number.MAX_SAFE_INTEGER\r\n    ? 0\r\n    : uid++;\r\nconst transitionStates = {\r\n    default: 0,\r\n    displaying: 1,\r\n    hiding: 2,\r\n};\r\nconst getMaybeItem = (ns) => (defaultDialogicOptions) => (identityOptions) => selectors.find(ns, getMergedIdentityOptions(defaultDialogicOptions, identityOptions));\r\nconst filterBySpawn = (identityOptions) => (items) => identityOptions.spawn !== undefined\r\n    ? items.filter(item => (item.identityOptions.spawn === identityOptions.spawn))\r\n    : items;\r\nconst filterById = (identityOptions) => (items) => identityOptions.id !== undefined\r\n    ? items.filter(item => (item.identityOptions.id === identityOptions.id))\r\n    : items;\r\n/**\r\n * Gets a list of all non-queued items.\r\n * From the queued items only the first item is listed.\r\n * */\r\nconst filterFirstInQueue = (nsItems) => {\r\n    let queuedCount = 0;\r\n    return nsItems\r\n        .map(item => ({\r\n        item,\r\n        queueCount: item.dialogicOptions.queued\r\n            ? queuedCount++\r\n            : 0\r\n    }))\r\n        .filter(({ queueCount }) => queueCount === 0)\r\n        .map(({ item }) => item);\r\n};\r\nconst filterCandidates = (ns, items, identityOptions) => {\r\n    const nsItems = items[ns] || [];\r\n    if (nsItems.length == 0) {\r\n        return [];\r\n    }\r\n    return pipe(filterBySpawn(identityOptions), filterFirstInQueue)(nsItems);\r\n};\r\nconst getPassThroughOptions = options => {\r\n    const copy = {\r\n        ...options,\r\n    };\r\n    delete copy.dialogic;\r\n    return copy;\r\n};\r\nconst getMergedIdentityOptions = (defaultDialogicOptions, identityOptions = {}) => ({\r\n    id: identityOptions.id || defaultDialogicOptions.id,\r\n    spawn: identityOptions.spawn || defaultDialogicOptions.spawn,\r\n});\r\nconst handleOptions = (defaultDialogicOptions, options = {}) => {\r\n    const identityOptions = {\r\n        id: options.dialogic ? options.dialogic.id : undefined,\r\n        spawn: options.dialogic ? options.dialogic.spawn : undefined\r\n    };\r\n    const mergedIdentityOptions = getMergedIdentityOptions(defaultDialogicOptions || {}, identityOptions);\r\n    const dialogicOptions = {\r\n        ...defaultDialogicOptions,\r\n        ...options.dialogic\r\n    };\r\n    const passThroughOptions = getPassThroughOptions(options);\r\n    return {\r\n        identityOptions: mergedIdentityOptions,\r\n        dialogicOptions,\r\n        passThroughOptions,\r\n    };\r\n};\r\nconst createInstance = (ns) => (defaultDialogicOptions) => (options = {}) => {\r\n    const { identityOptions, dialogicOptions, passThroughOptions } = handleOptions(defaultDialogicOptions, options);\r\n    return new Promise(resolve => {\r\n        const callbacks = {\r\n            didShow: (item) => {\r\n                if (dialogicOptions.didShow) {\r\n                    dialogicOptions.didShow(item);\r\n                }\r\n                return resolve(item);\r\n            },\r\n            didHide: (item) => {\r\n                if (dialogicOptions.didHide) {\r\n                    dialogicOptions.didHide(item);\r\n                }\r\n                return resolve(item);\r\n            }\r\n        };\r\n        const item = {\r\n            ns,\r\n            identityOptions,\r\n            dialogicOptions,\r\n            callbacks,\r\n            passThroughOptions,\r\n            id: createId(identityOptions, ns),\r\n            timer: dialogicOptions.timeout\r\n                ? Timer()\r\n                : undefined,\r\n            key: getUid().toString(),\r\n            transitionState: transitionStates.default,\r\n        };\r\n        const maybeExistingItem = selectors.find(ns, identityOptions);\r\n        if (maybeExistingItem.just && dialogicOptions.toggle) {\r\n            const hideResult = hide(ns)(defaultDialogicOptions)(options);\r\n            return resolve(hideResult);\r\n        }\r\n        if (maybeExistingItem.just && !dialogicOptions.queued) {\r\n            const existingItem = maybeExistingItem.just;\r\n            // Preserve dialogicOptions\r\n            const dialogicOptions = existingItem.dialogicOptions;\r\n            const replacingItem = {\r\n                ...item,\r\n                transitionState: existingItem.transitionState,\r\n                dialogicOptions\r\n            };\r\n            actions.replace(ns, existingItem.id, replacingItem);\r\n        }\r\n        else {\r\n            actions.add(ns, item);\r\n            // This will instantiate and draw the instance\r\n            // The instance will call `showDialog` in `onMount`\r\n        }\r\n        resolve(item);\r\n    });\r\n};\r\nconst show = createInstance;\r\nconst hide = (ns) => (defaultDialogicOptions) => (options) => {\r\n    const { identityOptions, dialogicOptions, passThroughOptions } = handleOptions(defaultDialogicOptions, options);\r\n    const maybeExistingItem = selectors.find(ns, identityOptions);\r\n    if (maybeExistingItem.just) {\r\n        const existingItem = maybeExistingItem.just;\r\n        const item = {\r\n            ...existingItem,\r\n            dialogicOptions: {\r\n                ...existingItem.dialogicOptions,\r\n                ...dialogicOptions,\r\n            },\r\n            passThroughOptions: {\r\n                ...existingItem.passThroughOptions,\r\n                passThroughOptions\r\n            }\r\n        };\r\n        actions.replace(ns, existingItem.id, item);\r\n        if (item.transitionState !== transitionStates.hiding) {\r\n            return hideItem(item);\r\n        }\r\n        else {\r\n            return Promise.resolve(item);\r\n        }\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst pause = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const items = getValidItems(ns, identityOptions)\r\n        .filter(item => !!item.timer);\r\n    items.forEach((item) => item.timer && item.timer.actions.pause());\r\n    return Promise.all(items);\r\n};\r\nconst resume = (ns) => (defaultDialogicOptions) => (commandOptions) => {\r\n    const options = commandOptions || {};\r\n    const identityOptions = {\r\n        id: options.id,\r\n        spawn: options.spawn\r\n    };\r\n    const items = getValidItems(ns, identityOptions)\r\n        .filter(item => !!item.timer);\r\n    items.forEach((item) => item.timer && item.timer.actions.resume(options.minimumDuration));\r\n    return Promise.all(items);\r\n};\r\nconst getTimerProperty = (timerProp, defaultValue) => (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const maybeItem = getMaybeItem(ns)(defaultDialogicOptions)(identityOptions);\r\n    if (maybeItem.just) {\r\n        if (maybeItem.just && maybeItem.just.timer) {\r\n            return maybeItem.just.timer.selectors[timerProp]();\r\n        }\r\n        else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n};\r\nconst isPaused = getTimerProperty(\"isPaused\", false);\r\nconst getRemaining$1 = getTimerProperty(\"getRemaining\", undefined);\r\nconst exists = (ns) => (defaultDialogicOptions) => (identityOptions) => !!getValidItems(ns, identityOptions).length;\r\nconst getValidItems = (ns, identityOptions) => {\r\n    const allItems = selectors.getAll(ns);\r\n    let validItems;\r\n    if (identityOptions) {\r\n        validItems = pipe(filterBySpawn(identityOptions), filterById(identityOptions))(allItems);\r\n    }\r\n    else {\r\n        validItems = allItems;\r\n    }\r\n    return validItems;\r\n};\r\nconst resetAll = (ns) => (defaultDialogicOptions) => (identityOptions) => {\r\n    const validItems = getValidItems(ns, identityOptions);\r\n    const items = [];\r\n    validItems.forEach((item) => {\r\n        item.timer && item.timer.actions.abort();\r\n        items.push(item);\r\n    });\r\n    if (identityOptions) {\r\n        items.forEach((item) => {\r\n            actions.remove(ns, item.id);\r\n        });\r\n    }\r\n    else {\r\n        actions.removeAll(ns);\r\n    }\r\n    return Promise.resolve(items);\r\n};\r\nconst getOverridingTransitionOptions = (item, dialogicOptions) => {\r\n    return {\r\n        ...item,\r\n        dialogicOptions: {\r\n            ...item.dialogicOptions,\r\n            ...dialogicOptions\r\n        }\r\n    };\r\n};\r\n/**\r\n * Triggers a `hideItem` for each item in the store.\r\n * Queued items: will trigger `hideItem` only for the first item, then reset the store.\r\n * Optional `dialogicOptions` may be passed with specific transition options. This comes in handy when all items should hide in the same way.\r\n */\r\nconst hideAll = (ns) => (defaultDialogicOptions) => (dialogicOptions) => {\r\n    const options = dialogicOptions || {};\r\n    const identityOptions = {\r\n        id: options.id,\r\n        spawn: options.spawn\r\n    };\r\n    const validItems = getValidItems(ns, identityOptions);\r\n    const regularItems = validItems.filter((item) => !options.queued && !item.dialogicOptions.queued);\r\n    const queuedItems = validItems.filter((item) => options.queued || item.dialogicOptions.queued);\r\n    const items = [];\r\n    regularItems.forEach((item) => items.push(hideItem(getOverridingTransitionOptions(item, options))));\r\n    if (queuedItems.length > 0) {\r\n        const [current,] = queuedItems;\r\n        // Make sure that any remaining items don't suddenly appear\r\n        actions.store(ns, [current]);\r\n        // Transition the current item\r\n        items.push(hideItem(getOverridingTransitionOptions(current, options)));\r\n    }\r\n    return Promise.all(items);\r\n};\r\nconst getCount = (ns) => (identityOptions) => selectors.getCount(ns, identityOptions);\r\nconst transitionItem = (item, mode) => transition(item.dialogicOptions, mode);\r\nconst deferredHideItem = async function (item, timer, timeout) {\r\n    timer.actions.start(() => (hideItem(item)), timeout);\r\n    return getTimerProperty(\"getResultPromise\", undefined);\r\n};\r\nconst showItem = async function (item) {\r\n    if (item.transitionState !== transitionStates.displaying) {\r\n        item.transitionState = transitionStates.displaying;\r\n        await (transitionItem(item, MODE.SHOW));\r\n    }\r\n    item.callbacks.didShow && await (item.callbacks.didShow(item));\r\n    if (item.dialogicOptions.timeout && item.timer) {\r\n        await (deferredHideItem(item, item.timer, item.dialogicOptions.timeout));\r\n    }\r\n    return Promise.resolve(item);\r\n};\r\nconst hideItem = async function (item) {\r\n    item.transitionState = transitionStates.hiding;\r\n    // Stop any running timer\r\n    if (item.timer) {\r\n        item.timer.actions.stop();\r\n    }\r\n    await (transitionItem(item, MODE.HIDE));\r\n    item.callbacks.didHide && await (item.callbacks.didHide(item));\r\n    const copy = {\r\n        ...item\r\n    };\r\n    actions.remove(item.ns, item.id);\r\n    return Promise.resolve(copy);\r\n};\r\nconst setDomElement = (domElement, item) => {\r\n    item.dialogicOptions.domElement = domElement;\r\n};\n\nconst dialogical = ({ ns, queued, timeout }) => {\r\n    const defaultId = `default_${ns}`;\r\n    const defaultSpawn = `default_${ns}`;\r\n    const defaultDialogicOptions = {\r\n        id: defaultId,\r\n        spawn: defaultSpawn,\r\n        ...(queued && { queued }),\r\n        ...(timeout !== undefined && { timeout }),\r\n    };\r\n    return {\r\n        // Identification\r\n        ns,\r\n        defaultId,\r\n        defaultSpawn,\r\n        // Configuration\r\n        defaultDialogicOptions,\r\n        // Commands\r\n        show: show(ns)(defaultDialogicOptions),\r\n        hide: hide(ns)(defaultDialogicOptions),\r\n        hideAll: hideAll(ns)(defaultDialogicOptions),\r\n        resetAll: resetAll(ns)(defaultDialogicOptions),\r\n        // Timer commands\r\n        pause: pause(ns)(defaultDialogicOptions),\r\n        resume: resume(ns)(defaultDialogicOptions),\r\n        // State\r\n        exists: exists(ns)(defaultDialogicOptions),\r\n        getCount: getCount(ns),\r\n        // Timer state\r\n        isPaused: isPaused(ns)(defaultDialogicOptions),\r\n        getRemaining: getRemaining$1(ns)(defaultDialogicOptions),\r\n    };\r\n};\n\nconst dialog = dialogical({ ns: \"dialog\" });\n\nconst notification = dialogical({ ns: \"notification\", queued: true, timeout: 3000 });\n\n/**\r\n * Utility script that uses an animation frame to pass the current remaining value\r\n * (which is utilized when setting `timeout`).\r\n */\r\nconst remaining = (props) => {\r\n    let displayValue = undefined;\r\n    let reqId;\r\n    let isCanceled = false;\r\n    const update = () => {\r\n        const remaining = props.instance.getRemaining();\r\n        if (displayValue !== remaining) {\r\n            displayValue = remaining === undefined\r\n                ? remaining\r\n                : props.roundToSeconds\r\n                    ? Math.round(Math.max(remaining, 0) / 1000)\r\n                    : Math.max(remaining, 0);\r\n        }\r\n        props.callback(displayValue);\r\n        if (!props.instance.exists()) {\r\n            window.cancelAnimationFrame(reqId);\r\n            isCanceled = true;\r\n        }\r\n        else if (!isCanceled) {\r\n            reqId = window.requestAnimationFrame(update);\r\n        }\r\n    };\r\n    reqId = window.requestAnimationFrame(update);\r\n};\n\nexport { actions, dialog, dialogical, exists, filterCandidates, getCount, getRemaining$1 as getRemaining, getTimerProperty, hide, hideAll, hideItem, isPaused, notification, pause, remaining, resetAll, resume, selectors, setDomElement, show, showItem, states };\n//# sourceMappingURL=dialogic.mjs.map\n"],"names":["pipe","fns","x","filter","Boolean","reduce","y","f","getStyleValue","domElement","prop","window","getComputedStyle","defaultView","document","style","getPropertyValue","MODE","applyTransitionStyles","step","styles","transitionStyle","Object","keys","forEach","key","value","toString","createClassList","className","split","map","n","applyStylesForState","props","isEnterStep","getTransitionStyles","transitionDuration","applyNoDurationTransitionStyle","transitionClassNames","showStart","showEnd","hideStart","hideEnd","classList","remove","removeTransitionClassNames","add","scrollTop","steps","nextStep","undefined","transition","mode","Promise","resolve","currentStep","setTimeout","duration","durationStyleValue","durationValue","styleDurationToMs","delayStyleValue","getDuration","durationStr","parsed","parseFloat","indexOf","isNaN","stream","fn","module","exports","createCommonjsModule","Stream","SKIP","lift","arguments","merge","Array","prototype","slice","call","streams","apply","scan","acc","origin","v","next","combine","scanMerge","tuples","seed","tuple","changed","length","i","warnedHalt","end","dependentStreams","dependentFns","open","_changing","_state","s","constructor","_parents","_map","ignoreInitial","target","push","toJSON","s1","s2","_unregisterChild","child","childIndex","splice","defineProperty","get","p","ready","every","Error","concat","mappers","endStream","mapper","console","log","itemIndex","id","items","item","find","findItem","createId","identityOptions","ns","spawn","join","store","initialState","actions","update","state","timer","states","refresh","remaining","index","removeItem","replace","newItem","removeAll","newItems","selectors","getStore","just","nothing","getAll","itemsBySpawn","getCount","patch","callback","isPaused","onAbort","onDone","promise","startTime","timeoutFn","timerId","appendStartTimer","updateState","reject","Date","getTime","appendStopTimeout","clearTimeout","appendStopTimer","appendPauseTimer","getRemaining","appendResumeTimer","minimumDuration","Math","max","Timer","start","done","stop","pause","resume","abort","getResultPromise","uid","getUid","Number","MAX_SAFE_INTEGER","transitionStates","filterBySpawn","filterFirstInQueue","nsItems","queuedCount","queueCount","dialogicOptions","queued","getMergedIdentityOptions","defaultDialogicOptions","handleOptions","options","dialogic","passThroughOptions","copy","getPassThroughOptions","show","callbacks","didShow","didHide","timeout","transitionState","maybeExistingItem","toggle","hideResult","hide","existingItem","replacingItem","hideItem","getValidItems","all","commandOptions","getTimerProperty","timerProp","defaultValue","maybeItem","getMaybeItem","getRemaining$1","exists","allItems","validItems","filterById","resetAll","getOverridingTransitionOptions","hideAll","regularItems","queuedItems","current","transitionItem","showItem","async","dialogical","defaultId","defaultSpawn","dialog","notification","reqId","displayValue","isCanceled","instance","roundToSeconds","round","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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"}
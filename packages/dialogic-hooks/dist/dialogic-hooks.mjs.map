{"version":3,"file":"dialogic-hooks.mjs","sources":["../src/sharedUseDialogic.ts","../src/sharedUseRemaining.ts"],"sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { Dialogic } from 'dialogic';\n\nimport type { DependencyList, TUseEffect, TUseState } from './types';\n\nexport type UseDialogicProps<T> = {\n  /**\n   * Condition when the instance should be shown.\n   */\n  isShow?: boolean;\n\n  /**\n   * For directed use only. Condition when the instance should be hidden.\n   */\n  isHide?: boolean;\n\n  /**\n   * Props to pass to the instance.\n   */\n  props?: Dialogic.Options<T>;\n\n  /**\n   * Reevaluates condition whenever one of the passed values changes.\n   */\n  deps?: DependencyList;\n\n  /**\n   * If true, no effects are run. Useful for conditionally disabling the hook.\n   */\n  isIgnore?: boolean;\n};\n\nexport type UseDialogicInstanceProps<T> = UseDialogicProps<T> & {\n  /**\n   * Instance to show.\n   */\n  instance: Dialogic.DialogicInstance;\n};\n\nlet useDialogicCounter = 0;\n\ntype SharedUseDialogicProps = {\n  useEffect: TUseEffect;\n  useState: TUseState;\n};\n\nexport const sharedUseDialogic = ({\n  useEffect,\n  useState,\n}: SharedUseDialogicProps) => <T>(allProps: UseDialogicInstanceProps<T>) => {\n  const {\n    isIgnore,\n    isShow,\n    isHide,\n    instance,\n    deps = [],\n    props = {} as T & Dialogic.Options<T>,\n  } = allProps;\n\n  // Create an id if not set.\n  // This is useful for pages with multiple dialogs, where we can't expect\n  // to have the user set an explicit id for each.\n  // eslint-disable-next-line no-plusplus\n  const [id] = useState(useDialogicCounter++);\n  const augProps = {\n    ...props,\n    ...(props.dialogic\n      ? {\n          dialogic: {\n            ...props.dialogic,\n            id: props.dialogic.id || id,\n          },\n        }\n      : {\n          dialogic: {\n            id,\n          },\n        }),\n  };\n\n  const showInstance = () => {\n    instance.show<T>(augProps);\n  };\n\n  const hideInstance = () => {\n    instance.hide<T>(augProps);\n  };\n\n  // maybe show\n  useEffect(() => {\n    if (isIgnore) return;\n    if (isShow !== undefined) {\n      if (isShow) {\n        showInstance();\n      } else {\n        hideInstance();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...deps, isShow]);\n\n  // maybe hide\n  useEffect(() => {\n    if (isIgnore) return;\n    if (isHide !== undefined) {\n      if (isHide) {\n        hideInstance();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...deps, isHide]);\n\n  // unmount\n  useEffect(() => {\n    if (isIgnore) return;\n    // eslint-disable-next-line consistent-return\n    return () => {\n      hideInstance();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    show: showInstance,\n    hide: hideInstance,\n  };\n};\n\n/**\n * `useDialogic` with `instance` set to `dialog`.\n */\nexport const sharedUseDialog = ({\n  useEffect,\n  useState,\n  dialog,\n}: SharedUseDialogicProps & { dialog: Dialogic.DialogicInstance }) => <T>(\n  props: T,\n) =>\n  sharedUseDialogic({ useEffect, useState })<T>({\n    ...props,\n    instance: dialog,\n  });\n\n/**\n * `useDialogic` with `instance` set to `notification`.\n */\nexport const sharedUseNotification = ({\n  useEffect,\n  useState,\n  notification,\n}: SharedUseDialogicProps & { notification: Dialogic.DialogicInstance }) => <T>(\n  props: T,\n) =>\n  sharedUseDialogic({ useEffect, useState })<T>({\n    ...props,\n    instance: notification,\n  });\n","import { Dialogic, remaining } from 'dialogic';\n\nimport type { TUseMemo, TUseState } from './types';\n\ntype SharedUseRemainingProps = {\n  useMemo: TUseMemo;\n  useState: TUseState;\n};\n\ntype UseRemainingProps = {\n  instance: Dialogic.DialogicInstance;\n  id?: string;\n  spawn?: string;\n  roundToSeconds?: boolean;\n};\n\nexport const sharedUseRemaining = ({\n  useState,\n  useMemo,\n}: SharedUseRemainingProps) => (props: UseRemainingProps) => {\n  const [value, setValue] = useState<number | undefined>(undefined);\n  const identity = {\n    id: props.id,\n    spawn: props.spawn,\n  };\n  const exists = !!props.instance.exists(identity);\n  useMemo(() => {\n    if (exists) {\n      remaining({\n        ...identity,\n        instance: props.instance,\n        roundToSeconds: props.roundToSeconds,\n        callback: newValue => {\n          setValue(newValue);\n        },\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [exists]);\n\n  return [value];\n};\n"],"names":[],"mappings":"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"}
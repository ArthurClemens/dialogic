!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("dialogic")):"function"==typeof define&&define.amd?define(["exports","dialogic"],i):i((e="undefined"!=typeof globalThis?globalThis:e||self).dialogicHooks={},e.dialogic)}(this,(function(e,i){"use strict";let s=0;const o=({useEffect:e,useState:i})=>o=>{const{isIgnore:t,isShow:n,isHide:d,instance:a,deps:c=[],props:f={}}=o,[u]=i(s++),l={...f,...f.dialogic?{dialogic:{...f.dialogic,id:f.dialogic.id||u}}:{dialogic:{id:u}}},r=()=>{a.show(l)},g=()=>{a.hide(l)};return e(()=>{t||void 0!==n&&(n?r():g())},[...c,n]),e(()=>{t||void 0!==d&&d&&g()},[...c,d]),e(()=>{if(!t)return()=>{g()}},[]),{show:r,hide:g}};e.sharedUseDialog=({useEffect:e,useState:i,dialog:s})=>t=>o({useEffect:e,useState:i})({...t,instance:s}),e.sharedUseDialogic=o,e.sharedUseNotification=({useEffect:e,useState:i,notification:s})=>t=>o({useEffect:e,useState:i})({...t,instance:s}),e.sharedUseRemaining=({useState:e,useMemo:s})=>o=>{const[t,n]=e(void 0),d={id:o.id,spawn:o.spawn},a=!!o.instance.exists(d);return s(()=>{a&&i.remaining({...d,instance:o.instance,roundToSeconds:o.roundToSeconds,callback:e=>{n(e)}})},[a]),[t]},Object.defineProperty(e,"__esModule",{value:!0})}));
